{"version":3,"file":"component---src-pages-learn-anagram-js-91cf40dc071916f50c01.js","mappings":"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","sources":["webpack://learn-cryptic/./src/pages/learn/anagram.js","webpack://learn-cryptic/./src/assets/img/logo-short.png","webpack://learn-cryptic/./src/components/TopBar.js","webpack://learn-cryptic/./src/components/layout.js","webpack://learn-cryptic/./src/components/bottom/Button.js","webpack://learn-cryptic/./src/components/bottom/ButtonContainer.js"],"sourcesContent":["import React, { useContext, useEffect } from 'react'\nimport Layout from '../../components/layout'\nimport { UserContext } from '../../utils/UserContext'\nimport ButtonContainer from '../../components/bottom/ButtonContainer'\n\nconst Anagram = () => {\n\tconst { setReturnLearn, typeViewed, setTypeViewed } = useContext(UserContext)\n\n\tconst hasBeenViewed = typeViewed.find((viewed) => viewed === 'anagram')\n\tuseEffect(() => {\n\t\tif (!hasBeenViewed && typeof setTypeViewed === 'function') {\n\t\t\tsetTypeViewed('anagram')\n\t\t}\n\t}, [hasBeenViewed, setTypeViewed])\n\n\tconst backButton = (\n\t\t<button onClick={() => window.history.back()} aria-label='Go back'>\n\t\t\t<svg\n\t\t\t\tclassName='back-button fill-neutral-600 dark:fill-neutral-400'\n\t\t\t\txmlns='http://www.w3.org/2000/svg'\n\t\t\t\twidth='25px'\n\t\t\t\theight='25px'\n\t\t\t\tviewBox='0 0 448 512'\n\t\t\t>\n\t\t\t\t<path d='M9.4 233.4c-12.5 12.5-12.5 32.8 0 45.3l160 160c12.5 12.5 32.8 12.5 45.3 0s12.5-32.8 0-45.3L109.2 288 416 288c17.7 0 32-14.3 32-32s-14.3-32-32-32l-306.7 0L214.6 118.6c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0l-160 160z' />\n\t\t\t</svg>\n\t\t</button>\n\t)\n\n\t// buttons\n\tconst buttons = {\n\t\teasyClue: {\n\t\t\tpath: '/clues/97',\n\t\t\tname: 'Play an anagram clue',\n\t\t\tstyle: 'primary',\n\t\t\tonClick: function () {\n\t\t\t\tsetReturnLearn('anagram')\n\t\t\t},\n\t\t},\n\t\treturn: {\n\t\t\tpath: '/learn#learn-types',\n\t\t\tname: 'Back to Learn',\n\t\t\tstyle: 'secondary',\n\t\t},\n\t\tnext: {\n\t\t\tpath: '/learn/charade',\n\t\t\tname: 'Next (Charade)',\n\t\t\tstyle: 'alt',\n\t\t},\n\t}\n\tconst btnArr1 = [buttons.easyClue]\n\tconst btnArr2 = [buttons.return, buttons.next]\n\n\tconst indicatorArr = [\n\t\t'new',\n\t\t'broken',\n\t\t'mad',\n\t\t'crazy',\n\t\t'wild',\n\t\t'scrambled',\n\t\t'mixed',\n\t\t'shaken',\n\t\t'rearranged',\n\t\t'confused',\n\t\t'odd',\n\t\t'unusual',\n\t\t'off',\n\t\t'dancing',\n\t\t'rocky',\n\t\t'stirred',\n\t]\n\tconst indicators = indicatorArr.map((indicator, index) => (\n\t\t<li key={index} className='indicator dark:!bg-[#47387b] dark:!text-white'>\n\t\t\t{indicator.toLowerCase()}\n\t\t</li>\n\t))\n\n\t// Handle anchor link\n\tuseEffect(() => {\n\t\tif (\n\t\t\ttypeof window !== 'undefined' &&\n\t\t\twindow.location.hash &&\n\t\t\twindow.location.hash.length > 1\n\t\t) {\n\t\t\tconst hash = window.location.hash\n\n\t\t\t// slight delay ensures element is present\n\t\t\tsetTimeout(() => {\n\t\t\t\ttry {\n\t\t\t\t\tconst el = document.querySelector(hash)\n\t\t\t\t\tif (el) {\n\t\t\t\t\t\tel.scrollIntoView({ behavior: 'instant' })\n\t\t\t\t\t}\n\t\t\t\t} catch (error) {\n\t\t\t\t\t// Silently handle any errors with scrollIntoView\n\t\t\t\t\tconsole.warn('Error scrolling to anchor:', error)\n\t\t\t\t}\n\t\t\t}, 10) // Increased timeout for better reliability\n\t\t} else {\n\t\t\tdocument.body.scrollTo(0, 0)\n\t\t}\n\t}, [])\n\n\treturn (\n\t\t<Layout>\n\t\t\t<div className='learn lc-container'>\n\t\t\t\t{backButton}\n\n\t\t\t\t<div className='learn-section'>\n\t\t\t\t\t<h2 className='text-4xl font-bold my-4'>Anagram</h2>\n\t\t\t\t\t<p className='my-2'>\n\t\t\t\t\t\tReorder the letters of a given word (or words) to make a new word\n\t\t\t\t\t\t(or words).\n\t\t\t\t\t</p>\n\t\t\t\t</div>\n\n\t\t\t\t<div className='learn-section'>\n\t\t\t\t\t<h2 className='text-2xl font-bold my-4'>Indicators</h2>\n\t\t\t\t\t<p className='my-2'>\n\t\t\t\t\t\tAn indicator will tip you off to the presence of an anagram. Common\n\t\t\t\t\t\tindicators include:\n\t\t\t\t\t</p>\n\t\t\t\t\t<ul className='indicators mt-3'>{indicators}</ul>\n\t\t\t\t</div>\n\n\t\t\t\t<div className='learn-section'>\n\t\t\t\t\t<h2 className='text-2xl font-bold my-4'>Examples</h2>\n\t\t\t\t\t<div className='example-container'>\n\t\t\t\t\t\t<p className='example'>One unusual role in \"The Matrix\" (3)</p>\n\t\t\t\t\t\t<div className='explanation dark:!bg-neutral-700 dark:!text-neutral-100'>\n\t\t\t\t\t\t\t<ul className='mt-0 list-disc my-3'>\n\t\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t\tThe definition is <strong>role in \"The Matrix\"</strong>\n\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t\t<strong>unusual</strong> is a signal to anagram the letters in{' '}\n\t\t\t\t\t\t\t\t\t<strong>One</strong>\n\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t\t<p className='text-center'>\n\t\t\t\t\t\t\t\t<strong>one</strong> → <strong>neo</strong>\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t<div className='solution'>\n\t\t\t\t\t\t\t\t<span className='letter'>n</span>\n\t\t\t\t\t\t\t\t<span className='letter'>e</span>\n\t\t\t\t\t\t\t\t<span className='letter'>o</span>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div className='example-container'>\n\t\t\t\t\t\t<p className='example'>Altering odd three-sided figure (8)</p>\n\t\t\t\t\t\t<div className='explanation dark:!bg-neutral-700 dark:!text-neutral-100'>\n\t\t\t\t\t\t\t<ul className='mt-0 list-disc my-3'>\n\t\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t\tThe definition is <strong>three-sided figure</strong>\n\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t\t<li>\n\t\t\t\t\t\t\t\t\t<strong>odd</strong> indicates that <strong>Altering</strong>{' '}\n\t\t\t\t\t\t\t\t\tis an anagram\n\t\t\t\t\t\t\t\t</li>\n\t\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t\t<p className='text-center'>\n\t\t\t\t\t\t\t\t<strong>altering</strong> → <strong>triangle</strong>\n\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t<div className='solution'>\n\t\t\t\t\t\t\t\t<span className='letter'>t</span>\n\t\t\t\t\t\t\t\t<span className='letter'>r</span>\n\t\t\t\t\t\t\t\t<span className='letter'>i</span>\n\t\t\t\t\t\t\t\t<span className='letter'>a</span>\n\t\t\t\t\t\t\t\t<span className='letter'>n</span>\n\t\t\t\t\t\t\t\t<span className='letter'>g</span>\n\t\t\t\t\t\t\t\t<span className='letter'>l</span>\n\t\t\t\t\t\t\t\t<span className='letter'>e</span>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div id='next' className='mt-4'>\n\t\t\t\t\t\t<ButtonContainer btnArr={btnArr1} />\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t<div className='learn-section'>\n\t\t\t\t\t<ButtonContainer btnArr={btnArr2} />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</Layout>\n\t)\n}\n\nexport default Anagram\n","export default __webpack_public_path__ + \"static/logo-short-1bc27782bd51e8a2c1a14d4b9578bf31.png\";","import React, { useContext, useState, useEffect } from 'react';\nimport { Link } from 'gatsby';\n\nimport { UserContext } from '../utils/UserContext';\n\nimport logo from '../assets/img/logo-short.png';\n// Custom info icon component\nconst InfoIcon = () => (\n  <svg\n    width='24'\n    height='24'\n    viewBox='0 0 24 24'\n    fill='none'\n    xmlns='http://www.w3.org/2000/svg'\n    className='text-neutral-500 dark:text-neutral-200'\n  >\n    <circle cx='12' cy='12' r='10' stroke='currentColor' strokeWidth='1.5' fill='none' />\n    <circle cx='12' cy='9' r='1' fill='currentColor' />\n    <path d='M11 12h2v5h-2z' fill='currentColor' />\n  </svg>\n);\n\nconst BarGraphIcon = () => (\n  <svg\n    width='24'\n    height='24'\n    viewBox='0 0 24 24'\n    fill='none'\n    xmlns='http://www.w3.org/2000/svg'\n    className='text-neutral-500 dark:text-neutral-200'\n  >\n    <rect x='3' y='10' width='4' height='8' rx='1' fill='currentColor' />\n    <rect x='9' y='6' width='4' height='12' rx='1' fill='currentColor' />\n    <rect x='15' y='13' width='4' height='5' rx='1' fill='currentColor' />\n  </svg>\n);\n\nconst Modal = ({ open, onClose, children }) => {\n  useEffect(() => {\n    const preventDefault = (e) => {\n      e.preventDefault();\n    };\n\n    if (open) {\n      // Prevent scrolling by blocking wheel and touch events\n      document.addEventListener('wheel', preventDefault, { passive: false });\n      document.addEventListener('touchmove', preventDefault, { passive: false });\n    }\n\n    // Cleanup function to remove event listeners\n    return () => {\n      document.removeEventListener('wheel', preventDefault);\n      document.removeEventListener('touchmove', preventDefault);\n    };\n  }, [open]);\n\n  if (!open) return null;\n  return (\n    <div className='modal-overlay' onClick={onClose}>\n      <div\n        className='modal-content bg-white dark:bg-neutral-800 text-neutral-900 dark:text-neutral-100'\n        onClick={(e) => e.stopPropagation()}\n      >\n        <button\n          className='modal-close text-neutral-500 dark:text-neutral-400 hover:text-neutral-700 dark:hover:text-neutral-200'\n          onClick={onClose}\n          aria-label='Close'\n        >\n          &times;\n        </button>\n        {children}\n      </div>\n    </div>\n  );\n};\n\nconst TopBar = () => {\n  const {\n    setReturnLearn,\n    completedClues = [],\n    streak = 0,\n    longestStreak = 0,\n    darkMode,\n    setDarkMode,\n  } = useContext(UserContext);\n  const [helpOpen, setHelpOpen] = useState(false);\n  const [statsOpen, setStatsOpen] = useState(false);\n\n  const clickTitle = () => {\n    setReturnLearn(false);\n  };\n\n  // Stats calculations\n  const totalSolved = completedClues.length;\n  const avgGuesses =\n    totalSolved > 0\n      ? (completedClues.reduce((sum, c) => sum + (c.guesses || 0), 0) / totalSolved).toFixed(1)\n      : '0';\n  const avgHints =\n    totalSolved > 0\n      ? (completedClues.reduce((sum, c) => sum + (c.hints || 0), 0) / totalSolved).toFixed(1)\n      : '0';\n\n  return (\n    <>\n      <header className='top-bar bg-white dark:bg-neutral-800 border-b border-neutral-200 dark:border-neutral-700'>\n        <div className='top-bar-container lc-container'>\n          <div className='topbar-left'>\n            <button\n              className='icon-btn hover:bg-neutral-100 dark:hover:bg-neutral-700 rounded-lg p-2 transition-colors'\n              aria-label='Help'\n              onClick={() => setHelpOpen(true)}\n            >\n              <InfoIcon />\n            </button>\n            <button\n              className='icon-btn hover:bg-neutral-100 dark:hover:bg-neutral-700 rounded-lg p-2 transition-colors'\n              aria-label='Stats'\n              onClick={() => setStatsOpen(true)}\n            >\n              <BarGraphIcon />\n            </button>\n          </div>\n          <Link to='/' onClick={clickTitle} className='topbar-logo'>\n            <img src={logo} alt='' />\n          </Link>\n        </div>\n      </header>\n      <Modal open={helpOpen} onClose={() => setHelpOpen(false)}>\n        <div className='mt-6'>\n          <h3 className='font-semibold mb-3'>Theme</h3>\n          <div className='flex mb-4'>\n            <div className='flex theme-picker-bg rounded-lg p-1 gap-1'>\n              <label className='flex items-center cursor-pointer'>\n                <input\n                  type='radio'\n                  name='theme'\n                  checked={darkMode === null}\n                  onChange={() => setDarkMode(null)}\n                  className='sr-only'\n                />\n                <span\n                  className={`px-3 py-1 text-sm rounded-md transition-colors ${\n                    darkMode === null\n                      ? 'bg-white dark:bg-neutral-600 text-neutral-900 dark:text-white shadow-sm'\n                      : 'text-neutral-600 dark:text-neutral-200 hover:text-neutral-900 dark:hover:text-white'\n                  }`}\n                >\n                  System\n                </span>\n              </label>\n              <label className='flex items-center cursor-pointer'>\n                <input\n                  type='radio'\n                  name='theme'\n                  checked={darkMode === false}\n                  onChange={() => setDarkMode(false)}\n                  className='sr-only'\n                />\n                <span\n                  className={`px-3 py-1 text-sm rounded-md transition-colors ${\n                    darkMode === false\n                      ? 'bg-white dark:bg-neutral-600 text-neutral-900 dark:text-white shadow-sm'\n                      : 'text-neutral-600 dark:text-neutral-200 hover:text-neutral-900 dark:hover:text-white'\n                  }`}\n                >\n                  Light\n                </span>\n              </label>\n              <label className='flex items-center cursor-pointer'>\n                <input\n                  type='radio'\n                  name='theme'\n                  checked={darkMode === true}\n                  onChange={() => setDarkMode(true)}\n                  className='sr-only'\n                />\n                <span\n                  className={`px-3 py-1 text-sm rounded-md transition-colors ${\n                    darkMode === true\n                      ? 'bg-white dark:bg-neutral-600 text-neutral-900 dark:text-white shadow-sm'\n                      : 'text-neutral-600 dark:text-neutral-200 hover:text-neutral-900 dark:hover:text-white'\n                  }`}\n                >\n                  Dark\n                </span>\n              </label>\n            </div>\n          </div>\n          <div className='mt-4 border-t border-neutral-200 dark:border-neutral-600 pt-4'>\n            <p>\n              <Link to='/learn' className='underline'>\n                What are cryptics?\n              </Link>\n            </p>\n\n            <p className='mt-4'>\n              <Link to='/creators' className='underline'>\n                About us\n              </Link>\n            </p>\n          </div>\n\n          <div className='mt-4 border-t border-neutral-200 dark:border-neutral-600 pt-4'>\n            <p>\n              Have questions, comments, or want to contribute future cryptic clues?\n              <a\n                href='mailto:learncrypticgame@gmail.com?subject=Learn Cryptic Feedback'\n                className='underline mt-2 block'\n              >\n                Email us\n              </a>\n            </p>\n          </div>\n        </div>\n      </Modal>\n      <Modal open={statsOpen} onClose={() => setStatsOpen(false)}>\n        <h2 className='my-3 text-xl font-semibold'>Statistics</h2>\n        <div className='stats-list'>\n          <div className='stat-item'>\n            🔥 <span className='font-medium mx-1'>Current Streak:</span> {streak}\n          </div>\n          <div className='stat-item'>\n            🏆 <span className='font-medium mx-1'>Longest Streak:</span> {longestStreak}\n          </div>\n          <div className='stat-item'>\n            🧩 <span className='font-medium mx-1'>Clues solved:</span> {totalSolved}\n          </div>\n          <div className='stat-item'>\n            🎯 <span className='font-medium mx-1'>Avg guesses:</span> {avgGuesses}\n          </div>\n          <div className='stat-item'>\n            💡 <span className='font-medium mx-1'>Avg hints:</span> {avgHints}\n          </div>\n        </div>\n      </Modal>\n    </>\n  );\n};\n\nexport default TopBar;\n","import React from 'react'\nimport TopBar from './TopBar'\nimport ScrollToTop from './ScrollToTop'\n\nconst Layout = ({ children }) => {\n\treturn (\n\t\t<div className=\"min-h-screen bg-white dark:bg-neutral-800 text-neutral-900 dark:text-neutral-100 transition-colors duration-200 flex flex-col\">\n\t\t\t{/* <ScrollToTop /> */}\n\t\t\t<TopBar />\n\t\t\t<main className=\"flex-1\">{children}</main>\n\t\t</div>\n\t)\n}\n\nexport default Layout\n\nexport { Head } from './Head'\n","import React from \"react\"\nimport { Link } from \"gatsby\"\n\nconst Button = ({ btnInfo }) => {\n\n\tconst { path = false, name, style, onClick, img = false, disabled = false } = btnInfo\n\n\t// Add dark mode classes based on button style\n\tconst getDarkModeClasses = (style) => {\n\t\tswitch(style) {\n\t\t\tcase 'primary':\n\t\t\t\treturn 'dark:!bg-[rgb(120,70,45)] dark:!border-[rgb(120,70,45)] dark:hover:!bg-orange-600'\n\t\t\tcase 'alt':\n\t\t\t\treturn 'dark:!bg-[#4A3F6B] dark:!border-[#4A3F6B] dark:hover:!bg-purple-600'\n\t\t\tcase 'secondary':\n\t\t\t\treturn 'dark:!border-neutral-300 dark:hover:!bg-neutral-700 dark:hover:!border-neutral-700'\n\t\t\tcase 'gray':\n\t\t\t\treturn 'dark:!bg-neutral-600 dark:!border-neutral-600 dark:hover:!bg-neutral-700'\n\t\t\tdefault:\n\t\t\t\treturn ''\n\t\t}\n\t}\n\n\tconst darkModeClasses = getDarkModeClasses(style)\n\n\treturn(<>\n\t\t{path ? \n\t\t\t<Link to={path} id={name.toLowerCase()} className={`show-btn ${style} ${darkModeClasses} ${disabled ? 'disabled' : ''}`} type='button' onClick={disabled ? undefined : onClick}>{name}</Link> : \n\t\t\t<button id={name.toLowerCase()} className={`show-btn ${style} ${darkModeClasses} ${disabled ? 'disabled' : ''}`} type='button' disabled={disabled} onClick={disabled ? undefined : onClick}>{name}{img}</button>\n\t\t}\n\t</>)\n}\n\nexport default Button","import React from 'react'\nimport Button from './Button'\n\nconst ButtonContainer = ({ btnArr, isSolution, stack = false }) => {\n\n\tconst buttons = btnArr.map((btnInfo, index) => <Button key={index} btnInfo={btnInfo} />)\n\n\treturn (\n\t\t<div className={`button-container${stack ? ' stack' : ''}${isSolution ? ' solution' : ''}`}>\n\t\t\t{buttons}\n\t\t</div>\n\t)\n}\n\nexport default ButtonContainer"],"names":["_useContext","useContext","UserContext","setReturnLearn","typeViewed","setTypeViewed","hasBeenViewed","find","viewed","useEffect","backButton","React","onClick","window","history","back","className","xmlns","width","height","viewBox","d","buttons","easyClue","path","name","style","return","next","btnArr1","btnArr2","indicators","map","indicator","index","key","toLowerCase","location","hash","length","setTimeout","el","document","querySelector","scrollIntoView","behavior","error","console","warn","body","scrollTo","Layout","id","ButtonContainer","btnArr","InfoIcon","fill","cx","cy","r","stroke","strokeWidth","BarGraphIcon","x","y","rx","Modal","_ref","open","onClose","children","preventDefault","e","addEventListener","passive","removeEventListener","stopPropagation","_useContext$completed","completedClues","_useContext$streak","streak","_useContext$longestSt","longestStreak","darkMode","setDarkMode","_useState2","_slicedToArray","useState","helpOpen","setHelpOpen","_useState4","statsOpen","setStatsOpen","totalSolved","avgGuesses","reduce","sum","c","guesses","toFixed","avgHints","hints","Link","to","src","logo","alt","type","checked","onChange","concat","href","TopBar","btnInfo","_btnInfo$path","_btnInfo$img","img","_btnInfo$disabled","disabled","darkModeClasses","getDarkModeClasses","undefined","isSolution","_ref$stack","stack","Button"],"sourceRoot":""}