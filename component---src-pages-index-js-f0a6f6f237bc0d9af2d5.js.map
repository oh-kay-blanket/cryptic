{"version":3,"file":"component---src-pages-index-js-f0a6f6f237bc0d9af2d5.js","mappings":"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","sources":["webpack://learn-cryptic/./src/components/bottom/Button.js","webpack://learn-cryptic/./src/components/bottom/ButtonContainer.js","webpack://learn-cryptic/./src/assets/img/logo.png","webpack://learn-cryptic/./src/pages/index.js","webpack://learn-cryptic/./src/components/Head.js","webpack://learn-cryptic/./src/assets/img/logo-short.png","webpack://learn-cryptic/./src/components/TopBar.js","webpack://learn-cryptic/./src/components/layout.js"],"sourcesContent":["import React from \"react\"\nimport { Link } from \"gatsby\"\n\nconst Button = ({ btnInfo }) => {\n\n\tconst { path = false, name, style, onClick, img = false, disabled = false } = btnInfo\n\n\t// Add dark mode classes based on button style\n\tconst getDarkModeClasses = (style) => {\n\t\tswitch(style) {\n\t\t\tcase 'primary':\n\t\t\t\treturn 'dark:!bg-[rgb(120,70,45)] dark:!border-[rgb(120,70,45)] dark:hover:!bg-orange-600'\n\t\t\tcase 'alt':\n\t\t\t\treturn 'dark:!bg-[#4A3F6B] dark:!border-[#4A3F6B] dark:hover:!bg-purple-600'\n\t\t\tcase 'secondary':\n\t\t\t\treturn 'dark:!border-neutral-300 dark:hover:!bg-neutral-700 dark:hover:!border-neutral-700'\n\t\t\tcase 'gray':\n\t\t\t\treturn 'dark:!bg-neutral-600 dark:!border-neutral-600 dark:hover:!bg-neutral-700'\n\t\t\tdefault:\n\t\t\t\treturn ''\n\t\t}\n\t}\n\n\tconst darkModeClasses = getDarkModeClasses(style)\n\n\treturn(<>\n\t\t{path ? \n\t\t\t<Link to={path} id={name.toLowerCase()} className={`show-btn ${style} ${darkModeClasses} ${disabled ? 'disabled' : ''}`} type='button' onClick={disabled ? undefined : onClick}>{name}</Link> : \n\t\t\t<button id={name.toLowerCase()} className={`show-btn ${style} ${darkModeClasses} ${disabled ? 'disabled' : ''}`} type='button' disabled={disabled} onClick={disabled ? undefined : onClick}>{name}{img}</button>\n\t\t}\n\t</>)\n}\n\nexport default Button","import React from 'react'\nimport Button from './Button'\n\nconst ButtonContainer = ({ btnArr, isSolution, stack = false }) => {\n\n\tconst buttons = btnArr.map((btnInfo, index) => <Button key={index} btnInfo={btnInfo} />)\n\n\treturn (\n\t\t<div className={`button-container${stack ? ' stack' : ''}${isSolution ? ' solution' : ''}`}>\n\t\t\t{buttons}\n\t\t</div>\n\t)\n}\n\nexport default ButtonContainer","export default __webpack_public_path__ + \"static/logo-970ad381a59d13c46205a044d5363190.png\";","import React, { useContext, useEffect } from 'react'\nimport { graphql } from 'gatsby'\nimport ButtonContainer from '../components/bottom/ButtonContainer'\nimport logo from '../assets/img/logo.png'\nimport { UserContext } from '../utils/UserContext'\nimport Layout from '../components/layout'\n\nconst Title = ({ data }) => {\n\tconst cluesData = data.allCluesJson.nodes\n\tconst { completedClues, streak } = useContext(UserContext)\n\n\t// Add loading state to prevent flicker\n\tconst [isContextLoaded, setIsContextLoaded] = React.useState(false)\n\n\tReact.useEffect(() => {\n\t\t// Set context as loaded after a brief delay to ensure localStorage has been read\n\t\tconst timer = setTimeout(() => {\n\t\t\tsetIsContextLoaded(true)\n\t\t}, 100)\n\n\t\treturn () => clearTimeout(timer)\n\t}, [])\n\n\t// Add fixed-page class to prevent scrolling\n\tuseEffect(() => {\n\t\tif (typeof window !== 'undefined') {\n\t\t\tdocument.body.classList.add('fixed-page')\n\t\t\treturn () => {\n\t\t\t\tdocument.body.classList.remove('fixed-page')\n\t\t\t}\n\t\t}\n\t}, [])\n\n\tconst completedGuess = completedClues.filter((clue) => clue.how === 'g')\n\n\tconst knownUser = completedGuess && completedGuess.length > 0 ? true : false\n\tconst avgGuesses = knownUser\n\t\t? (\n\t\t\t\tcompletedGuess.reduce((sum, item) => sum + item.guesses, 0) /\n\t\t\t\tcompletedGuess.length\n\t\t  ).toFixed(1)\n\t\t: 0\n\tconst avgHints = knownUser\n\t\t? (\n\t\t\t\tcompletedGuess.reduce((sum, item) => sum + item.hints, 0) /\n\t\t\t\tcompletedGuess.length\n\t\t  ).toFixed(1)\n\t\t: 0\n\n\t// stats\n\tconst statsStreak =\n\t\tstreak > 0 ? (\n\t\t\tstreak > 1 ? (\n\t\t\t\t<p className='stats-streak'>\n\t\t\t\t\tCurrent streak: <span>{streak} days</span>\n\t\t\t\t</p>\n\t\t\t) : (\n\t\t\t\t<p className='stats-streak'>\n\t\t\t\t\tCurrent streak: <span>{streak} day</span>\n\t\t\t\t</p>\n\t\t\t)\n\t\t) : (\n\t\t\t''\n\t\t)\n\tconst stats = (\n\t\t<div className='title-stats'>\n\t\t\t{statsStreak}\n\t\t\t<p className='stats-guesses dark:!bg-[rgb(120,70,45)] dark:!text-white'>\n\t\t\t\tAverage guesses: <span>{avgGuesses}</span>\n\t\t\t</p>\n\t\t\t<p className='stats-hints dark:!bg-[#4A3F6B] dark:!text-white'>\n\t\t\t\tAverage hints: <span>{avgHints}</span>\n\t\t\t</p>\n\t\t</div>\n\t)\n\n\tconst intro = (\n\t\t<div className='title-intro'>\n\t\t\t<p>\n\t\t\t\tLearn Cryptic is a daily game to help you learn about, practice, and\n\t\t\t\tsolve cryptic crossword clues.\n\t\t\t</p>\n\t\t\t<p>\n\t\t\t\tThis is for both beginners who are wanting to learn about cryptic\n\t\t\t\tcrosswords and those already familiar with this wonderful form of\n\t\t\t\twordplay.\n\t\t\t</p>\n\t\t</div>\n\t)\n\n\t// Today clue\n\tconst todayClue = cluesData.find((clue) => {\n\t\tconst date1 = new Date(clue.release)\n\t\tconst date2 = new Date()\n\n\t\t// Strip time part by setting hours, minutes, seconds, and milliseconds to zero\n\t\tconst d1 = new Date(date1.getFullYear(), date1.getMonth(), date1.getDate())\n\t\tconst d2 = new Date(date2.getFullYear(), date2.getMonth(), date2.getDate())\n\n\t\treturn d1.getTime() === d2.getTime()\n\t})\n\n\t// buttons\n\tconst buttons = {\n\t\tlearnNew: {\n\t\t\tpath: '/learn',\n\t\t\tname: 'Learn about cryptics',\n\t\t\tstyle: 'alt',\n\t\t},\n\t\tlearn: {\n\t\t\tpath: '/learn',\n\t\t\tname: 'Learn about cryptics',\n\t\t\tstyle: 'secondary',\n\t\t},\n\t\ttodayClue: {\n\t\t\tpath: `/clues/${todayClue.clid}`,\n\t\t\tname: \"Play today's clue\",\n\t\t\tstyle: 'primary',\n\t\t},\n\t\tallClues: {\n\t\t\tpath: '/clues',\n\t\t\tname: 'See all clues',\n\t\t\tstyle: 'secondary',\n\t\t},\n\t\tviewClues: {\n\t\t\tpath: '/clues',\n\t\t\tname: 'View clues',\n\t\t\tstyle: 'primary',\n\t\t},\n\t}\n\n\tlet btnArr = []\n\n\tif (knownUser) {\n\t\tbtnArr = todayClue\n\t\t\t? [buttons.todayClue, buttons.allClues, buttons.learn]\n\t\t\t: [buttons.viewClues, buttons.learn]\n\t} else {\n\t\tbtnArr = todayClue\n\t\t\t? [buttons.learnNew, buttons.todayClue]\n\t\t\t: [buttons.learn, buttons.viewClues]\n\t}\n\n\t// Don't render conditional content until context is loaded\n\tif (!isContextLoaded) {\n\t\treturn (\n\t\t\t<Layout>\n\t\t\t\t<div className='title lc-container h-full'>\n\t\t\t\t\t<img className='title-img' src={logo} alt='' />\n\t\t\t\t\t<div className='title-stats' style={{ visibility: 'hidden' }}>\n\t\t\t\t\t\t<p className='stats-streak'>\n\t\t\t\t\t\t\tCurrent streak: <span>0 days</span>\n\t\t\t\t\t\t</p>\n\t\t\t\t\t\t<p className='stats-guesses dark:!bg-[rgb(120,70,45)] dark:!text-white'>\n\t\t\t\t\t\t\tAverage guesses: <span>0</span>\n\t\t\t\t\t\t</p>\n\t\t\t\t\t\t<p className='stats-hints dark:!bg-[#4A3F6B] dark:!text-white'>\n\t\t\t\t\t\t\tAverage hints: <span>0</span>\n\t\t\t\t\t\t</p>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='title-actions' style={{ visibility: 'hidden' }}>\n\t\t\t\t\t\t<ButtonContainer btnArr={btnArr} stack={true} />\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</Layout>\n\t\t)\n\t}\n\n\treturn (\n\t\t<Layout>\n\t\t\t<div className='title lc-container h-full'>\n\t\t\t\t<img className='title-img' src={logo} alt='' />\n\t\t\t\t{knownUser ? stats : intro}\n\t\t\t\t<div className='title-actions'>\n\t\t\t\t\t<ButtonContainer btnArr={btnArr} stack={true} />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</Layout>\n\t)\n}\n\nexport default Title\n\nexport { Head } from '../components/Head'\n\nexport const query = graphql`\n\tquery {\n\t\tallCluesJson {\n\t\t\tnodes {\n\t\t\t\trelease\n\t\t\t\tclid\n\t\t\t\tid\n\t\t\t}\n\t\t}\n\t}\n`\n","import React from 'react'\n\nexport const Head = () => <>\n\t<meta charSet=\"UTF-8\"/>\n\t<meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\"/>\n\t<meta httpEquiv=\"X-UA-Compatible\" content=\"ie=edge\"/>\n\t<meta property=\"og:title\" content=\"Learn Cryptic\" />\n\t<meta property=\"og:description\" content=\"Learn Cryptic is a daily game to help you learn about, practice, and solve cryptic crossword clues.\" />\n\t<meta property=\"og:type\" content=\"website\" />\n\t<meta property=\"og:url\" content=\"https://learncryptic.com\" />\n\t<meta property=\"og:image\" content=\"https://learncryptic.com/favicon.png\" />\n\t<title>Learn Cryptic</title>\n\t<link rel=\"icon\" href=\"https://learncryptic.com/favicon.png\" />\n</>","export default __webpack_public_path__ + \"static/logo-short-1bc27782bd51e8a2c1a14d4b9578bf31.png\";","import React, { useContext, useState, useEffect } from 'react'\nimport { Link } from 'gatsby'\n\nimport { UserContext } from '../utils/UserContext'\n\nimport logo from '../assets/img/logo-short.png'\n// Custom info icon component\nconst InfoIcon = () => (\n\t<svg\n\t\twidth='24'\n\t\theight='24'\n\t\tviewBox='0 0 24 24'\n\t\tfill='none'\n\t\txmlns='http://www.w3.org/2000/svg'\n\t\tclassName='text-neutral-500 dark:text-neutral-200'\n\t>\n\t\t<circle\n\t\t\tcx='12'\n\t\t\tcy='12'\n\t\t\tr='10'\n\t\t\tstroke='currentColor'\n\t\t\tstrokeWidth='1.5'\n\t\t\tfill='none'\n\t\t/>\n\t\t<circle cx='12' cy='9' r='1' fill='currentColor' />\n\t\t<path d='M11 12h2v5h-2z' fill='currentColor' />\n\t</svg>\n)\n\nconst BarGraphIcon = () => (\n\t<svg\n\t\twidth='24'\n\t\theight='24'\n\t\tviewBox='0 0 24 24'\n\t\tfill='none'\n\t\txmlns='http://www.w3.org/2000/svg'\n\t\tclassName='text-neutral-500 dark:text-neutral-200'\n\t>\n\t\t<rect x='3' y='10' width='4' height='8' rx='1' fill='currentColor' />\n\t\t<rect x='9' y='6' width='4' height='12' rx='1' fill='currentColor' />\n\t\t<rect x='15' y='13' width='4' height='5' rx='1' fill='currentColor' />\n\t</svg>\n)\n\nconst Modal = ({ open, onClose, children }) => {\n\tuseEffect(() => {\n\t\tconst preventDefault = (e) => {\n\t\t\te.preventDefault()\n\t\t}\n\n\t\tif (open) {\n\t\t\t// Prevent scrolling by blocking wheel and touch events\n\t\t\tdocument.addEventListener('wheel', preventDefault, { passive: false })\n\t\t\tdocument.addEventListener('touchmove', preventDefault, { passive: false })\n\t\t}\n\n\t\t// Cleanup function to remove event listeners\n\t\treturn () => {\n\t\t\tdocument.removeEventListener('wheel', preventDefault)\n\t\t\tdocument.removeEventListener('touchmove', preventDefault)\n\t\t}\n\t}, [open])\n\n\tif (!open) return null\n\treturn (\n\t\t<div className='modal-overlay' onClick={onClose}>\n\t\t\t<div\n\t\t\t\tclassName='modal-content bg-white dark:bg-neutral-800 text-neutral-900 dark:text-neutral-100'\n\t\t\t\tonClick={(e) => e.stopPropagation()}\n\t\t\t>\n\t\t\t\t<button\n\t\t\t\t\tclassName='modal-close text-neutral-500 dark:text-neutral-400 hover:text-neutral-700 dark:hover:text-neutral-200'\n\t\t\t\t\tonClick={onClose}\n\t\t\t\t\taria-label='Close'\n\t\t\t\t>\n\t\t\t\t\t&times;\n\t\t\t\t</button>\n\t\t\t\t{children}\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nconst TopBar = () => {\n\tconst {\n\t\tsetReturnLearn,\n\t\tcompletedClues = [],\n\t\tstreak = 0,\n\t\tlongestStreak = 0,\n\t\tdarkMode,\n\t\tsetDarkMode,\n\t} = useContext(UserContext)\n\tconst [helpOpen, setHelpOpen] = useState(false)\n\tconst [statsOpen, setStatsOpen] = useState(false)\n\n\tconst clickTitle = () => {\n\t\tsetReturnLearn(false)\n\t}\n\n\t// Stats calculations\n\tconst totalSolved = completedClues.length\n\tconst avgGuesses =\n\t\ttotalSolved > 0\n\t\t\t? (\n\t\t\t\t\tcompletedClues.reduce((sum, c) => sum + (c.guesses || 0), 0) /\n\t\t\t\t\ttotalSolved\n\t\t\t  ).toFixed(1)\n\t\t\t: '0'\n\tconst avgHints =\n\t\ttotalSolved > 0\n\t\t\t? (\n\t\t\t\t\tcompletedClues.reduce((sum, c) => sum + (c.hints || 0), 0) /\n\t\t\t\t\ttotalSolved\n\t\t\t  ).toFixed(1)\n\t\t\t: '0'\n\n\treturn (\n\t\t<>\n\t\t\t<header className='top-bar bg-white dark:bg-neutral-800 border-b border-neutral-200 dark:border-neutral-700'>\n\t\t\t\t<div className='top-bar-container lc-container'>\n\t\t\t\t\t<div className='topbar-left'>\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\tclassName='icon-btn hover:bg-neutral-100 dark:hover:bg-neutral-700 rounded-lg p-2 transition-colors'\n\t\t\t\t\t\t\taria-label='Help'\n\t\t\t\t\t\t\tonClick={() => setHelpOpen(true)}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<InfoIcon />\n\t\t\t\t\t\t</button>\n\t\t\t\t\t\t<button\n\t\t\t\t\t\t\tclassName='icon-btn hover:bg-neutral-100 dark:hover:bg-neutral-700 rounded-lg p-2 transition-colors'\n\t\t\t\t\t\t\taria-label='Stats'\n\t\t\t\t\t\t\tonClick={() => setStatsOpen(true)}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<BarGraphIcon />\n\t\t\t\t\t\t</button>\n\t\t\t\t\t</div>\n\t\t\t\t\t<Link to='/' onClick={clickTitle} className='topbar-logo'>\n\t\t\t\t\t\t<img src={logo} alt='' />\n\t\t\t\t\t</Link>\n\t\t\t\t</div>\n\t\t\t</header>\n\t\t\t<Modal open={helpOpen} onClose={() => setHelpOpen(false)}>\n\t\t\t\t<p className='mt-4'>\n\t\t\t\t\tWelcome to Learn Cryptic! If you're having difficulty understanding\n\t\t\t\t\tthe clues, visit the{' '}\n\t\t\t\t\t<Link to='/learn' className='font-bold underline'>\n\t\t\t\t\t\tLearn\n\t\t\t\t\t</Link>{' '}\n\t\t\t\t\tpage to learn more about cryptics and practice with more basic clues.\n\t\t\t\t</p>\n\n\t\t\t\t<div className='mt-6 border-t border-neutral-200 dark:border-neutral-600 pt-4'>\n\t\t\t\t\t<h3 className='font-bold mb-3'>Theme</h3>\n\t\t\t\t\t<div className='flex justify-center mb-4'>\n\t\t\t\t\t\t<div className='flex theme-picker-bg rounded-lg p-1 gap-1'>\n\t\t\t\t\t\t\t<label className='flex items-center cursor-pointer'>\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\ttype='radio'\n\t\t\t\t\t\t\t\t\tname='theme'\n\t\t\t\t\t\t\t\t\tchecked={darkMode === null}\n\t\t\t\t\t\t\t\t\tonChange={() => setDarkMode(null)}\n\t\t\t\t\t\t\t\t\tclassName='sr-only'\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<span\n\t\t\t\t\t\t\t\t\tclassName={`px-3 py-1 text-sm rounded-md transition-colors ${\n\t\t\t\t\t\t\t\t\t\tdarkMode === null\n\t\t\t\t\t\t\t\t\t\t\t? 'bg-white dark:bg-neutral-600 text-neutral-900 dark:text-white shadow-sm'\n\t\t\t\t\t\t\t\t\t\t\t: 'text-neutral-600 dark:text-neutral-200 hover:text-neutral-900 dark:hover:text-white'\n\t\t\t\t\t\t\t\t\t}`}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tSystem\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t<label className='flex items-center cursor-pointer'>\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\ttype='radio'\n\t\t\t\t\t\t\t\t\tname='theme'\n\t\t\t\t\t\t\t\t\tchecked={darkMode === false}\n\t\t\t\t\t\t\t\t\tonChange={() => setDarkMode(false)}\n\t\t\t\t\t\t\t\t\tclassName='sr-only'\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<span\n\t\t\t\t\t\t\t\t\tclassName={`px-3 py-1 text-sm rounded-md transition-colors ${\n\t\t\t\t\t\t\t\t\t\tdarkMode === false\n\t\t\t\t\t\t\t\t\t\t\t? 'bg-white dark:bg-neutral-600 text-neutral-900 dark:text-white shadow-sm'\n\t\t\t\t\t\t\t\t\t\t\t: 'text-neutral-600 dark:text-neutral-200 hover:text-neutral-900 dark:hover:text-white'\n\t\t\t\t\t\t\t\t\t}`}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tLight\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t<label className='flex items-center cursor-pointer'>\n\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\ttype='radio'\n\t\t\t\t\t\t\t\t\tname='theme'\n\t\t\t\t\t\t\t\t\tchecked={darkMode === true}\n\t\t\t\t\t\t\t\t\tonChange={() => setDarkMode(true)}\n\t\t\t\t\t\t\t\t\tclassName='sr-only'\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<span\n\t\t\t\t\t\t\t\t\tclassName={`px-3 py-1 text-sm rounded-md transition-colors ${\n\t\t\t\t\t\t\t\t\t\tdarkMode === true\n\t\t\t\t\t\t\t\t\t\t\t? 'bg-white dark:bg-neutral-600 text-neutral-900 dark:text-white shadow-sm'\n\t\t\t\t\t\t\t\t\t\t\t: 'text-neutral-600 dark:text-neutral-200 hover:text-neutral-900 dark:hover:text-white'\n\t\t\t\t\t\t\t\t\t}`}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tDark\n\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='border-t border-neutral-200 dark:border-neutral-600 pt-4'>\n\t\t\t\t\t\t<p>\n\t\t\t\t\t\t\tHave questions, comments, or want to contribute future cryptic\n\t\t\t\t\t\t\tclues?\n\t\t\t\t\t\t\t<a\n\t\t\t\t\t\t\t\thref='mailto:learncrypticgame@gmail.com?subject=Learn Cryptic Feedback'\n\t\t\t\t\t\t\t\tclassName='font-bold underline mt-2 text-center block'\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\tEmail us\n\t\t\t\t\t\t\t</a>\n\t\t\t\t\t\t</p>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</Modal>\n\t\t\t<Modal open={statsOpen} onClose={() => setStatsOpen(false)}>\n\t\t\t\t<h2 className='my-3 text-xl font-bold'>Statistics</h2>\n\t\t\t\t<div className='stats-list'>\n\t\t\t\t\t<div className='stat-item'>\n\t\t\t\t\t\t🔥 <strong>Current Streak:</strong> {streak}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='stat-item'>\n\t\t\t\t\t\t🏆 <strong>Longest Streak:</strong> {longestStreak}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='stat-item'>\n\t\t\t\t\t\t🧩 <strong>Clues solved:</strong> {totalSolved}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='stat-item'>\n\t\t\t\t\t\t🎯 <strong>Avg guesses:</strong> {avgGuesses}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='stat-item'>\n\t\t\t\t\t\t💡 <strong>Avg hints:</strong> {avgHints}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</Modal>\n\t\t</>\n\t)\n}\n\nexport default TopBar\n","import React from 'react'\nimport TopBar from './TopBar'\nimport ScrollToTop from './ScrollToTop'\n\nconst Layout = ({ children }) => {\n\treturn (\n\t\t<div className=\"min-h-screen bg-white dark:bg-neutral-800 text-neutral-900 dark:text-neutral-100 transition-colors duration-200 flex flex-col\">\n\t\t\t{/* <ScrollToTop /> */}\n\t\t\t<TopBar />\n\t\t\t<main className=\"flex-1\">{children}</main>\n\t\t</div>\n\t)\n}\n\nexport default Layout\n\nexport { Head } from './Head'\n"],"names":["_ref","btnInfo","_btnInfo$path","path","name","style","onClick","_btnInfo$img","img","_btnInfo$disabled","disabled","darkModeClasses","getDarkModeClasses","React","Link","to","id","toLowerCase","className","concat","type","undefined","btnArr","isSolution","_ref$stack","stack","buttons","map","index","Button","key","cluesData","data","allCluesJson","nodes","_useContext","useContext","UserContext","completedClues","streak","_React$useState2","_slicedToArray","isContextLoaded","setIsContextLoaded","timer","setTimeout","clearTimeout","useEffect","window","document","body","classList","add","remove","completedGuess","filter","clue","how","knownUser","length","avgGuesses","reduce","sum","item","guesses","toFixed","avgHints","hints","statsStreak","stats","intro","todayClue","find","date1","Date","release","date2","d1","getFullYear","getMonth","getDate","d2","getTime","learnNew","learn","clid","allClues","viewClues","Layout","src","logo","alt","ButtonContainer","visibility","Head","charSet","content","httpEquiv","property","rel","href","InfoIcon","width","height","viewBox","fill","xmlns","cx","cy","r","stroke","strokeWidth","d","BarGraphIcon","x","y","rx","Modal","open","onClose","children","preventDefault","e","addEventListener","passive","removeEventListener","stopPropagation","setReturnLearn","_useContext$completed","_useContext$streak","_useContext$longestSt","longestStreak","darkMode","setDarkMode","_useState2","useState","helpOpen","setHelpOpen","_useState4","statsOpen","setStatsOpen","totalSolved","c","checked","onChange","TopBar"],"sourceRoot":""}