/*! For license information please see bundle.js.LICENSE.txt */
(()=>{var e={100:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>o});var r=n(354),a=n.n(r),l=n(314),i=n.n(l)()(a());i.push([e.id,"@import url(https://fonts.googleapis.com/css2?family=Roboto:ital,wght@0,100..900;1,100..900&display=swap);"]),i.push([e.id,'html,body,#root{height:100%;width:100%;font-size:18px;overflow:hidden;margin:0}@media(min-width: 768px){html,body,#root{font-size:20px}}*{box-sizing:border-box}body{display:flex}.container{width:100%;height:100%;max-width:700px;margin:0 auto}img{max-width:100%;max-height:100%}body{font-family:"Roboto","Open Sans","Arial","Open Sans",sans;color:#222}h1,h2,h3{font-weight:bold}h2{font-size:1.25rem}p{margin:.25rem 0}a{color:#c94f03}li{margin:.25rem 0}li a{color:unset;text-decoration:unset}button{font-family:"Roboto","Open Sans","Arial","Open Sans",sans;font-size:1rem;line-height:1}.underline{text-decoration:underline}.highlight{background-color:#e1d8ff}.d-none{display:none !important}.d-inline{display:inline !important}.d-inline-block{display:inline-block !important}.d-block{display:block !important}.d-table{display:table !important}.d-table-row{display:table-row !important}.d-table-cell{display:table-cell !important}.d-flex{display:-webkit-box !important;display:-ms-flexbox !important;display:flex !important}.d-inline-flex{display:-webkit-inline-box !important;display:-ms-inline-flexbox !important;display:inline-flex !important}@media(min-width: 576px){.d-sm-none{display:none !important}.d-sm-inline{display:inline !important}.d-sm-inline-block{display:inline-block !important}.d-sm-block{display:block !important}.d-sm-table{display:table !important}.d-sm-table-row{display:table-row !important}.d-sm-table-cell{display:table-cell !important}.d-sm-flex{display:-webkit-box !important;display:-ms-flexbox !important;display:flex !important}.d-sm-inline-flex{display:-webkit-inline-box !important;display:-ms-inline-flexbox !important;display:inline-flex !important}}@media(min-width: 768px){.d-md-none{display:none !important}.d-md-inline{display:inline !important}.d-md-inline-block{display:inline-block !important}.d-md-block{display:block !important}.d-md-table{display:table !important}.d-md-table-row{display:table-row !important}.d-md-table-cell{display:table-cell !important}.d-md-flex{display:-webkit-box !important;display:-ms-flexbox !important;display:flex !important}.d-md-inline-flex{display:-webkit-inline-box !important;display:-ms-inline-flexbox !important;display:inline-flex !important}}@media(min-width: 992px){.d-lg-none{display:none !important}.d-lg-inline{display:inline !important}.d-lg-inline-block{display:inline-block !important}.d-lg-block{display:block !important}.d-lg-table{display:table !important}.d-lg-table-row{display:table-row !important}.d-lg-table-cell{display:table-cell !important}.d-lg-flex{display:-webkit-box !important;display:-ms-flexbox !important;display:flex !important}.d-lg-inline-flex{display:-webkit-inline-box !important;display:-ms-inline-flexbox !important;display:inline-flex !important}}@media(min-width: 1200px){.d-xl-none{display:none !important}.d-xl-inline{display:inline !important}.d-xl-inline-block{display:inline-block !important}.d-xl-block{display:block !important}.d-xl-table{display:table !important}.d-xl-table-row{display:table-row !important}.d-xl-table-cell{display:table-cell !important}.d-xl-flex{display:-webkit-box !important;display:-ms-flexbox !important;display:flex !important}.d-xl-inline-flex{display:-webkit-inline-box !important;display:-ms-inline-flexbox !important;display:inline-flex !important}}.w-25{width:25% !important}.w-50{width:50% !important}.w-75{width:75% !important}.w-100{width:100% !important}.h-25{height:25% !important}.h-50{height:50% !important}.h-75{height:75% !important}.h-100{height:100% !important}.mw-100{max-width:100% !important}.mh-100{max-height:100% !important}.m-0{margin:0 !important}.mt-0,.my-0{margin-top:0 !important}.mr-0,.mx-0{margin-right:0 !important}.mb-0,.my-0{margin-bottom:0 !important}.ml-0,.mx-0{margin-left:0 !important}.m-1{margin:.25rem !important}.mt-1,.my-1{margin-top:.25rem !important}.mr-1,.mx-1{margin-right:.25rem !important}.mb-1,.my-1{margin-bottom:.25rem !important}.ml-1,.mx-1{margin-left:.25rem !important}.m-2{margin:.5rem !important}.mt-2,.my-2{margin-top:.5rem !important}.mr-2,.mx-2{margin-right:.5rem !important}.mb-2,.my-2{margin-bottom:.5rem !important}.ml-2,.mx-2{margin-left:.5rem !important}.m-3{margin:1rem !important}.mt-3,.my-3{margin-top:1rem !important}.mr-3,.mx-3{margin-right:1rem !important}.mb-3,.my-3{margin-bottom:1rem !important}.ml-3,.mx-3{margin-left:1rem !important}.m-4{margin:1.5rem !important}.mt-4,.my-4{margin-top:1.5rem !important}.mr-4,.mx-4{margin-right:1.5rem !important}.mb-4,.my-4{margin-bottom:1.5rem !important}.ml-4,.mx-4{margin-left:1.5rem !important}.m-5{margin:3rem !important}.mt-5,.my-5{margin-top:3rem !important}.mr-5,.mx-5{margin-right:3rem !important}.mb-5,.my-5{margin-bottom:3rem !important}.ml-5,.mx-5{margin-left:3rem !important}.p-0{padding:0 !important}.pt-0,.py-0{padding-top:0 !important}.pr-0,.px-0{padding-right:0 !important}.pb-0,.py-0{padding-bottom:0 !important}.pl-0,.px-0{padding-left:0 !important}.p-1{padding:.25rem !important}.pt-1,.py-1{padding-top:.25rem !important}.pr-1,.px-1{padding-right:.25rem !important}.pb-1,.py-1{padding-bottom:.25rem !important}.pl-1,.px-1{padding-left:.25rem !important}.p-2{padding:.5rem !important}.pt-2,.py-2{padding-top:.5rem !important}.pr-2,.px-2{padding-right:.5rem !important}.pb-2,.py-2{padding-bottom:.5rem !important}.pl-2,.px-2{padding-left:.5rem !important}.p-3{padding:1rem !important}.pt-3,.py-3{padding-top:1rem !important}.pr-3,.px-3{padding-right:1rem !important}.pb-3,.py-3{padding-bottom:1rem !important}.pl-3,.px-3{padding-left:1rem !important}.p-4{padding:1.5rem !important}.pt-4,.py-4{padding-top:1.5rem !important}.pr-4,.px-4{padding-right:1.5rem !important}.pb-4,.py-4{padding-bottom:1.5rem !important}.pl-4,.px-4{padding-left:1.5rem !important}.p-5{padding:3rem !important}.pt-5,.py-5{padding-top:3rem !important}.pr-5,.px-5{padding-right:3rem !important}.pb-5,.py-5{padding-bottom:3rem !important}.pl-5,.px-5{padding-left:3rem !important}.m-auto{margin:auto !important}.mt-auto,.my-auto{margin-top:auto !important}.mr-auto,.mx-auto{margin-right:auto !important}.mb-auto,.my-auto{margin-bottom:auto !important}.ml-auto,.mx-auto{margin-left:auto !important}@media(min-width: 576px){.m-sm-0{margin:0 !important}.mt-sm-0,.my-sm-0{margin-top:0 !important}.mr-sm-0,.mx-sm-0{margin-right:0 !important}.mb-sm-0,.my-sm-0{margin-bottom:0 !important}.ml-sm-0,.mx-sm-0{margin-left:0 !important}.m-sm-1{margin:.25rem !important}.mt-sm-1,.my-sm-1{margin-top:.25rem !important}.mr-sm-1,.mx-sm-1{margin-right:.25rem !important}.mb-sm-1,.my-sm-1{margin-bottom:.25rem !important}.ml-sm-1,.mx-sm-1{margin-left:.25rem !important}.m-sm-2{margin:.5rem !important}.mt-sm-2,.my-sm-2{margin-top:.5rem !important}.mr-sm-2,.mx-sm-2{margin-right:.5rem !important}.mb-sm-2,.my-sm-2{margin-bottom:.5rem !important}.ml-sm-2,.mx-sm-2{margin-left:.5rem !important}.m-sm-3{margin:1rem !important}.mt-sm-3,.my-sm-3{margin-top:1rem !important}.mr-sm-3,.mx-sm-3{margin-right:1rem !important}.mb-sm-3,.my-sm-3{margin-bottom:1rem !important}.ml-sm-3,.mx-sm-3{margin-left:1rem !important}.m-sm-4{margin:1.5rem !important}.mt-sm-4,.my-sm-4{margin-top:1.5rem !important}.mr-sm-4,.mx-sm-4{margin-right:1.5rem !important}.mb-sm-4,.my-sm-4{margin-bottom:1.5rem !important}.ml-sm-4,.mx-sm-4{margin-left:1.5rem !important}.m-sm-5{margin:3rem !important}.mt-sm-5,.my-sm-5{margin-top:3rem !important}.mr-sm-5,.mx-sm-5{margin-right:3rem !important}.mb-sm-5,.my-sm-5{margin-bottom:3rem !important}.ml-sm-5,.mx-sm-5{margin-left:3rem !important}.p-sm-0{padding:0 !important}.pt-sm-0,.py-sm-0{padding-top:0 !important}.pr-sm-0,.px-sm-0{padding-right:0 !important}.pb-sm-0,.py-sm-0{padding-bottom:0 !important}.pl-sm-0,.px-sm-0{padding-left:0 !important}.p-sm-1{padding:.25rem !important}.pt-sm-1,.py-sm-1{padding-top:.25rem !important}.pr-sm-1,.px-sm-1{padding-right:.25rem !important}.pb-sm-1,.py-sm-1{padding-bottom:.25rem !important}.pl-sm-1,.px-sm-1{padding-left:.25rem !important}.p-sm-2{padding:.5rem !important}.pt-sm-2,.py-sm-2{padding-top:.5rem !important}.pr-sm-2,.px-sm-2{padding-right:.5rem !important}.pb-sm-2,.py-sm-2{padding-bottom:.5rem !important}.pl-sm-2,.px-sm-2{padding-left:.5rem !important}.p-sm-3{padding:1rem !important}.pt-sm-3,.py-sm-3{padding-top:1rem !important}.pr-sm-3,.px-sm-3{padding-right:1rem !important}.pb-sm-3,.py-sm-3{padding-bottom:1rem !important}.pl-sm-3,.px-sm-3{padding-left:1rem !important}.p-sm-4{padding:1.5rem !important}.pt-sm-4,.py-sm-4{padding-top:1.5rem !important}.pr-sm-4,.px-sm-4{padding-right:1.5rem !important}.pb-sm-4,.py-sm-4{padding-bottom:1.5rem !important}.pl-sm-4,.px-sm-4{padding-left:1.5rem !important}.p-sm-5{padding:3rem !important}.pt-sm-5,.py-sm-5{padding-top:3rem !important}.pr-sm-5,.px-sm-5{padding-right:3rem !important}.pb-sm-5,.py-sm-5{padding-bottom:3rem !important}.pl-sm-5,.px-sm-5{padding-left:3rem !important}.m-sm-auto{margin:auto !important}.mt-sm-auto,.my-sm-auto{margin-top:auto !important}.mr-sm-auto,.mx-sm-auto{margin-right:auto !important}.mb-sm-auto,.my-sm-auto{margin-bottom:auto !important}.ml-sm-auto,.mx-sm-auto{margin-left:auto !important}}@media(min-width: 768px){.m-md-0{margin:0 !important}.mt-md-0,.my-md-0{margin-top:0 !important}.mr-md-0,.mx-md-0{margin-right:0 !important}.mb-md-0,.my-md-0{margin-bottom:0 !important}.ml-md-0,.mx-md-0{margin-left:0 !important}.m-md-1{margin:.25rem !important}.mt-md-1,.my-md-1{margin-top:.25rem !important}.mr-md-1,.mx-md-1{margin-right:.25rem !important}.mb-md-1,.my-md-1{margin-bottom:.25rem !important}.ml-md-1,.mx-md-1{margin-left:.25rem !important}.m-md-2{margin:.5rem !important}.mt-md-2,.my-md-2{margin-top:.5rem !important}.mr-md-2,.mx-md-2{margin-right:.5rem !important}.mb-md-2,.my-md-2{margin-bottom:.5rem !important}.ml-md-2,.mx-md-2{margin-left:.5rem !important}.m-md-3{margin:1rem !important}.mt-md-3,.my-md-3{margin-top:1rem !important}.mr-md-3,.mx-md-3{margin-right:1rem !important}.mb-md-3,.my-md-3{margin-bottom:1rem !important}.ml-md-3,.mx-md-3{margin-left:1rem !important}.m-md-4{margin:1.5rem !important}.mt-md-4,.my-md-4{margin-top:1.5rem !important}.mr-md-4,.mx-md-4{margin-right:1.5rem !important}.mb-md-4,.my-md-4{margin-bottom:1.5rem !important}.ml-md-4,.mx-md-4{margin-left:1.5rem !important}.m-md-5{margin:3rem !important}.mt-md-5,.my-md-5{margin-top:3rem !important}.mr-md-5,.mx-md-5{margin-right:3rem !important}.mb-md-5,.my-md-5{margin-bottom:3rem !important}.ml-md-5,.mx-md-5{margin-left:3rem !important}.p-md-0{padding:0 !important}.pt-md-0,.py-md-0{padding-top:0 !important}.pr-md-0,.px-md-0{padding-right:0 !important}.pb-md-0,.py-md-0{padding-bottom:0 !important}.pl-md-0,.px-md-0{padding-left:0 !important}.p-md-1{padding:.25rem !important}.pt-md-1,.py-md-1{padding-top:.25rem !important}.pr-md-1,.px-md-1{padding-right:.25rem !important}.pb-md-1,.py-md-1{padding-bottom:.25rem !important}.pl-md-1,.px-md-1{padding-left:.25rem !important}.p-md-2{padding:.5rem !important}.pt-md-2,.py-md-2{padding-top:.5rem !important}.pr-md-2,.px-md-2{padding-right:.5rem !important}.pb-md-2,.py-md-2{padding-bottom:.5rem !important}.pl-md-2,.px-md-2{padding-left:.5rem !important}.p-md-3{padding:1rem !important}.pt-md-3,.py-md-3{padding-top:1rem !important}.pr-md-3,.px-md-3{padding-right:1rem !important}.pb-md-3,.py-md-3{padding-bottom:1rem !important}.pl-md-3,.px-md-3{padding-left:1rem !important}.p-md-4{padding:1.5rem !important}.pt-md-4,.py-md-4{padding-top:1.5rem !important}.pr-md-4,.px-md-4{padding-right:1.5rem !important}.pb-md-4,.py-md-4{padding-bottom:1.5rem !important}.pl-md-4,.px-md-4{padding-left:1.5rem !important}.p-md-5{padding:3rem !important}.pt-md-5,.py-md-5{padding-top:3rem !important}.pr-md-5,.px-md-5{padding-right:3rem !important}.pb-md-5,.py-md-5{padding-bottom:3rem !important}.pl-md-5,.px-md-5{padding-left:3rem !important}.m-md-auto{margin:auto !important}.mt-md-auto,.my-md-auto{margin-top:auto !important}.mr-md-auto,.mx-md-auto{margin-right:auto !important}.mb-md-auto,.my-md-auto{margin-bottom:auto !important}.ml-md-auto,.mx-md-auto{margin-left:auto !important}}@media(min-width: 992px){.m-lg-0{margin:0 !important}.mt-lg-0,.my-lg-0{margin-top:0 !important}.mr-lg-0,.mx-lg-0{margin-right:0 !important}.mb-lg-0,.my-lg-0{margin-bottom:0 !important}.ml-lg-0,.mx-lg-0{margin-left:0 !important}.m-lg-1{margin:.25rem !important}.mt-lg-1,.my-lg-1{margin-top:.25rem !important}.mr-lg-1,.mx-lg-1{margin-right:.25rem !important}.mb-lg-1,.my-lg-1{margin-bottom:.25rem !important}.ml-lg-1,.mx-lg-1{margin-left:.25rem !important}.m-lg-2{margin:.5rem !important}.mt-lg-2,.my-lg-2{margin-top:.5rem !important}.mr-lg-2,.mx-lg-2{margin-right:.5rem !important}.mb-lg-2,.my-lg-2{margin-bottom:.5rem !important}.ml-lg-2,.mx-lg-2{margin-left:.5rem !important}.m-lg-3{margin:1rem !important}.mt-lg-3,.my-lg-3{margin-top:1rem !important}.mr-lg-3,.mx-lg-3{margin-right:1rem !important}.mb-lg-3,.my-lg-3{margin-bottom:1rem !important}.ml-lg-3,.mx-lg-3{margin-left:1rem !important}.m-lg-4{margin:1.5rem !important}.mt-lg-4,.my-lg-4{margin-top:1.5rem !important}.mr-lg-4,.mx-lg-4{margin-right:1.5rem !important}.mb-lg-4,.my-lg-4{margin-bottom:1.5rem !important}.ml-lg-4,.mx-lg-4{margin-left:1.5rem !important}.m-lg-5{margin:3rem !important}.mt-lg-5,.my-lg-5{margin-top:3rem !important}.mr-lg-5,.mx-lg-5{margin-right:3rem !important}.mb-lg-5,.my-lg-5{margin-bottom:3rem !important}.ml-lg-5,.mx-lg-5{margin-left:3rem !important}.p-lg-0{padding:0 !important}.pt-lg-0,.py-lg-0{padding-top:0 !important}.pr-lg-0,.px-lg-0{padding-right:0 !important}.pb-lg-0,.py-lg-0{padding-bottom:0 !important}.pl-lg-0,.px-lg-0{padding-left:0 !important}.p-lg-1{padding:.25rem !important}.pt-lg-1,.py-lg-1{padding-top:.25rem !important}.pr-lg-1,.px-lg-1{padding-right:.25rem !important}.pb-lg-1,.py-lg-1{padding-bottom:.25rem !important}.pl-lg-1,.px-lg-1{padding-left:.25rem !important}.p-lg-2{padding:.5rem !important}.pt-lg-2,.py-lg-2{padding-top:.5rem !important}.pr-lg-2,.px-lg-2{padding-right:.5rem !important}.pb-lg-2,.py-lg-2{padding-bottom:.5rem !important}.pl-lg-2,.px-lg-2{padding-left:.5rem !important}.p-lg-3{padding:1rem !important}.pt-lg-3,.py-lg-3{padding-top:1rem !important}.pr-lg-3,.px-lg-3{padding-right:1rem !important}.pb-lg-3,.py-lg-3{padding-bottom:1rem !important}.pl-lg-3,.px-lg-3{padding-left:1rem !important}.p-lg-4{padding:1.5rem !important}.pt-lg-4,.py-lg-4{padding-top:1.5rem !important}.pr-lg-4,.px-lg-4{padding-right:1.5rem !important}.pb-lg-4,.py-lg-4{padding-bottom:1.5rem !important}.pl-lg-4,.px-lg-4{padding-left:1.5rem !important}.p-lg-5{padding:3rem !important}.pt-lg-5,.py-lg-5{padding-top:3rem !important}.pr-lg-5,.px-lg-5{padding-right:3rem !important}.pb-lg-5,.py-lg-5{padding-bottom:3rem !important}.pl-lg-5,.px-lg-5{padding-left:3rem !important}.m-lg-auto{margin:auto !important}.mt-lg-auto,.my-lg-auto{margin-top:auto !important}.mr-lg-auto,.mx-lg-auto{margin-right:auto !important}.mb-lg-auto,.my-lg-auto{margin-bottom:auto !important}.ml-lg-auto,.mx-lg-auto{margin-left:auto !important}}@media(min-width: 1200px){.m-xl-0{margin:0 !important}.mt-xl-0,.my-xl-0{margin-top:0 !important}.mr-xl-0,.mx-xl-0{margin-right:0 !important}.mb-xl-0,.my-xl-0{margin-bottom:0 !important}.ml-xl-0,.mx-xl-0{margin-left:0 !important}.m-xl-1{margin:.25rem !important}.mt-xl-1,.my-xl-1{margin-top:.25rem !important}.mr-xl-1,.mx-xl-1{margin-right:.25rem !important}.mb-xl-1,.my-xl-1{margin-bottom:.25rem !important}.ml-xl-1,.mx-xl-1{margin-left:.25rem !important}.m-xl-2{margin:.5rem !important}.mt-xl-2,.my-xl-2{margin-top:.5rem !important}.mr-xl-2,.mx-xl-2{margin-right:.5rem !important}.mb-xl-2,.my-xl-2{margin-bottom:.5rem !important}.ml-xl-2,.mx-xl-2{margin-left:.5rem !important}.m-xl-3{margin:1rem !important}.mt-xl-3,.my-xl-3{margin-top:1rem !important}.mr-xl-3,.mx-xl-3{margin-right:1rem !important}.mb-xl-3,.my-xl-3{margin-bottom:1rem !important}.ml-xl-3,.mx-xl-3{margin-left:1rem !important}.m-xl-4{margin:1.5rem !important}.mt-xl-4,.my-xl-4{margin-top:1.5rem !important}.mr-xl-4,.mx-xl-4{margin-right:1.5rem !important}.mb-xl-4,.my-xl-4{margin-bottom:1.5rem !important}.ml-xl-4,.mx-xl-4{margin-left:1.5rem !important}.m-xl-5{margin:3rem !important}.mt-xl-5,.my-xl-5{margin-top:3rem !important}.mr-xl-5,.mx-xl-5{margin-right:3rem !important}.mb-xl-5,.my-xl-5{margin-bottom:3rem !important}.ml-xl-5,.mx-xl-5{margin-left:3rem !important}.p-xl-0{padding:0 !important}.pt-xl-0,.py-xl-0{padding-top:0 !important}.pr-xl-0,.px-xl-0{padding-right:0 !important}.pb-xl-0,.py-xl-0{padding-bottom:0 !important}.pl-xl-0,.px-xl-0{padding-left:0 !important}.p-xl-1{padding:.25rem !important}.pt-xl-1,.py-xl-1{padding-top:.25rem !important}.pr-xl-1,.px-xl-1{padding-right:.25rem !important}.pb-xl-1,.py-xl-1{padding-bottom:.25rem !important}.pl-xl-1,.px-xl-1{padding-left:.25rem !important}.p-xl-2{padding:.5rem !important}.pt-xl-2,.py-xl-2{padding-top:.5rem !important}.pr-xl-2,.px-xl-2{padding-right:.5rem !important}.pb-xl-2,.py-xl-2{padding-bottom:.5rem !important}.pl-xl-2,.px-xl-2{padding-left:.5rem !important}.p-xl-3{padding:1rem !important}.pt-xl-3,.py-xl-3{padding-top:1rem !important}.pr-xl-3,.px-xl-3{padding-right:1rem !important}.pb-xl-3,.py-xl-3{padding-bottom:1rem !important}.pl-xl-3,.px-xl-3{padding-left:1rem !important}.p-xl-4{padding:1.5rem !important}.pt-xl-4,.py-xl-4{padding-top:1.5rem !important}.pr-xl-4,.px-xl-4{padding-right:1.5rem !important}.pb-xl-4,.py-xl-4{padding-bottom:1.5rem !important}.pl-xl-4,.px-xl-4{padding-left:1.5rem !important}.p-xl-5{padding:3rem !important}.pt-xl-5,.py-xl-5{padding-top:3rem !important}.pr-xl-5,.px-xl-5{padding-right:3rem !important}.pb-xl-5,.py-xl-5{padding-bottom:3rem !important}.pl-xl-5,.px-xl-5{padding-left:3rem !important}.m-xl-auto{margin:auto !important}.mt-xl-auto,.my-xl-auto{margin-top:auto !important}.mr-xl-auto,.mx-xl-auto{margin-right:auto !important}.mb-xl-auto,.my-xl-auto{margin-bottom:auto !important}.ml-xl-auto,.mx-xl-auto{margin-left:auto !important}}.text-justify{text-align:justify !important}.text-nowrap{white-space:nowrap !important}.text-truncate{overflow:hidden;text-overflow:ellipsis;white-space:nowrap}.text-left{text-align:left !important}.text-right{text-align:right !important}.text-center{text-align:center !important}@media(min-width: 576px){.text-sm-left{text-align:left !important}.text-sm-right{text-align:right !important}.text-sm-center{text-align:center !important}}@media(min-width: 768px){.text-md-left{text-align:left !important}.text-md-right{text-align:right !important}.text-md-center{text-align:center !important}}@media(min-width: 992px){.text-lg-left{text-align:left !important}.text-lg-right{text-align:right !important}.text-lg-center{text-align:center !important}}@media(min-width: 1200px){.text-xl-left{text-align:left !important}.text-xl-right{text-align:right !important}.text-xl-center{text-align:center !important}}.text-lowercase{text-transform:lowercase !important}.text-uppercase{text-transform:uppercase !important}.text-capitalize{text-transform:capitalize !important}.title{display:flex;flex-direction:column;align-items:center;justify-content:space-evenly;font-family:"Roboto","Open Sans","Arial","Open Sans",sans}.title .title-logo{max-width:70px}.title .title-gif{max-width:280px}.title .title-intro{max-width:350px;text-align:left}.title .title-intro p{font-size:18px;margin-bottom:1rem}.title .title-stats{font-size:16px;border-radius:.5rem;padding:1rem 2rem}.title .title-stats .stats-clues,.title .title-stats .stats-guesses,.title .title-stats .stats-hints{text-align:center;border-radius:4px;padding:.25rem 1rem;font-weight:500}.title .title-stats .stats-clues span,.title .title-stats .stats-guesses span,.title .title-stats .stats-hints span{font-weight:600}.title .title-stats .stats-clues{border:1px solid #d2d2d2}.title .title-stats .stats-guesses{background-color:#ffcbab}.title .title-stats .stats-hints{background-color:#e1d8ff}.title .title-actions{display:flex;flex-direction:column;justify-content:center;align-items:center;width:100%}.title .title-actions .title-date{margin:.5rem auto;font-family:"Roboto","Open Sans","Arial","Open Sans",sans;font-size:16px;color:#666}.top-bar{background-color:#f3f3f3;height:60px}.top-bar .container{display:flex;justify-content:flex-end;align-items:center;padding:.5rem}.top-bar .container a img{max-width:40px}.learn{position:relative;overflow-y:auto;padding:1rem 1rem 5rem}.learn .back-button{margin-bottom:1.5rem}.learn .learn-section:not(:last-of-type){margin-bottom:2rem}.learn .learn-section .learn-question{font-size:28px;font-weight:700}.learn .learn-section img.border{border:2px solid #d2d2d2}.learn .learn-section ul{padding-left:1rem}.learn .learn-section ul.no-dec{list-style-type:none}.learn .learn-section .disclaimer{background-color:#e1d8ff}.learn .learn-section .example-container{border:1px solid #d2d2d2;border-radius:.5rem;margin-bottom:1rem}.learn .learn-section .example-container .example{padding:1.5rem .5rem .5rem;font-family:"Georgia","Times New Roman",serif;margin-bottom:1.5rem;text-align:center}.learn .learn-section .example-container .explanation{background-color:#f3f3f3;padding:1rem;font-size:.9rem}.learn .learn-section .example-container .explanation strong{font-family:"Georgia","Times New Roman",serif;text-transform:uppercase;font-size:.8rem}.learn .learn-section .example-container .explanation img{margin-top:.5rem;border:none;border-radius:.5rem}.learn .learn-section .example-container .solution{display:flex;justify-content:center;margin-top:1rem}.learn .learn-section .example-container .solution .letter{text-transform:uppercase;position:relative;text-align:center;display:inline-block;width:24px;height:24px;padding-top:2px;border:.75px solid #222}.learn .learn-section .example-container .solution .letter:last-child{border-right:1px solid #222}.learn .learn-section .indicators{display:flex;flex-wrap:wrap;justify-content:center;padding-left:0 !important;list-style-type:none}.learn .learn-section .indicators .indicator{margin:.25rem;padding:0 .25rem;font-family:"Georgia","Times New Roman",serif;background-color:#eae4ff;font-size:.9rem}.learn .learn-types{display:flex;flex-wrap:wrap;justify-content:center;padding-left:0 !important}.learn .learn-types li{font-size:16px;border:1px solid #d2d2d2;border-radius:50px;width:fit-content;padding:.2rem .75rem;margin:.3rem .25rem !important;cursor:pointer}.learn .learn-types li:hover,.learn .learn-types li:active,.learn .learn-types li:focus,.learn .learn-types li.viewed{border:1px solid #e1d8ff;background-color:#e1d8ff}.archive{position:relative;overflow-y:auto;padding:1rem .5rem 5rem}.archive h1{font-family:"Caveat","Helvetica","Arial","Open Sans",sans;font-size:2rem}.archive .archive-clue{display:flex;flex-wrap:nowrap;align-items:center;position:relative}.archive .archive-clue .archive-release{width:60px;font-size:12px;margin-right:8px;text-align:center;font-family:"Roboto","Open Sans","Arial","Open Sans",sans;font-weight:600;flex-shrink:0}.archive .archive-clue.completed .archive-release:before{content:" ";position:absolute;z-index:-1;width:60px;height:60px;border-radius:.5rem;top:50%;transform:translateY(-50%);left:0}.archive .archive-clue.completed.g .archive-release:before{background-color:#ffcbab;border:1px solid #ffcbab}.archive .archive-clue.completed.h .archive-release:before{background-color:#e1d8ff;border:1px solid #e1d8ff}.archive .archive-tile{display:flex;width:100%;align-items:center;justify-content:flex-start;margin:.5rem 0;padding:.25rem 1rem;height:60px;border:1px solid #d2d2d2;overflow:hidden;border-radius:.5rem;cursor:pointer}.archive .archive-tile:hover,.archive .archive-tile:focus{background-color:#f3f3f3;border:1px solid #f3f3f3}.archive .archive-tile .tile-img-stats{margin-right:.25rem;display:flex}.archive .archive-tile .tile-img-stats .tile-difficulty{align-self:center;width:36px;height:fit-content;line-height:1;transform:rotate(270deg)}.archive .archive-tile .tile-img-stats .tile-stats{display:flex;flex-direction:column;justify-content:center;font-size:11px;font-weight:600;font-family:"Roboto","Open Sans","Arial","Open Sans",sans;text-transform:uppercase}.archive .archive-tile .tile-img-stats .tile-stats .stat-guesses,.archive .archive-tile .tile-img-stats .tile-stats .stat-hints{margin:2px auto;padding:2px 3px;border-radius:4px}.archive .archive-tile .tile-img-stats .tile-stats .stat-guesses .stat,.archive .archive-tile .tile-img-stats .tile-stats .stat-hints .stat{font-size:13px;font-weight:700}.archive .archive-tile .tile-img-stats .tile-stats .stat-guesses{background-color:#ffcbab}.archive .archive-tile .tile-img-stats .tile-stats .stat-hints{background-color:#e1d8ff}.archive .archive-tile .tile-name{overflow:hidden;text-wrap:nowrap;text-overflow:ellipsis;line-height:1;font-size:14px;flex-shrink:10;padding:2px 0;font-family:"Georgia","Times New Roman",serif}.archive .archive-tile .tile-source{font-family:"Roboto","Open Sans","Arial","Open Sans",sans;font-size:12px;color:#666;line-height:1;margin-left:.5rem;text-align:right;white-space:nowrap;flex-grow:3}#clue-container{position:relative;overflow:visible;display:flex;flex-direction:column;justify-content:space-evenly;align-self:center;width:100%;height:calc(65% - 60px);margin:0 auto;padding:0 2rem;text-align:center;font-size:20px;text-wrap:balance}#clue-container .disabled{cursor:default}#clue-container .type{display:flex;align-items:center;position:absolute;top:0;left:0;padding-left:0;margin:1rem;list-style-type:none}#clue-container .type li{display:flex;align-items:center;margin:0 .25rem;cursor:pointer}#clue-container .type li.type-pill{padding:.25rem .5rem;font-family:"Roboto","Open Sans","Arial","Open Sans",sans;font-size:11px;font-weight:500;text-transform:uppercase;color:#222;border-radius:50px;background-color:#e1d8ff}#clue-container .type li.type-text{font-family:"Roboto","Open Sans","Arial","Open Sans",sans;font-size:12px;font-weight:500;color:#666}#clue-container .clue-stats{position:absolute;bottom:0;left:0;display:flex;font-size:13px;font-weight:600;font-family:"Roboto","Open Sans","Arial","Open Sans",sans;text-transform:uppercase;margin:1rem;pointer-events:none;user-select:none}#clue-container .clue-stats .stat-guesses,#clue-container .clue-stats .stat-hints{margin:2px auto;padding:2px 3px;border-radius:4px}#clue-container .clue-stats .stat-guesses .stat,#clue-container .clue-stats .stat-hints .stat{font-size:15px;font-weight:700}#clue-container .clue-stats .stat-hints{background-color:#e1d8ff;margin-right:.5rem}#clue-container .clue-stats .stat-guesses{background-color:#ffcbab}#clue-container .clue{display:flex;flex-direction:column;justify-content:flex-end;transition:opacity .25s ease;flex-grow:1}#clue-container .clue .letter{position:relative;font-family:"Georgia","Times New Roman",serif;transition:opacity .85s ease 0s,color .85s ease 0s,background-color .85s ease}#clue-container .clue .letter.underline{text-decoration:underline}#clue-container .addLetters{flex-grow:1;display:flex;align-items:center;justify-content:center;flex-wrap:wrap;align-content:center;font-family:"Georgia","Times New Roman",serif;text-transform:uppercase;pointer-events:none;user-select:none}#clue-container .addLetters .word .letter{pointer-events:none;user-select:none;color:rgba(0,0,0,0);line-height:23px;opacity:0;transition:opacity .85s ease 0s,color .85s ease 0s,background-color .85s ease}#clue-container .addLetters svg{fill:#ccc;transform:rotate(45deg);opacity:0;transition:opacity .85s ease 0s,color .85s ease 0s,background-color .85s ease}#clue-container .sol-section{flex-grow:1;display:flex;align-items:flex-start;justify-content:center}#clue-container .sol-section .solution{font-family:"Caveat","Helvetica","Arial","Open Sans",sans;z-index:10;transition:opacity .85s ease;text-align:center;text-transform:uppercase;margin:0 auto;font-size:1.25rem}#clue-container .sol-section .solution .letter{position:relative;pointer-events:none;user-select:none;text-align:center;display:inline-block;width:30px;height:30px;border:.75px solid #222}#clue-container .sol-section .solution .letter:last-child{border-right:1px solid #222}#clue-container .sol-section .solution .letter .solLetter{opacity:0;pointer-events:none;user-select:none;transition:opacity .85s ease}#clue-container .sol-section .solution .letter .typeLetter{position:absolute;top:50%;left:50%;transform:translate(-50%, -50%)}#clue-container .sol-section .solution.hide-input .letter .typeLetter{opacity:0;pointer-events:none;user-select:none;transition:opacity .85s ease}#clue-container .sol-section .solution.reveal-solution .letter .solLetter{opacity:1;transition:opacity .85s ease}#clue-container .sol-section .source{opacity:0;transition:opacity .85s ease;position:absolute;top:60px;left:50%;transform:translateX(-50%);font-size:15px;font-family:"Roboto","Open Sans","Arial","Open Sans",sans;pointer-events:none;user-select:none}#clue-container .sol-section .source.show{opacity:1;transition:opacity .85s ease;pointer-events:all;user-select:all}.input{height:20%;display:flex;flex-direction:column;justify-content:center}.input .container{display:flex;flex-wrap:wrap;justify-content:center;height:min-content}.input .container .word{margin:0 .5rem;text-wrap:nowrap}.input .container .word .cell{height:36px;width:36px;border:1px solid #222;border-right:none;background:none}.input .container .word .cell:last-child{border-right:1px solid #222}.tooltip-parent{position:relative}.tooltip-parent .tooltip{position:absolute;visibility:hidden;width:max-content;max-width:150px;top:32px;left:50%;transform:translateX(-50%);font-family:"Roboto","Open Sans","Arial","Open Sans",sans;font-size:14px;text-transform:none;color:#fff;background-color:#68589e;padding:.5rem .25rem;border-radius:4px;z-index:7}@media(min-width: 769px){.tooltip-parent .tooltip{max-width:250px}}.tooltip-parent .tooltip:after{content:"";position:absolute;bottom:100%;left:50%;margin-left:-5px;border-width:5px;border-style:solid;border-color:rgba(0,0,0,0) rgba(0,0,0,0) #68589e rgba(0,0,0,0)}.tooltip-parent .tooltip.above:after{border-color:#68589e rgba(0,0,0,0) rgba(0,0,0,0) rgba(0,0,0,0)}.tooltip-parent .tooltip .tooltip-description{margin-bottom:.75rem}.tooltip-parent .tooltip .tooltip-example{text-transform:uppercase;font-size:12px}.tooltip-parent:focus .tooltip,.tooltip-parent:active .tooltip,.tooltip-parent:hover .tooltip{visibility:visible}.bottom{width:100%;height:35%;background-color:#f3f3f3}.bottom>.container{display:flex;flex-wrap:wrap;align-items:flex-end}.button-container{width:100%;display:flex;justify-content:center;align-items:center}.button-container.stack{flex-direction:column}.button-container.solution{opacity:0;visibility:hidden;animation-name:fadein;animation-delay:4.5s;animation-duration:1.5s;animation-fill-mode:forwards}@keyframes fadein{0%{opacity:0;visibility:visible}100%{opacity:1;visibility:visible}}.button-container.stack .show-btn{min-width:fit-content;width:60%;max-width:300px}.show-btn{outline:none;border:none;padding:.5rem 1rem;margin:.5rem;cursor:pointer;border-radius:50px;max-width:300px}@media(max-width: 390px){.show-btn{font-size:16px}}.show-btn:hover,.show-btn:active{filter:brightness(0.95)}.show-btn.primary{background-color:#ffcbab;border:1px solid #ffcbab}.show-btn.alt{background-color:#e1d8ff;border:1px solid #e1d8ff}.show-btn.secondary{background:none;border:1px solid #222}.show-btn.secondary:hover,.show-btn.secondary:active{filter:brightness(0.95);background-color:#e2e2e2;border:1px solid #e2e2e2}.show-btn.gray{background-color:#f3f3f3;border:1px solid #f3f3f3}.show-btn.gray:hover,.show-btn.gray:active{filter:brightness(0.95);background-color:#e2e2e2;border:1px solid #e2e2e2}.keyboard{width:100%;height:fit-content;padding:0 .25rem .25rem;text-align:center;align-self:flex-end}.keyboard .k-row{display:flex;justify-content:space-evenly;margin:.5rem 0}.keyboard .k-row div{position:relative;background-color:#e2e2e2;width:100%;height:44px;border-radius:8px;margin:0 .25rem}.keyboard .k-row div#backspace{width:150%;background-color:#d2d2d2}.keyboard .k-row div span,.keyboard .k-row div img{position:absolute;left:50%;top:50%;transform:translate(-50%, -50%);display:block}.message{position:fixed;bottom:0;left:0;width:100%;height:35%;background-color:#f3f3f3;display:flex;flex-direction:column;justify-content:space-evenly;align-items:center;text-align:center;text-wrap:balance}.message strong{font-family:"Georgia","Times New Roman",serif}.message.solution{height:35%;background-color:#f3f3f3;opacity:0;visibility:hidden;animation-name:fadein;animation-delay:4s;animation-duration:1.5s;animation-fill-mode:forwards}.message.is-correct-ans{height:35%;background-color:#ffcbab}.message .message-copy{margin:0 1.5rem}.message .message-copy .helper{font-size:16px}.message .explainer{margin-top:1rem;font-size:16px;color:#666}',"",{version:3,sources:["webpack://./src/scss/base/_body.scss","webpack://./src/scss/base/_media.scss","webpack://./src/scss/base/_typo.scss","webpack://./src/scss/base/_var.scss","webpack://./src/scss/base/_bootstrap.scss","webpack://./src/scss/components/_title.scss","webpack://./src/scss/components/_top-bar.scss","webpack://./src/scss/components/_learn.scss","webpack://./src/scss/components/_archive.scss","webpack://./src/scss/components/_clue-container.scss","webpack://./src/scss/components/_input.scss","webpack://./src/scss/components/_tooltip.scss","webpack://./src/scss/components/bottom/_bottom.scss","webpack://./src/scss/components/bottom/_button-container.scss","webpack://./src/scss/components/bottom/_button.scss","webpack://./src/scss/components/bottom/_keyboard.scss","webpack://./src/scss/components/bottom/_message.scss"],names:[],mappings:"AAGA,gBACI,WAAA,CACH,UAAA,CACA,cAAA,CACA,eAAA,CACA,QAAA,CCsDO,yBD3DR,gBAQE,cAAA,CAAA,CAIF,EACC,qBAAA,CAGD,KACI,YAAA,CAGJ,WACC,UAAA,CACA,WAAA,CACA,eAAA,CACA,aAAA,CAGD,IACC,cAAA,CACA,eAAA,CE9BD,KACC,yDCoCe,CDnCf,UCaS,CDTV,SACC,gBAAA,CAGD,GACC,iBAAA,CAGD,EACC,eAAA,CAGD,EACC,aCfkB,CDkBnB,GACC,eAAA,CAEA,KACC,WAAA,CACA,qBAAA,CAIF,OACC,yDCKe,CDJf,cAAA,CACA,aAAA,CAGD,WACC,yBAAA,CAGD,WACC,wBCnCqB,CCTtB,QACC,uBAAA,CAGC,UACD,yBAAA,CAGC,gBACD,+BAAA,CAGC,SACD,wBAAA,CAGC,SACD,wBAAA,CAGC,aACD,4BAAA,CAGC,cACD,6BAAA,CAGC,QACD,8BAAA,CACA,8BAAA,CACA,uBAAA,CAGC,eACD,qCAAA,CACA,qCAAA,CACA,8BAAA,CAGC,yBACD,WACE,uBAAA,CAEF,aACE,yBAAA,CAEF,mBACE,+BAAA,CAEF,YACE,wBAAA,CAEF,YACE,wBAAA,CAEF,gBACE,4BAAA,CAEF,iBACE,6BAAA,CAEF,WACE,8BAAA,CACA,8BAAA,CACA,uBAAA,CAEF,kBACE,qCAAA,CACA,qCAAA,CACA,8BAAA,CAAA,CAID,yBACD,WACE,uBAAA,CAEF,aACE,yBAAA,CAEF,mBACE,+BAAA,CAEF,YACE,wBAAA,CAEF,YACE,wBAAA,CAEF,gBACE,4BAAA,CAEF,iBACE,6BAAA,CAEF,WACE,8BAAA,CACA,8BAAA,CACA,uBAAA,CAEF,kBACE,qCAAA,CACA,qCAAA,CACA,8BAAA,CAAA,CAID,yBACD,WACE,uBAAA,CAEF,aACE,yBAAA,CAEF,mBACE,+BAAA,CAEF,YACE,wBAAA,CAEF,YACE,wBAAA,CAEF,gBACE,4BAAA,CAEF,iBACE,6BAAA,CAEF,WACE,8BAAA,CACA,8BAAA,CACA,uBAAA,CAEF,kBACE,qCAAA,CACA,qCAAA,CACA,8BAAA,CAAA,CAID,0BACD,WACE,uBAAA,CAEF,aACE,yBAAA,CAEF,mBACE,+BAAA,CAEF,YACE,wBAAA,CAEF,YACE,wBAAA,CAEF,gBACE,4BAAA,CAEF,iBACE,6BAAA,CAEF,WACE,8BAAA,CACA,8BAAA,CACA,uBAAA,CAEF,kBACE,qCAAA,CACA,qCAAA,CACA,8BAAA,CAAA,CAIH,MACC,oBAAA,CAGC,MACD,oBAAA,CAGC,MACD,oBAAA,CAGC,OACD,qBAAA,CAGC,MACD,qBAAA,CAGC,MACD,qBAAA,CAGC,MACD,qBAAA,CAGC,OACD,sBAAA,CAGC,QACD,yBAAA,CAGC,QACD,0BAAA,CAGC,KACD,mBAAA,CAGC,YAED,uBAAA,CAGC,YAED,yBAAA,CAGC,YAED,0BAAA,CAGC,YAED,wBAAA,CAGC,KACD,wBAAA,CAGC,YAED,4BAAA,CAGC,YAED,8BAAA,CAGC,YAED,+BAAA,CAGC,YAED,6BAAA,CAGC,KACD,uBAAA,CAGC,YAED,2BAAA,CAGC,YAED,6BAAA,CAGC,YAED,8BAAA,CAGC,YAED,4BAAA,CAGC,KACD,sBAAA,CAGC,YAED,0BAAA,CAGC,YAED,4BAAA,CAGC,YAED,6BAAA,CAGC,YAED,2BAAA,CAGC,KACD,wBAAA,CAGC,YAED,4BAAA,CAGC,YAED,8BAAA,CAGC,YAED,+BAAA,CAGC,YAED,6BAAA,CAGC,KACD,sBAAA,CAGC,YAED,0BAAA,CAGC,YAED,4BAAA,CAGC,YAED,6BAAA,CAGC,YAED,2BAAA,CAGC,KACD,oBAAA,CAGC,YAED,wBAAA,CAGC,YAED,0BAAA,CAGC,YAED,2BAAA,CAGC,YAED,yBAAA,CAGC,KACD,yBAAA,CAGC,YAED,6BAAA,CAGC,YAED,+BAAA,CAGC,YAED,gCAAA,CAGC,YAED,8BAAA,CAGC,KACD,wBAAA,CAGC,YAED,4BAAA,CAGC,YAED,8BAAA,CAGC,YAED,+BAAA,CAGC,YAED,6BAAA,CAGC,KACD,uBAAA,CAGC,YAED,2BAAA,CAGC,YAED,6BAAA,CAGC,YAED,8BAAA,CAGC,YAED,4BAAA,CAGC,KACD,yBAAA,CAGC,YAED,6BAAA,CAGC,YAED,+BAAA,CAGC,YAED,gCAAA,CAGC,YAED,8BAAA,CAGC,KACD,uBAAA,CAGC,YAED,2BAAA,CAGC,YAED,6BAAA,CAGC,YAED,8BAAA,CAGC,YAED,4BAAA,CAGC,QACD,sBAAA,CAGC,kBAED,0BAAA,CAGC,kBAED,4BAAA,CAGC,kBAED,6BAAA,CAGC,kBAED,2BAAA,CAGC,yBACD,QACE,mBAAA,CAEF,kBAEE,uBAAA,CAEF,kBAEE,yBAAA,CAEF,kBAEE,0BAAA,CAEF,kBAEE,wBAAA,CAEF,QACE,wBAAA,CAEF,kBAEE,4BAAA,CAEF,kBAEE,8BAAA,CAEF,kBAEE,+BAAA,CAEF,kBAEE,6BAAA,CAEF,QACE,uBAAA,CAEF,kBAEE,2BAAA,CAEF,kBAEE,6BAAA,CAEF,kBAEE,8BAAA,CAEF,kBAEE,4BAAA,CAEF,QACE,sBAAA,CAEF,kBAEE,0BAAA,CAEF,kBAEE,4BAAA,CAEF,kBAEE,6BAAA,CAEF,kBAEE,2BAAA,CAEF,QACE,wBAAA,CAEF,kBAEE,4BAAA,CAEF,kBAEE,8BAAA,CAEF,kBAEE,+BAAA,CAEF,kBAEE,6BAAA,CAEF,QACE,sBAAA,CAEF,kBAEE,0BAAA,CAEF,kBAEE,4BAAA,CAEF,kBAEE,6BAAA,CAEF,kBAEE,2BAAA,CAEF,QACE,oBAAA,CAEF,kBAEE,wBAAA,CAEF,kBAEE,0BAAA,CAEF,kBAEE,2BAAA,CAEF,kBAEE,yBAAA,CAEF,QACE,yBAAA,CAEF,kBAEE,6BAAA,CAEF,kBAEE,+BAAA,CAEF,kBAEE,gCAAA,CAEF,kBAEE,8BAAA,CAEF,QACE,wBAAA,CAEF,kBAEE,4BAAA,CAEF,kBAEE,8BAAA,CAEF,kBAEE,+BAAA,CAEF,kBAEE,6BAAA,CAEF,QACE,uBAAA,CAEF,kBAEE,2BAAA,CAEF,kBAEE,6BAAA,CAEF,kBAEE,8BAAA,CAEF,kBAEE,4BAAA,CAEF,QACE,yBAAA,CAEF,kBAEE,6BAAA,CAEF,kBAEE,+BAAA,CAEF,kBAEE,gCAAA,CAEF,kBAEE,8BAAA,CAEF,QACE,uBAAA,CAEF,kBAEE,2BAAA,CAEF,kBAEE,6BAAA,CAEF,kBAEE,8BAAA,CAEF,kBAEE,4BAAA,CAEF,WACE,sBAAA,CAEF,wBAEE,0BAAA,CAEF,wBAEE,4BAAA,CAEF,wBAEE,6BAAA,CAEF,wBAEE,2BAAA,CAAA,CAID,yBACD,QACE,mBAAA,CAEF,kBAEE,uBAAA,CAEF,kBAEE,yBAAA,CAEF,kBAEE,0BAAA,CAEF,kBAEE,wBAAA,CAEF,QACE,wBAAA,CAEF,kBAEE,4BAAA,CAEF,kBAEE,8BAAA,CAEF,kBAEE,+BAAA,CAEF,kBAEE,6BAAA,CAEF,QACE,uBAAA,CAEF,kBAEE,2BAAA,CAEF,kBAEE,6BAAA,CAEF,kBAEE,8BAAA,CAEF,kBAEE,4BAAA,CAEF,QACE,sBAAA,CAEF,kBAEE,0BAAA,CAEF,kBAEE,4BAAA,CAEF,kBAEE,6BAAA,CAEF,kBAEE,2BAAA,CAEF,QACE,wBAAA,CAEF,kBAEE,4BAAA,CAEF,kBAEE,8BAAA,CAEF,kBAEE,+BAAA,CAEF,kBAEE,6BAAA,CAEF,QACE,sBAAA,CAEF,kBAEE,0BAAA,CAEF,kBAEE,4BAAA,CAEF,kBAEE,6BAAA,CAEF,kBAEE,2BAAA,CAEF,QACE,oBAAA,CAEF,kBAEE,wBAAA,CAEF,kBAEE,0BAAA,CAEF,kBAEE,2BAAA,CAEF,kBAEE,yBAAA,CAEF,QACE,yBAAA,CAEF,kBAEE,6BAAA,CAEF,kBAEE,+BAAA,CAEF,kBAEE,gCAAA,CAEF,kBAEE,8BAAA,CAEF,QACE,wBAAA,CAEF,kBAEE,4BAAA,CAEF,kBAEE,8BAAA,CAEF,kBAEE,+BAAA,CAEF,kBAEE,6BAAA,CAEF,QACE,uBAAA,CAEF,kBAEE,2BAAA,CAEF,kBAEE,6BAAA,CAEF,kBAEE,8BAAA,CAEF,kBAEE,4BAAA,CAEF,QACE,yBAAA,CAEF,kBAEE,6BAAA,CAEF,kBAEE,+BAAA,CAEF,kBAEE,gCAAA,CAEF,kBAEE,8BAAA,CAEF,QACE,uBAAA,CAEF,kBAEE,2BAAA,CAEF,kBAEE,6BAAA,CAEF,kBAEE,8BAAA,CAEF,kBAEE,4BAAA,CAEF,WACE,sBAAA,CAEF,wBAEE,0BAAA,CAEF,wBAEE,4BAAA,CAEF,wBAEE,6BAAA,CAEF,wBAEE,2BAAA,CAAA,CAID,yBACD,QACE,mBAAA,CAEF,kBAEE,uBAAA,CAEF,kBAEE,yBAAA,CAEF,kBAEE,0BAAA,CAEF,kBAEE,wBAAA,CAEF,QACE,wBAAA,CAEF,kBAEE,4BAAA,CAEF,kBAEE,8BAAA,CAEF,kBAEE,+BAAA,CAEF,kBAEE,6BAAA,CAEF,QACE,uBAAA,CAEF,kBAEE,2BAAA,CAEF,kBAEE,6BAAA,CAEF,kBAEE,8BAAA,CAEF,kBAEE,4BAAA,CAEF,QACE,sBAAA,CAEF,kBAEE,0BAAA,CAEF,kBAEE,4BAAA,CAEF,kBAEE,6BAAA,CAEF,kBAEE,2BAAA,CAEF,QACE,wBAAA,CAEF,kBAEE,4BAAA,CAEF,kBAEE,8BAAA,CAEF,kBAEE,+BAAA,CAEF,kBAEE,6BAAA,CAEF,QACE,sBAAA,CAEF,kBAEE,0BAAA,CAEF,kBAEE,4BAAA,CAEF,kBAEE,6BAAA,CAEF,kBAEE,2BAAA,CAEF,QACE,oBAAA,CAEF,kBAEE,wBAAA,CAEF,kBAEE,0BAAA,CAEF,kBAEE,2BAAA,CAEF,kBAEE,yBAAA,CAEF,QACE,yBAAA,CAEF,kBAEE,6BAAA,CAEF,kBAEE,+BAAA,CAEF,kBAEE,gCAAA,CAEF,kBAEE,8BAAA,CAEF,QACE,wBAAA,CAEF,kBAEE,4BAAA,CAEF,kBAEE,8BAAA,CAEF,kBAEE,+BAAA,CAEF,kBAEE,6BAAA,CAEF,QACE,uBAAA,CAEF,kBAEE,2BAAA,CAEF,kBAEE,6BAAA,CAEF,kBAEE,8BAAA,CAEF,kBAEE,4BAAA,CAEF,QACE,yBAAA,CAEF,kBAEE,6BAAA,CAEF,kBAEE,+BAAA,CAEF,kBAEE,gCAAA,CAEF,kBAEE,8BAAA,CAEF,QACE,uBAAA,CAEF,kBAEE,2BAAA,CAEF,kBAEE,6BAAA,CAEF,kBAEE,8BAAA,CAEF,kBAEE,4BAAA,CAEF,WACE,sBAAA,CAEF,wBAEE,0BAAA,CAEF,wBAEE,4BAAA,CAEF,wBAEE,6BAAA,CAEF,wBAEE,2BAAA,CAAA,CAID,0BACD,QACE,mBAAA,CAEF,kBAEE,uBAAA,CAEF,kBAEE,yBAAA,CAEF,kBAEE,0BAAA,CAEF,kBAEE,wBAAA,CAEF,QACE,wBAAA,CAEF,kBAEE,4BAAA,CAEF,kBAEE,8BAAA,CAEF,kBAEE,+BAAA,CAEF,kBAEE,6BAAA,CAEF,QACE,uBAAA,CAEF,kBAEE,2BAAA,CAEF,kBAEE,6BAAA,CAEF,kBAEE,8BAAA,CAEF,kBAEE,4BAAA,CAEF,QACE,sBAAA,CAEF,kBAEE,0BAAA,CAEF,kBAEE,4BAAA,CAEF,kBAEE,6BAAA,CAEF,kBAEE,2BAAA,CAEF,QACE,wBAAA,CAEF,kBAEE,4BAAA,CAEF,kBAEE,8BAAA,CAEF,kBAEE,+BAAA,CAEF,kBAEE,6BAAA,CAEF,QACE,sBAAA,CAEF,kBAEE,0BAAA,CAEF,kBAEE,4BAAA,CAEF,kBAEE,6BAAA,CAEF,kBAEE,2BAAA,CAEF,QACE,oBAAA,CAEF,kBAEE,wBAAA,CAEF,kBAEE,0BAAA,CAEF,kBAEE,2BAAA,CAEF,kBAEE,yBAAA,CAEF,QACE,yBAAA,CAEF,kBAEE,6BAAA,CAEF,kBAEE,+BAAA,CAEF,kBAEE,gCAAA,CAEF,kBAEE,8BAAA,CAEF,QACE,wBAAA,CAEF,kBAEE,4BAAA,CAEF,kBAEE,8BAAA,CAEF,kBAEE,+BAAA,CAEF,kBAEE,6BAAA,CAEF,QACE,uBAAA,CAEF,kBAEE,2BAAA,CAEF,kBAEE,6BAAA,CAEF,kBAEE,8BAAA,CAEF,kBAEE,4BAAA,CAEF,QACE,yBAAA,CAEF,kBAEE,6BAAA,CAEF,kBAEE,+BAAA,CAEF,kBAEE,gCAAA,CAEF,kBAEE,8BAAA,CAEF,QACE,uBAAA,CAEF,kBAEE,2BAAA,CAEF,kBAEE,6BAAA,CAEF,kBAEE,8BAAA,CAEF,kBAEE,4BAAA,CAEF,WACE,sBAAA,CAEF,wBAEE,0BAAA,CAEF,wBAEE,4BAAA,CAEF,wBAEE,6BAAA,CAEF,wBAEE,2BAAA,CAAA,CAID,cACD,6BAAA,CAGC,aACD,6BAAA,CAGC,eACD,eAAA,CACA,sBAAA,CACA,kBAAA,CAGC,WACD,0BAAA,CAGC,YACD,2BAAA,CAGC,aACD,4BAAA,CAGC,yBACD,cACE,0BAAA,CAEF,eACE,2BAAA,CAEF,gBACE,4BAAA,CAAA,CAID,yBACD,cACE,0BAAA,CAEF,eACE,2BAAA,CAEF,gBACE,4BAAA,CAAA,CAID,yBACD,cACE,0BAAA,CAEF,eACE,2BAAA,CAEF,gBACE,4BAAA,CAAA,CAID,0BACD,cACE,0BAAA,CAEF,eACE,2BAAA,CAEF,gBACE,4BAAA,CAAA,CAID,gBACD,mCAAA,CAGC,gBACD,mCAAA,CAGC,iBACD,oCAAA,CCzkDD,OACC,YAAA,CACA,qBAAA,CACA,kBAAA,CACA,4BAAA,CACA,yDFgCe,CE9Bf,mBACC,cAAA,CAGD,kBACC,eAAA,CAGD,oBACC,eAAA,CACA,eAAA,CAEA,sBACC,cAAA,CACA,kBAAA,CAIF,oBACC,cAAA,CAEA,mBAAA,CACA,iBAAA,CAEA,qGAGC,iBAAA,CACA,iBAAA,CACA,mBAAA,CACA,eAAA,CAEA,oHAIC,eAAA,CAKF,iCAEC,wBAAA,CAGD,mCACC,wBFpDiB,CEwDlB,iCACC,wBFpDmB,CE0DrB,sBACC,YAAA,CACA,qBAAA,CACA,sBAAA,CACA,kBAAA,CACA,UAAA,CAEA,kCACC,iBAAA,CACA,yDFrCa,CEsCb,cAAA,CACA,UF5Dc,CGhBjB,SACC,wBHkBgB,CGjBhB,WH2Be,CGzBf,oBACC,YAAA,CACA,wBAAA,CACA,kBAAA,CACA,aAAA,CAEA,0BACC,cAAA,CCXH,OACC,iBAAA,CACA,eAAA,CACA,sBAAA,CAEA,oBACC,oBAAA,CAIA,yCACC,kBAAA,CAGD,sCACC,cAAA,CACA,eAAA,CAGD,iCACC,wBAAA,CAGD,yBACC,iBAAA,CAEA,gCACC,oBAAA,CAKF,kCAEC,wBJ3BmB,CI8BpB,yCACC,wBAAA,CACA,mBAAA,CACA,kBAAA,CAEA,kDACC,0BAAA,CACA,6CJRa,CISb,oBAAA,CACA,iBAAA,CAGD,sDACC,wBJ/Ba,CIgCb,YAAA,CACA,eAAA,CAEA,6DACC,6CJnBY,CIoBZ,wBAAA,CACA,eAAA,CAGD,0DACC,gBAAA,CACA,WAAA,CACA,mBAAA,CAGF,mDACC,YAAA,CACA,sBAAA,CACA,eAAA,CAEA,2DACC,wBAAA,CACA,iBAAA,CACA,iBAAA,CACA,oBAAA,CACA,UAAA,CACA,WAAA,CACA,eAAA,CACA,uBAAA,CAGA,sEACC,2BAAA,CAMJ,kCACC,YAAA,CACA,cAAA,CACA,sBAAA,CACA,yBAAA,CACA,oBAAA,CAEA,6CACC,aAAA,CACA,gBAAA,CACA,6CJ/Da,CIgEb,wBJ5FoB,CI6FpB,eAAA,CAKH,oBACC,YAAA,CACA,cAAA,CACA,sBAAA,CACA,yBAAA,CAEA,uBACC,cAAA,CACA,wBAAA,CACA,kBAAA,CACA,iBAAA,CACA,oBAAA,CACA,8BAAA,CACA,cAAA,CAEA,sHACC,wBAAA,CACA,wBJpHkB,CKPtB,SACC,iBAAA,CACA,eAAA,CACA,uBAAA,CAEA,YACC,yDLgCa,CK/Bb,cAAA,CAID,uBACC,YAAA,CACA,gBAAA,CACA,kBAAA,CACA,iBAAA,CAEA,wCACC,UAAA,CACA,cAAA,CACA,gBAAA,CACA,iBAAA,CACA,yDLea,CKdb,eAAA,CACA,aAAA,CAIA,yDACC,WAAA,CACA,iBAAA,CACA,UAAA,CACA,UAAA,CACA,WAAA,CACA,mBAAA,CACA,OAAA,CACA,0BAAA,CACA,MAAA,CAGD,2DACC,wBLvCgB,CKwChB,wBAAA,CAGD,2DACC,wBLvCkB,CKwClB,wBAAA,CAKH,uBACC,YAAA,CACA,UAAA,CACA,kBAAA,CACA,0BAAA,CACA,cAAA,CACA,mBAAA,CACA,WAAA,CACA,wBAAA,CACA,eAAA,CACA,mBAAA,CACA,cAAA,CAEA,0DACC,wBL/Cc,CKgDd,wBAAA,CAGD,uCACC,mBAAA,CACA,YAAA,CAEA,wDACC,iBAAA,CACA,UAAA,CACA,kBAAA,CACA,aAAA,CACA,wBAAA,CAGD,mDACC,YAAA,CACA,qBAAA,CACA,sBAAA,CACA,cAAA,CACA,eAAA,CACA,yDLnDY,CKoDZ,wBAAA,CAEA,gIACC,eAAA,CACA,eAAA,CACA,iBAAA,CAEA,4IACC,cAAA,CACA,eAAA,CAIF,iEACC,wBLrGe,CKwGhB,+DACC,wBLpGiB,CKyGpB,kCACC,eAAA,CACA,gBAAA,CACA,sBAAA,CACA,aAAA,CACA,cAAA,CACA,cAAA,CACA,aAAA,CACA,6CLpFc,CKuFf,oCAEC,yDLxFa,CKyFb,cAAA,CACA,UL/Gc,CKgHd,aAAA,CACA,iBAAA,CACA,gBAAA,CACA,kBAAA,CACA,WAAA,CCpIH,gBACC,iBAAA,CACA,gBAAA,CACA,YAAA,CACA,qBAAA,CACA,4BAAA,CACA,iBAAA,CACA,UAAA,CACA,uBNyB0B,CMxB1B,aAAA,CACA,cAAA,CACA,iBAAA,CACA,cAAA,CACA,iBAAA,CAEA,0BACC,cAAA,CAGD,sBACC,YAAA,CACA,kBAAA,CACA,iBAAA,CACA,KAAA,CACA,MAAA,CACA,cAAA,CACA,WAAA,CACA,oBAAA,CAEA,yBACC,YAAA,CACA,kBAAA,CACA,eAAA,CACA,cAAA,CAEA,mCACC,oBAAA,CACA,yDAAA,CACA,cAAA,CACA,eAAA,CACA,wBAAA,CACA,UN1BM,CM2BN,kBAAA,CACA,wBNpCkB,CMuCnB,mCACC,yDNVY,CMWZ,cAAA,CACA,eAAA,CACA,UNlCa,CMwChB,4BACC,iBAAA,CACA,QAAA,CACA,MAAA,CACA,YAAA,CACA,cAAA,CACA,eAAA,CACA,yDN1Bc,CM2Bd,wBAAA,CACA,WAAA,CACA,mBAAA,CACE,gBAAA,CAEF,kFACC,eAAA,CACA,eAAA,CACA,iBAAA,CAEA,8FACC,cAAA,CACA,eAAA,CAIF,wCACC,wBN1EmB,CM2EnB,kBAAA,CAGD,0CACC,wBNpFiB,CMwFnB,sBACC,YAAA,CACA,qBAAA,CACA,wBAAA,CACA,4BAAA,CACA,WAAA,CAEA,8BACC,iBAAA,CACA,6CN/Dc,CMgEd,6EACC,CAID,wCACC,yBAAA,CAKH,4BACC,WAAA,CACA,YAAA,CACA,kBAAA,CACA,sBAAA,CACA,cAAA,CACA,oBAAA,CACA,6CNlFe,CMmFf,wBAAA,CACA,mBAAA,CACA,gBAAA,CAIC,0CACC,mBAAA,CACE,gBAAA,CACF,mBAAA,CACA,gBAAA,CACA,SAAA,CACA,6EACC,CAMH,gCACC,SAAA,CACA,uBAAA,CACA,SAAA,CACA,6EACC,CAMH,6BACC,WAAA,CACA,YAAA,CACA,sBAAA,CACA,sBAAA,CAEA,uCACC,yDNtHY,CMuHZ,UAAA,CACA,4BAAA,CACA,iBAAA,CACA,wBAAA,CACA,aAAA,CACA,iBAAA,CAEA,+CACC,iBAAA,CACA,mBAAA,CACE,gBAAA,CACF,iBAAA,CACA,oBAAA,CACA,UAAA,CACA,WAAA,CACA,uBAAA,CAGA,0DACC,2BAAA,CAGD,0DACC,SAAA,CACA,mBAAA,CACE,gBAAA,CACF,4BAAA,CAGD,2DACC,iBAAA,CACA,OAAA,CACA,QAAA,CACA,+BAAA,CAIF,sEACC,SAAA,CACA,mBAAA,CACE,gBAAA,CACF,4BAAA,CAGD,0EACC,SAAA,CACA,4BAAA,CAIF,qCACC,SAAA,CACA,4BAAA,CACA,iBAAA,CACA,QAAA,CACA,QAAA,CACA,0BAAA,CACA,cAAA,CACA,yDNlLa,CMmLb,mBAAA,CACA,gBAAA,CAEA,0CACC,SAAA,CACA,4BAAA,CACA,kBAAA,CACA,eAAA,CC/NJ,OACC,UP+BsB,CO9BtB,YAAA,CACA,qBAAA,CACA,sBAAA,CAEA,kBACC,YAAA,CACA,cAAA,CACA,sBAAA,CACA,kBAAA,CAEA,wBACC,cAAA,CACA,gBAAA,CAEA,8BACC,WAAA,CACA,UAAA,CACA,qBAAA,CACA,iBAAA,CACA,eAAA,CAEA,yCACC,2BAAA,CCxBL,gBACC,iBAAA,CAEA,yBACC,iBAAA,CACA,iBAAA,CACA,iBAAA,CACA,eAAA,CACA,QAAA,CACA,QAAA,CACA,0BAAA,CACA,yDR0Bc,CQzBd,cAAA,CACA,mBAAA,CACA,UAAA,CACA,wBRNmB,CQOnB,oBAAA,CACA,iBAAA,CACA,SAAA,CAEA,yBAjBD,yBAkBE,eAAA,CAAA,CAGD,+BACC,UAAA,CACA,iBAAA,CACA,WAAA,CACA,QAAA,CACA,gBAAA,CACA,gBAAA,CACA,kBAAA,CACA,8DAAA,CAGD,qCACC,8DAAA,CAGD,8CACC,oBAAA,CAGD,0CACC,wBAAA,CACA,cAAA,CAKD,8FACC,kBAAA,CCnDH,QACC,UAAA,CACA,UT4BkB,CS3BlB,wBTgBgB,CSdhB,mBACC,YAAA,CACA,cAAA,CACA,oBAAA,CCVF,kBACC,UAAA,CACA,YAAA,CACA,sBAAA,CACA,kBAAA,CAEA,wBACC,qBAAA,CAGD,2BACC,SAAA,CACA,iBAAA,CACA,qBAAA,CACA,oBAAA,CACA,uBAAA,CACA,4BAAA,CAIF,kBACC,GACC,SAAA,CACA,kBAAA,CAGD,KACC,SAAA,CACA,kBAAA,CAAA,CCvBA,kCACC,qBAAA,CACA,SAAA,CACA,eAAA,CAKH,UACI,YAAA,CACA,WAAA,CACA,kBAAA,CACA,YAAA,CACA,cAAA,CACH,kBAAA,CACA,eAAA,Cb6EG,yBapFJ,UAUE,cAAA,CAAA,CAGD,iCACC,uBAAA,CAGD,kBACC,wBX3BkB,CW4BlB,wBAAA,CAGD,cACC,wBX3BoB,CW4BpB,wBAAA,CAGD,oBACC,eAAA,CACA,qBAAA,CAEA,qDACC,uBAAA,CACA,wBX1BO,CW2BP,wBAAA,CAKF,eACC,wBXhCe,CWiCf,wBAAA,CAEA,2CACC,uBAAA,CACA,wBXtCO,CWuCP,wBAAA,CCzDH,UACC,UAAA,CACA,kBZ6BoB,CY5BpB,uBAAA,CACA,iBAAA,CACA,mBAAA,CAEA,iBACC,YAAA,CACA,4BAAA,CACA,cAAA,CAEA,qBACC,iBAAA,CACA,wBZIO,CYHP,UAAA,CACA,WAAA,CACA,iBAAA,CACA,eAAA,CAEA,+BACC,UAAA,CACA,wBZDY,CYIb,mDAEC,iBAAA,CACA,QAAA,CACA,OAAA,CACA,+BAAA,CACA,aAAA,CC/BJ,SACC,cAAA,CACA,QAAA,CACA,MAAA,CACA,UAAA,CACA,UbyBkB,CaxBlB,wBbagB,CaZhB,YAAA,CACA,qBAAA,CACA,4BAAA,CACA,kBAAA,CACA,iBAAA,CACA,iBAAA,CAEA,gBACC,6CbqBe,CalBhB,kBACC,UAAA,CACA,wBbDe,CaEf,SAAA,CACA,iBAAA,CACA,qBAAA,CACA,kBAAA,CACA,uBAAA,CACA,4BAAA,CAGD,wBACC,UAAA,CACA,wBb7BkB,CagCnB,uBACC,eAAA,CAEA,+BACC,cAAA,CAKF,oBACC,eAAA,CACA,cAAA,CACA,Ub9Be",sourcesContent:["@use './var' as *;\n@use './media' as *;\n\nhtml, body, #root {\n    height: 100%;\n\twidth: 100%;\n\tfont-size: 18px;\n\toverflow: hidden;\n\tmargin: 0;\n\n\t@include desktop {\n\t\tfont-size: 20px;\n\t}\n}\n\n* {\n\tbox-sizing: border-box;\n}\n\nbody {\n    display: flex;\n}\n\n.container {\n\twidth: 100%;\n\theight: 100%;\n\tmax-width: 700px;\n\tmargin: 0 auto;\n}\n\nimg {\n\tmax-width: 100%;\n\tmax-height: 100%;\n}",'$xs: 575px;\n$sm: 576px;\n$md: 768px;\n$lg: 992px;\n$xl: 1200px;\n$xxl: 1400px;\n\n@mixin xs {\n    @media (max-width: $xs) {\n        @content;\n    }\n}\n\n@mixin sm {\n    @media (min-width: $sm) {\n        @content;\n    }\n}\n\n@mixin md {\n    @media (min-width: $md) {\n        @content;\n    }\n}\n\n@mixin lg {\n    @media (min-width: $lg) {\n        @content;\n    }\n}\n\n@mixin xl {\n    @media (min-width: $xl) {\n        @content;\n    }\n}\n\n@mixin xxl {\n    @media (min-width: $xxl) {\n        @content;\n    }\n}\n\n//$size: strings ["medium", "large", "max", "tablet"] or PX value as min-width. Defaults to 768px.\n@mixin desktop($size: $md) {\n    @if ($size == "tablet") {\n        @media (min-width: $md) {\n            @content;\n        }\n    } @else if ($size == "medium") {\n        @media (min-width: $md) {\n            @content;\n        }\n    } @else if ($size == "large") {\n        @media (min-width: $lg) {\n            @content;\n        }\n    } @else if ($size == "max") {\n        @media (min-width: $xl) {\n            @content;\n        }\n    } @else {\n        @media (min-width: $size) {\n            @content;\n        }\n    }\n}\n\n//$size: PX value as min-width. Defaults to 769px.\n@mixin tablet($size: $md) {\n    @media (min-width: $size) {\n        @content;\n    }\n}\n\n//$size: strings ["tiny", "standard"] or PX Value as max-width. Defaults to 544px.\n@mixin mobile($size: $md) {\n    @if ($size == "tiny") {\n        @media (max-width: $sm) {\n            @content;\n        }\n    } @else {\n        @media (max-width: $size) {\n            @content;\n        }\n    }\n}\n\n//$min: PX value as min-width.\n@mixin min($min) {\n    @media (min-width: $min) {\n        @content;\n    }\n}\n\n//$max: PX value as max-width.\n@mixin max($max) {\n    @media (max-width: $max) {\n        @content;\n    }\n}\n\n//($min, $max) PX values as min-width and max-width.\n@mixin minmax($min, $max) {\n    @media (min-width: $min) and (max-width: $max) {\n        @content;\n    }\n}',"@use './var' as *;\n\nbody {\n\tfont-family: $lc-font--sans;\n\tcolor: $lc-text;\n\t// line-height: 1.25rem;\n}\n\nh1, h2, h3 {\n\tfont-weight: bold;\n}\n\nh2 {\n\tfont-size: 1.25rem;\n}\n\np {\n\tmargin: .25rem 0;\n}\n\na {\n\tcolor: $lc-primary--dark;\n}\n\nli {\n\tmargin: .25rem 0;\n\n\ta {\n\t\tcolor: unset;\n\t\ttext-decoration: unset;\n\t}\n}\n\nbutton {\n\tfont-family: $lc-font--sans;\n\tfont-size: 1rem;\n\tline-height: 1;\n}\n\n.underline {\n\ttext-decoration: underline;\n}\n\n.highlight {\n\tbackground-color: $lc-secondary--light;\n}","@import url('https://fonts.googleapis.com/css2?family=Roboto:ital,wght@0,100..900;1,100..900&display=swap');\n\n// Main colors\n$lc-primary: #EF9E6C;\n$lc-primary--light: #FFCBAB;\n$lc-primary--v-light: #FFEEE3;\n$lc-primary--dark: #C94F03;\n\n$lc-secondary: #b9ace2;\n$lc-secondary--light: #E1D8FF;\n$lc-secondary--v-light: #eae4ff;\n$lc-secondary--dark: #68589E;\n\n$lc-hint0: $lc-primary;\n$lc-hint0--dark: $lc-primary--dark;\n\n// Grays\n$lc-text: #222;\n$lc-text--light: #666;\n$lc-black: #222;\n$lc-gray: #E2E2E2;\n$lc-gray--light: #F3F3F3;\n$lc-gray--v-light: #F9F9F9;\n$lc-gray--dark: #d2d2d2;\n\n// Transition\n$lc-transition: 2.5s;\n$lc-transition--short: .85s;\n$lc-transition--very-short: .5s;\n\n// Height\n$lc-top-height: 60px;\n$lc-bottom-height: 35%;\n$lc-keyboard-height: fit-content;\n$lc-clue-input-height: 20%;\n$lc-clue-container-height: calc((100% - $lc-bottom-height) - $lc-top-height);\n\n// Font\n$lc-font--serif: 'Georgia', 'Times New Roman', serif;\n$lc-font--sans: 'Roboto', 'Open Sans', 'Arial', 'Open Sans', sans;\n$lc-font--alt: 'Caveat', 'Helvetica', 'Arial', 'Open Sans', sans;",".d-none {\n\tdisplay: none !important;\n  }\n  \n  .d-inline {\n\tdisplay: inline !important;\n  }\n  \n  .d-inline-block {\n\tdisplay: inline-block !important;\n  }\n  \n  .d-block {\n\tdisplay: block !important;\n  }\n  \n  .d-table {\n\tdisplay: table !important;\n  }\n  \n  .d-table-row {\n\tdisplay: table-row !important;\n  }\n  \n  .d-table-cell {\n\tdisplay: table-cell !important;\n  }\n  \n  .d-flex {\n\tdisplay: -webkit-box !important;\n\tdisplay: -ms-flexbox !important;\n\tdisplay: flex !important;\n  }\n  \n  .d-inline-flex {\n\tdisplay: -webkit-inline-box !important;\n\tdisplay: -ms-inline-flexbox !important;\n\tdisplay: inline-flex !important;\n  }\n  \n  @media (min-width: 576px) {\n\t.d-sm-none {\n\t  display: none !important;\n\t}\n\t.d-sm-inline {\n\t  display: inline !important;\n\t}\n\t.d-sm-inline-block {\n\t  display: inline-block !important;\n\t}\n\t.d-sm-block {\n\t  display: block !important;\n\t}\n\t.d-sm-table {\n\t  display: table !important;\n\t}\n\t.d-sm-table-row {\n\t  display: table-row !important;\n\t}\n\t.d-sm-table-cell {\n\t  display: table-cell !important;\n\t}\n\t.d-sm-flex {\n\t  display: -webkit-box !important;\n\t  display: -ms-flexbox !important;\n\t  display: flex !important;\n\t}\n\t.d-sm-inline-flex {\n\t  display: -webkit-inline-box !important;\n\t  display: -ms-inline-flexbox !important;\n\t  display: inline-flex !important;\n\t}\n  }\n  \n  @media (min-width: 768px) {\n\t.d-md-none {\n\t  display: none !important;\n\t}\n\t.d-md-inline {\n\t  display: inline !important;\n\t}\n\t.d-md-inline-block {\n\t  display: inline-block !important;\n\t}\n\t.d-md-block {\n\t  display: block !important;\n\t}\n\t.d-md-table {\n\t  display: table !important;\n\t}\n\t.d-md-table-row {\n\t  display: table-row !important;\n\t}\n\t.d-md-table-cell {\n\t  display: table-cell !important;\n\t}\n\t.d-md-flex {\n\t  display: -webkit-box !important;\n\t  display: -ms-flexbox !important;\n\t  display: flex !important;\n\t}\n\t.d-md-inline-flex {\n\t  display: -webkit-inline-box !important;\n\t  display: -ms-inline-flexbox !important;\n\t  display: inline-flex !important;\n\t}\n  }\n  \n  @media (min-width: 992px) {\n\t.d-lg-none {\n\t  display: none !important;\n\t}\n\t.d-lg-inline {\n\t  display: inline !important;\n\t}\n\t.d-lg-inline-block {\n\t  display: inline-block !important;\n\t}\n\t.d-lg-block {\n\t  display: block !important;\n\t}\n\t.d-lg-table {\n\t  display: table !important;\n\t}\n\t.d-lg-table-row {\n\t  display: table-row !important;\n\t}\n\t.d-lg-table-cell {\n\t  display: table-cell !important;\n\t}\n\t.d-lg-flex {\n\t  display: -webkit-box !important;\n\t  display: -ms-flexbox !important;\n\t  display: flex !important;\n\t}\n\t.d-lg-inline-flex {\n\t  display: -webkit-inline-box !important;\n\t  display: -ms-inline-flexbox !important;\n\t  display: inline-flex !important;\n\t}\n  }\n  \n  @media (min-width: 1200px) {\n\t.d-xl-none {\n\t  display: none !important;\n\t}\n\t.d-xl-inline {\n\t  display: inline !important;\n\t}\n\t.d-xl-inline-block {\n\t  display: inline-block !important;\n\t}\n\t.d-xl-block {\n\t  display: block !important;\n\t}\n\t.d-xl-table {\n\t  display: table !important;\n\t}\n\t.d-xl-table-row {\n\t  display: table-row !important;\n\t}\n\t.d-xl-table-cell {\n\t  display: table-cell !important;\n\t}\n\t.d-xl-flex {\n\t  display: -webkit-box !important;\n\t  display: -ms-flexbox !important;\n\t  display: flex !important;\n\t}\n\t.d-xl-inline-flex {\n\t  display: -webkit-inline-box !important;\n\t  display: -ms-inline-flexbox !important;\n\t  display: inline-flex !important;\n\t}\n  }\n\n.w-25 {\n\twidth: 25% !important;\n  }\n  \n  .w-50 {\n\twidth: 50% !important;\n  }\n  \n  .w-75 {\n\twidth: 75% !important;\n  }\n  \n  .w-100 {\n\twidth: 100% !important;\n  }\n  \n  .h-25 {\n\theight: 25% !important;\n  }\n  \n  .h-50 {\n\theight: 50% !important;\n  }\n  \n  .h-75 {\n\theight: 75% !important;\n  }\n  \n  .h-100 {\n\theight: 100% !important;\n  }\n  \n  .mw-100 {\n\tmax-width: 100% !important;\n  }\n  \n  .mh-100 {\n\tmax-height: 100% !important;\n  }\n  \n  .m-0 {\n\tmargin: 0 !important;\n  }\n  \n  .mt-0,\n  .my-0 {\n\tmargin-top: 0 !important;\n  }\n  \n  .mr-0,\n  .mx-0 {\n\tmargin-right: 0 !important;\n  }\n  \n  .mb-0,\n  .my-0 {\n\tmargin-bottom: 0 !important;\n  }\n  \n  .ml-0,\n  .mx-0 {\n\tmargin-left: 0 !important;\n  }\n  \n  .m-1 {\n\tmargin: 0.25rem !important;\n  }\n  \n  .mt-1,\n  .my-1 {\n\tmargin-top: 0.25rem !important;\n  }\n  \n  .mr-1,\n  .mx-1 {\n\tmargin-right: 0.25rem !important;\n  }\n  \n  .mb-1,\n  .my-1 {\n\tmargin-bottom: 0.25rem !important;\n  }\n  \n  .ml-1,\n  .mx-1 {\n\tmargin-left: 0.25rem !important;\n  }\n  \n  .m-2 {\n\tmargin: 0.5rem !important;\n  }\n  \n  .mt-2,\n  .my-2 {\n\tmargin-top: 0.5rem !important;\n  }\n  \n  .mr-2,\n  .mx-2 {\n\tmargin-right: 0.5rem !important;\n  }\n  \n  .mb-2,\n  .my-2 {\n\tmargin-bottom: 0.5rem !important;\n  }\n  \n  .ml-2,\n  .mx-2 {\n\tmargin-left: 0.5rem !important;\n  }\n  \n  .m-3 {\n\tmargin: 1rem !important;\n  }\n  \n  .mt-3,\n  .my-3 {\n\tmargin-top: 1rem !important;\n  }\n  \n  .mr-3,\n  .mx-3 {\n\tmargin-right: 1rem !important;\n  }\n  \n  .mb-3,\n  .my-3 {\n\tmargin-bottom: 1rem !important;\n  }\n  \n  .ml-3,\n  .mx-3 {\n\tmargin-left: 1rem !important;\n  }\n  \n  .m-4 {\n\tmargin: 1.5rem !important;\n  }\n  \n  .mt-4,\n  .my-4 {\n\tmargin-top: 1.5rem !important;\n  }\n  \n  .mr-4,\n  .mx-4 {\n\tmargin-right: 1.5rem !important;\n  }\n  \n  .mb-4,\n  .my-4 {\n\tmargin-bottom: 1.5rem !important;\n  }\n  \n  .ml-4,\n  .mx-4 {\n\tmargin-left: 1.5rem !important;\n  }\n  \n  .m-5 {\n\tmargin: 3rem !important;\n  }\n  \n  .mt-5,\n  .my-5 {\n\tmargin-top: 3rem !important;\n  }\n  \n  .mr-5,\n  .mx-5 {\n\tmargin-right: 3rem !important;\n  }\n  \n  .mb-5,\n  .my-5 {\n\tmargin-bottom: 3rem !important;\n  }\n  \n  .ml-5,\n  .mx-5 {\n\tmargin-left: 3rem !important;\n  }\n  \n  .p-0 {\n\tpadding: 0 !important;\n  }\n  \n  .pt-0,\n  .py-0 {\n\tpadding-top: 0 !important;\n  }\n  \n  .pr-0,\n  .px-0 {\n\tpadding-right: 0 !important;\n  }\n  \n  .pb-0,\n  .py-0 {\n\tpadding-bottom: 0 !important;\n  }\n  \n  .pl-0,\n  .px-0 {\n\tpadding-left: 0 !important;\n  }\n  \n  .p-1 {\n\tpadding: 0.25rem !important;\n  }\n  \n  .pt-1,\n  .py-1 {\n\tpadding-top: 0.25rem !important;\n  }\n  \n  .pr-1,\n  .px-1 {\n\tpadding-right: 0.25rem !important;\n  }\n  \n  .pb-1,\n  .py-1 {\n\tpadding-bottom: 0.25rem !important;\n  }\n  \n  .pl-1,\n  .px-1 {\n\tpadding-left: 0.25rem !important;\n  }\n  \n  .p-2 {\n\tpadding: 0.5rem !important;\n  }\n  \n  .pt-2,\n  .py-2 {\n\tpadding-top: 0.5rem !important;\n  }\n  \n  .pr-2,\n  .px-2 {\n\tpadding-right: 0.5rem !important;\n  }\n  \n  .pb-2,\n  .py-2 {\n\tpadding-bottom: 0.5rem !important;\n  }\n  \n  .pl-2,\n  .px-2 {\n\tpadding-left: 0.5rem !important;\n  }\n  \n  .p-3 {\n\tpadding: 1rem !important;\n  }\n  \n  .pt-3,\n  .py-3 {\n\tpadding-top: 1rem !important;\n  }\n  \n  .pr-3,\n  .px-3 {\n\tpadding-right: 1rem !important;\n  }\n  \n  .pb-3,\n  .py-3 {\n\tpadding-bottom: 1rem !important;\n  }\n  \n  .pl-3,\n  .px-3 {\n\tpadding-left: 1rem !important;\n  }\n  \n  .p-4 {\n\tpadding: 1.5rem !important;\n  }\n  \n  .pt-4,\n  .py-4 {\n\tpadding-top: 1.5rem !important;\n  }\n  \n  .pr-4,\n  .px-4 {\n\tpadding-right: 1.5rem !important;\n  }\n  \n  .pb-4,\n  .py-4 {\n\tpadding-bottom: 1.5rem !important;\n  }\n  \n  .pl-4,\n  .px-4 {\n\tpadding-left: 1.5rem !important;\n  }\n  \n  .p-5 {\n\tpadding: 3rem !important;\n  }\n  \n  .pt-5,\n  .py-5 {\n\tpadding-top: 3rem !important;\n  }\n  \n  .pr-5,\n  .px-5 {\n\tpadding-right: 3rem !important;\n  }\n  \n  .pb-5,\n  .py-5 {\n\tpadding-bottom: 3rem !important;\n  }\n  \n  .pl-5,\n  .px-5 {\n\tpadding-left: 3rem !important;\n  }\n  \n  .m-auto {\n\tmargin: auto !important;\n  }\n  \n  .mt-auto,\n  .my-auto {\n\tmargin-top: auto !important;\n  }\n  \n  .mr-auto,\n  .mx-auto {\n\tmargin-right: auto !important;\n  }\n  \n  .mb-auto,\n  .my-auto {\n\tmargin-bottom: auto !important;\n  }\n  \n  .ml-auto,\n  .mx-auto {\n\tmargin-left: auto !important;\n  }\n  \n  @media (min-width: 576px) {\n\t.m-sm-0 {\n\t  margin: 0 !important;\n\t}\n\t.mt-sm-0,\n\t.my-sm-0 {\n\t  margin-top: 0 !important;\n\t}\n\t.mr-sm-0,\n\t.mx-sm-0 {\n\t  margin-right: 0 !important;\n\t}\n\t.mb-sm-0,\n\t.my-sm-0 {\n\t  margin-bottom: 0 !important;\n\t}\n\t.ml-sm-0,\n\t.mx-sm-0 {\n\t  margin-left: 0 !important;\n\t}\n\t.m-sm-1 {\n\t  margin: 0.25rem !important;\n\t}\n\t.mt-sm-1,\n\t.my-sm-1 {\n\t  margin-top: 0.25rem !important;\n\t}\n\t.mr-sm-1,\n\t.mx-sm-1 {\n\t  margin-right: 0.25rem !important;\n\t}\n\t.mb-sm-1,\n\t.my-sm-1 {\n\t  margin-bottom: 0.25rem !important;\n\t}\n\t.ml-sm-1,\n\t.mx-sm-1 {\n\t  margin-left: 0.25rem !important;\n\t}\n\t.m-sm-2 {\n\t  margin: 0.5rem !important;\n\t}\n\t.mt-sm-2,\n\t.my-sm-2 {\n\t  margin-top: 0.5rem !important;\n\t}\n\t.mr-sm-2,\n\t.mx-sm-2 {\n\t  margin-right: 0.5rem !important;\n\t}\n\t.mb-sm-2,\n\t.my-sm-2 {\n\t  margin-bottom: 0.5rem !important;\n\t}\n\t.ml-sm-2,\n\t.mx-sm-2 {\n\t  margin-left: 0.5rem !important;\n\t}\n\t.m-sm-3 {\n\t  margin: 1rem !important;\n\t}\n\t.mt-sm-3,\n\t.my-sm-3 {\n\t  margin-top: 1rem !important;\n\t}\n\t.mr-sm-3,\n\t.mx-sm-3 {\n\t  margin-right: 1rem !important;\n\t}\n\t.mb-sm-3,\n\t.my-sm-3 {\n\t  margin-bottom: 1rem !important;\n\t}\n\t.ml-sm-3,\n\t.mx-sm-3 {\n\t  margin-left: 1rem !important;\n\t}\n\t.m-sm-4 {\n\t  margin: 1.5rem !important;\n\t}\n\t.mt-sm-4,\n\t.my-sm-4 {\n\t  margin-top: 1.5rem !important;\n\t}\n\t.mr-sm-4,\n\t.mx-sm-4 {\n\t  margin-right: 1.5rem !important;\n\t}\n\t.mb-sm-4,\n\t.my-sm-4 {\n\t  margin-bottom: 1.5rem !important;\n\t}\n\t.ml-sm-4,\n\t.mx-sm-4 {\n\t  margin-left: 1.5rem !important;\n\t}\n\t.m-sm-5 {\n\t  margin: 3rem !important;\n\t}\n\t.mt-sm-5,\n\t.my-sm-5 {\n\t  margin-top: 3rem !important;\n\t}\n\t.mr-sm-5,\n\t.mx-sm-5 {\n\t  margin-right: 3rem !important;\n\t}\n\t.mb-sm-5,\n\t.my-sm-5 {\n\t  margin-bottom: 3rem !important;\n\t}\n\t.ml-sm-5,\n\t.mx-sm-5 {\n\t  margin-left: 3rem !important;\n\t}\n\t.p-sm-0 {\n\t  padding: 0 !important;\n\t}\n\t.pt-sm-0,\n\t.py-sm-0 {\n\t  padding-top: 0 !important;\n\t}\n\t.pr-sm-0,\n\t.px-sm-0 {\n\t  padding-right: 0 !important;\n\t}\n\t.pb-sm-0,\n\t.py-sm-0 {\n\t  padding-bottom: 0 !important;\n\t}\n\t.pl-sm-0,\n\t.px-sm-0 {\n\t  padding-left: 0 !important;\n\t}\n\t.p-sm-1 {\n\t  padding: 0.25rem !important;\n\t}\n\t.pt-sm-1,\n\t.py-sm-1 {\n\t  padding-top: 0.25rem !important;\n\t}\n\t.pr-sm-1,\n\t.px-sm-1 {\n\t  padding-right: 0.25rem !important;\n\t}\n\t.pb-sm-1,\n\t.py-sm-1 {\n\t  padding-bottom: 0.25rem !important;\n\t}\n\t.pl-sm-1,\n\t.px-sm-1 {\n\t  padding-left: 0.25rem !important;\n\t}\n\t.p-sm-2 {\n\t  padding: 0.5rem !important;\n\t}\n\t.pt-sm-2,\n\t.py-sm-2 {\n\t  padding-top: 0.5rem !important;\n\t}\n\t.pr-sm-2,\n\t.px-sm-2 {\n\t  padding-right: 0.5rem !important;\n\t}\n\t.pb-sm-2,\n\t.py-sm-2 {\n\t  padding-bottom: 0.5rem !important;\n\t}\n\t.pl-sm-2,\n\t.px-sm-2 {\n\t  padding-left: 0.5rem !important;\n\t}\n\t.p-sm-3 {\n\t  padding: 1rem !important;\n\t}\n\t.pt-sm-3,\n\t.py-sm-3 {\n\t  padding-top: 1rem !important;\n\t}\n\t.pr-sm-3,\n\t.px-sm-3 {\n\t  padding-right: 1rem !important;\n\t}\n\t.pb-sm-3,\n\t.py-sm-3 {\n\t  padding-bottom: 1rem !important;\n\t}\n\t.pl-sm-3,\n\t.px-sm-3 {\n\t  padding-left: 1rem !important;\n\t}\n\t.p-sm-4 {\n\t  padding: 1.5rem !important;\n\t}\n\t.pt-sm-4,\n\t.py-sm-4 {\n\t  padding-top: 1.5rem !important;\n\t}\n\t.pr-sm-4,\n\t.px-sm-4 {\n\t  padding-right: 1.5rem !important;\n\t}\n\t.pb-sm-4,\n\t.py-sm-4 {\n\t  padding-bottom: 1.5rem !important;\n\t}\n\t.pl-sm-4,\n\t.px-sm-4 {\n\t  padding-left: 1.5rem !important;\n\t}\n\t.p-sm-5 {\n\t  padding: 3rem !important;\n\t}\n\t.pt-sm-5,\n\t.py-sm-5 {\n\t  padding-top: 3rem !important;\n\t}\n\t.pr-sm-5,\n\t.px-sm-5 {\n\t  padding-right: 3rem !important;\n\t}\n\t.pb-sm-5,\n\t.py-sm-5 {\n\t  padding-bottom: 3rem !important;\n\t}\n\t.pl-sm-5,\n\t.px-sm-5 {\n\t  padding-left: 3rem !important;\n\t}\n\t.m-sm-auto {\n\t  margin: auto !important;\n\t}\n\t.mt-sm-auto,\n\t.my-sm-auto {\n\t  margin-top: auto !important;\n\t}\n\t.mr-sm-auto,\n\t.mx-sm-auto {\n\t  margin-right: auto !important;\n\t}\n\t.mb-sm-auto,\n\t.my-sm-auto {\n\t  margin-bottom: auto !important;\n\t}\n\t.ml-sm-auto,\n\t.mx-sm-auto {\n\t  margin-left: auto !important;\n\t}\n  }\n  \n  @media (min-width: 768px) {\n\t.m-md-0 {\n\t  margin: 0 !important;\n\t}\n\t.mt-md-0,\n\t.my-md-0 {\n\t  margin-top: 0 !important;\n\t}\n\t.mr-md-0,\n\t.mx-md-0 {\n\t  margin-right: 0 !important;\n\t}\n\t.mb-md-0,\n\t.my-md-0 {\n\t  margin-bottom: 0 !important;\n\t}\n\t.ml-md-0,\n\t.mx-md-0 {\n\t  margin-left: 0 !important;\n\t}\n\t.m-md-1 {\n\t  margin: 0.25rem !important;\n\t}\n\t.mt-md-1,\n\t.my-md-1 {\n\t  margin-top: 0.25rem !important;\n\t}\n\t.mr-md-1,\n\t.mx-md-1 {\n\t  margin-right: 0.25rem !important;\n\t}\n\t.mb-md-1,\n\t.my-md-1 {\n\t  margin-bottom: 0.25rem !important;\n\t}\n\t.ml-md-1,\n\t.mx-md-1 {\n\t  margin-left: 0.25rem !important;\n\t}\n\t.m-md-2 {\n\t  margin: 0.5rem !important;\n\t}\n\t.mt-md-2,\n\t.my-md-2 {\n\t  margin-top: 0.5rem !important;\n\t}\n\t.mr-md-2,\n\t.mx-md-2 {\n\t  margin-right: 0.5rem !important;\n\t}\n\t.mb-md-2,\n\t.my-md-2 {\n\t  margin-bottom: 0.5rem !important;\n\t}\n\t.ml-md-2,\n\t.mx-md-2 {\n\t  margin-left: 0.5rem !important;\n\t}\n\t.m-md-3 {\n\t  margin: 1rem !important;\n\t}\n\t.mt-md-3,\n\t.my-md-3 {\n\t  margin-top: 1rem !important;\n\t}\n\t.mr-md-3,\n\t.mx-md-3 {\n\t  margin-right: 1rem !important;\n\t}\n\t.mb-md-3,\n\t.my-md-3 {\n\t  margin-bottom: 1rem !important;\n\t}\n\t.ml-md-3,\n\t.mx-md-3 {\n\t  margin-left: 1rem !important;\n\t}\n\t.m-md-4 {\n\t  margin: 1.5rem !important;\n\t}\n\t.mt-md-4,\n\t.my-md-4 {\n\t  margin-top: 1.5rem !important;\n\t}\n\t.mr-md-4,\n\t.mx-md-4 {\n\t  margin-right: 1.5rem !important;\n\t}\n\t.mb-md-4,\n\t.my-md-4 {\n\t  margin-bottom: 1.5rem !important;\n\t}\n\t.ml-md-4,\n\t.mx-md-4 {\n\t  margin-left: 1.5rem !important;\n\t}\n\t.m-md-5 {\n\t  margin: 3rem !important;\n\t}\n\t.mt-md-5,\n\t.my-md-5 {\n\t  margin-top: 3rem !important;\n\t}\n\t.mr-md-5,\n\t.mx-md-5 {\n\t  margin-right: 3rem !important;\n\t}\n\t.mb-md-5,\n\t.my-md-5 {\n\t  margin-bottom: 3rem !important;\n\t}\n\t.ml-md-5,\n\t.mx-md-5 {\n\t  margin-left: 3rem !important;\n\t}\n\t.p-md-0 {\n\t  padding: 0 !important;\n\t}\n\t.pt-md-0,\n\t.py-md-0 {\n\t  padding-top: 0 !important;\n\t}\n\t.pr-md-0,\n\t.px-md-0 {\n\t  padding-right: 0 !important;\n\t}\n\t.pb-md-0,\n\t.py-md-0 {\n\t  padding-bottom: 0 !important;\n\t}\n\t.pl-md-0,\n\t.px-md-0 {\n\t  padding-left: 0 !important;\n\t}\n\t.p-md-1 {\n\t  padding: 0.25rem !important;\n\t}\n\t.pt-md-1,\n\t.py-md-1 {\n\t  padding-top: 0.25rem !important;\n\t}\n\t.pr-md-1,\n\t.px-md-1 {\n\t  padding-right: 0.25rem !important;\n\t}\n\t.pb-md-1,\n\t.py-md-1 {\n\t  padding-bottom: 0.25rem !important;\n\t}\n\t.pl-md-1,\n\t.px-md-1 {\n\t  padding-left: 0.25rem !important;\n\t}\n\t.p-md-2 {\n\t  padding: 0.5rem !important;\n\t}\n\t.pt-md-2,\n\t.py-md-2 {\n\t  padding-top: 0.5rem !important;\n\t}\n\t.pr-md-2,\n\t.px-md-2 {\n\t  padding-right: 0.5rem !important;\n\t}\n\t.pb-md-2,\n\t.py-md-2 {\n\t  padding-bottom: 0.5rem !important;\n\t}\n\t.pl-md-2,\n\t.px-md-2 {\n\t  padding-left: 0.5rem !important;\n\t}\n\t.p-md-3 {\n\t  padding: 1rem !important;\n\t}\n\t.pt-md-3,\n\t.py-md-3 {\n\t  padding-top: 1rem !important;\n\t}\n\t.pr-md-3,\n\t.px-md-3 {\n\t  padding-right: 1rem !important;\n\t}\n\t.pb-md-3,\n\t.py-md-3 {\n\t  padding-bottom: 1rem !important;\n\t}\n\t.pl-md-3,\n\t.px-md-3 {\n\t  padding-left: 1rem !important;\n\t}\n\t.p-md-4 {\n\t  padding: 1.5rem !important;\n\t}\n\t.pt-md-4,\n\t.py-md-4 {\n\t  padding-top: 1.5rem !important;\n\t}\n\t.pr-md-4,\n\t.px-md-4 {\n\t  padding-right: 1.5rem !important;\n\t}\n\t.pb-md-4,\n\t.py-md-4 {\n\t  padding-bottom: 1.5rem !important;\n\t}\n\t.pl-md-4,\n\t.px-md-4 {\n\t  padding-left: 1.5rem !important;\n\t}\n\t.p-md-5 {\n\t  padding: 3rem !important;\n\t}\n\t.pt-md-5,\n\t.py-md-5 {\n\t  padding-top: 3rem !important;\n\t}\n\t.pr-md-5,\n\t.px-md-5 {\n\t  padding-right: 3rem !important;\n\t}\n\t.pb-md-5,\n\t.py-md-5 {\n\t  padding-bottom: 3rem !important;\n\t}\n\t.pl-md-5,\n\t.px-md-5 {\n\t  padding-left: 3rem !important;\n\t}\n\t.m-md-auto {\n\t  margin: auto !important;\n\t}\n\t.mt-md-auto,\n\t.my-md-auto {\n\t  margin-top: auto !important;\n\t}\n\t.mr-md-auto,\n\t.mx-md-auto {\n\t  margin-right: auto !important;\n\t}\n\t.mb-md-auto,\n\t.my-md-auto {\n\t  margin-bottom: auto !important;\n\t}\n\t.ml-md-auto,\n\t.mx-md-auto {\n\t  margin-left: auto !important;\n\t}\n  }\n  \n  @media (min-width: 992px) {\n\t.m-lg-0 {\n\t  margin: 0 !important;\n\t}\n\t.mt-lg-0,\n\t.my-lg-0 {\n\t  margin-top: 0 !important;\n\t}\n\t.mr-lg-0,\n\t.mx-lg-0 {\n\t  margin-right: 0 !important;\n\t}\n\t.mb-lg-0,\n\t.my-lg-0 {\n\t  margin-bottom: 0 !important;\n\t}\n\t.ml-lg-0,\n\t.mx-lg-0 {\n\t  margin-left: 0 !important;\n\t}\n\t.m-lg-1 {\n\t  margin: 0.25rem !important;\n\t}\n\t.mt-lg-1,\n\t.my-lg-1 {\n\t  margin-top: 0.25rem !important;\n\t}\n\t.mr-lg-1,\n\t.mx-lg-1 {\n\t  margin-right: 0.25rem !important;\n\t}\n\t.mb-lg-1,\n\t.my-lg-1 {\n\t  margin-bottom: 0.25rem !important;\n\t}\n\t.ml-lg-1,\n\t.mx-lg-1 {\n\t  margin-left: 0.25rem !important;\n\t}\n\t.m-lg-2 {\n\t  margin: 0.5rem !important;\n\t}\n\t.mt-lg-2,\n\t.my-lg-2 {\n\t  margin-top: 0.5rem !important;\n\t}\n\t.mr-lg-2,\n\t.mx-lg-2 {\n\t  margin-right: 0.5rem !important;\n\t}\n\t.mb-lg-2,\n\t.my-lg-2 {\n\t  margin-bottom: 0.5rem !important;\n\t}\n\t.ml-lg-2,\n\t.mx-lg-2 {\n\t  margin-left: 0.5rem !important;\n\t}\n\t.m-lg-3 {\n\t  margin: 1rem !important;\n\t}\n\t.mt-lg-3,\n\t.my-lg-3 {\n\t  margin-top: 1rem !important;\n\t}\n\t.mr-lg-3,\n\t.mx-lg-3 {\n\t  margin-right: 1rem !important;\n\t}\n\t.mb-lg-3,\n\t.my-lg-3 {\n\t  margin-bottom: 1rem !important;\n\t}\n\t.ml-lg-3,\n\t.mx-lg-3 {\n\t  margin-left: 1rem !important;\n\t}\n\t.m-lg-4 {\n\t  margin: 1.5rem !important;\n\t}\n\t.mt-lg-4,\n\t.my-lg-4 {\n\t  margin-top: 1.5rem !important;\n\t}\n\t.mr-lg-4,\n\t.mx-lg-4 {\n\t  margin-right: 1.5rem !important;\n\t}\n\t.mb-lg-4,\n\t.my-lg-4 {\n\t  margin-bottom: 1.5rem !important;\n\t}\n\t.ml-lg-4,\n\t.mx-lg-4 {\n\t  margin-left: 1.5rem !important;\n\t}\n\t.m-lg-5 {\n\t  margin: 3rem !important;\n\t}\n\t.mt-lg-5,\n\t.my-lg-5 {\n\t  margin-top: 3rem !important;\n\t}\n\t.mr-lg-5,\n\t.mx-lg-5 {\n\t  margin-right: 3rem !important;\n\t}\n\t.mb-lg-5,\n\t.my-lg-5 {\n\t  margin-bottom: 3rem !important;\n\t}\n\t.ml-lg-5,\n\t.mx-lg-5 {\n\t  margin-left: 3rem !important;\n\t}\n\t.p-lg-0 {\n\t  padding: 0 !important;\n\t}\n\t.pt-lg-0,\n\t.py-lg-0 {\n\t  padding-top: 0 !important;\n\t}\n\t.pr-lg-0,\n\t.px-lg-0 {\n\t  padding-right: 0 !important;\n\t}\n\t.pb-lg-0,\n\t.py-lg-0 {\n\t  padding-bottom: 0 !important;\n\t}\n\t.pl-lg-0,\n\t.px-lg-0 {\n\t  padding-left: 0 !important;\n\t}\n\t.p-lg-1 {\n\t  padding: 0.25rem !important;\n\t}\n\t.pt-lg-1,\n\t.py-lg-1 {\n\t  padding-top: 0.25rem !important;\n\t}\n\t.pr-lg-1,\n\t.px-lg-1 {\n\t  padding-right: 0.25rem !important;\n\t}\n\t.pb-lg-1,\n\t.py-lg-1 {\n\t  padding-bottom: 0.25rem !important;\n\t}\n\t.pl-lg-1,\n\t.px-lg-1 {\n\t  padding-left: 0.25rem !important;\n\t}\n\t.p-lg-2 {\n\t  padding: 0.5rem !important;\n\t}\n\t.pt-lg-2,\n\t.py-lg-2 {\n\t  padding-top: 0.5rem !important;\n\t}\n\t.pr-lg-2,\n\t.px-lg-2 {\n\t  padding-right: 0.5rem !important;\n\t}\n\t.pb-lg-2,\n\t.py-lg-2 {\n\t  padding-bottom: 0.5rem !important;\n\t}\n\t.pl-lg-2,\n\t.px-lg-2 {\n\t  padding-left: 0.5rem !important;\n\t}\n\t.p-lg-3 {\n\t  padding: 1rem !important;\n\t}\n\t.pt-lg-3,\n\t.py-lg-3 {\n\t  padding-top: 1rem !important;\n\t}\n\t.pr-lg-3,\n\t.px-lg-3 {\n\t  padding-right: 1rem !important;\n\t}\n\t.pb-lg-3,\n\t.py-lg-3 {\n\t  padding-bottom: 1rem !important;\n\t}\n\t.pl-lg-3,\n\t.px-lg-3 {\n\t  padding-left: 1rem !important;\n\t}\n\t.p-lg-4 {\n\t  padding: 1.5rem !important;\n\t}\n\t.pt-lg-4,\n\t.py-lg-4 {\n\t  padding-top: 1.5rem !important;\n\t}\n\t.pr-lg-4,\n\t.px-lg-4 {\n\t  padding-right: 1.5rem !important;\n\t}\n\t.pb-lg-4,\n\t.py-lg-4 {\n\t  padding-bottom: 1.5rem !important;\n\t}\n\t.pl-lg-4,\n\t.px-lg-4 {\n\t  padding-left: 1.5rem !important;\n\t}\n\t.p-lg-5 {\n\t  padding: 3rem !important;\n\t}\n\t.pt-lg-5,\n\t.py-lg-5 {\n\t  padding-top: 3rem !important;\n\t}\n\t.pr-lg-5,\n\t.px-lg-5 {\n\t  padding-right: 3rem !important;\n\t}\n\t.pb-lg-5,\n\t.py-lg-5 {\n\t  padding-bottom: 3rem !important;\n\t}\n\t.pl-lg-5,\n\t.px-lg-5 {\n\t  padding-left: 3rem !important;\n\t}\n\t.m-lg-auto {\n\t  margin: auto !important;\n\t}\n\t.mt-lg-auto,\n\t.my-lg-auto {\n\t  margin-top: auto !important;\n\t}\n\t.mr-lg-auto,\n\t.mx-lg-auto {\n\t  margin-right: auto !important;\n\t}\n\t.mb-lg-auto,\n\t.my-lg-auto {\n\t  margin-bottom: auto !important;\n\t}\n\t.ml-lg-auto,\n\t.mx-lg-auto {\n\t  margin-left: auto !important;\n\t}\n  }\n  \n  @media (min-width: 1200px) {\n\t.m-xl-0 {\n\t  margin: 0 !important;\n\t}\n\t.mt-xl-0,\n\t.my-xl-0 {\n\t  margin-top: 0 !important;\n\t}\n\t.mr-xl-0,\n\t.mx-xl-0 {\n\t  margin-right: 0 !important;\n\t}\n\t.mb-xl-0,\n\t.my-xl-0 {\n\t  margin-bottom: 0 !important;\n\t}\n\t.ml-xl-0,\n\t.mx-xl-0 {\n\t  margin-left: 0 !important;\n\t}\n\t.m-xl-1 {\n\t  margin: 0.25rem !important;\n\t}\n\t.mt-xl-1,\n\t.my-xl-1 {\n\t  margin-top: 0.25rem !important;\n\t}\n\t.mr-xl-1,\n\t.mx-xl-1 {\n\t  margin-right: 0.25rem !important;\n\t}\n\t.mb-xl-1,\n\t.my-xl-1 {\n\t  margin-bottom: 0.25rem !important;\n\t}\n\t.ml-xl-1,\n\t.mx-xl-1 {\n\t  margin-left: 0.25rem !important;\n\t}\n\t.m-xl-2 {\n\t  margin: 0.5rem !important;\n\t}\n\t.mt-xl-2,\n\t.my-xl-2 {\n\t  margin-top: 0.5rem !important;\n\t}\n\t.mr-xl-2,\n\t.mx-xl-2 {\n\t  margin-right: 0.5rem !important;\n\t}\n\t.mb-xl-2,\n\t.my-xl-2 {\n\t  margin-bottom: 0.5rem !important;\n\t}\n\t.ml-xl-2,\n\t.mx-xl-2 {\n\t  margin-left: 0.5rem !important;\n\t}\n\t.m-xl-3 {\n\t  margin: 1rem !important;\n\t}\n\t.mt-xl-3,\n\t.my-xl-3 {\n\t  margin-top: 1rem !important;\n\t}\n\t.mr-xl-3,\n\t.mx-xl-3 {\n\t  margin-right: 1rem !important;\n\t}\n\t.mb-xl-3,\n\t.my-xl-3 {\n\t  margin-bottom: 1rem !important;\n\t}\n\t.ml-xl-3,\n\t.mx-xl-3 {\n\t  margin-left: 1rem !important;\n\t}\n\t.m-xl-4 {\n\t  margin: 1.5rem !important;\n\t}\n\t.mt-xl-4,\n\t.my-xl-4 {\n\t  margin-top: 1.5rem !important;\n\t}\n\t.mr-xl-4,\n\t.mx-xl-4 {\n\t  margin-right: 1.5rem !important;\n\t}\n\t.mb-xl-4,\n\t.my-xl-4 {\n\t  margin-bottom: 1.5rem !important;\n\t}\n\t.ml-xl-4,\n\t.mx-xl-4 {\n\t  margin-left: 1.5rem !important;\n\t}\n\t.m-xl-5 {\n\t  margin: 3rem !important;\n\t}\n\t.mt-xl-5,\n\t.my-xl-5 {\n\t  margin-top: 3rem !important;\n\t}\n\t.mr-xl-5,\n\t.mx-xl-5 {\n\t  margin-right: 3rem !important;\n\t}\n\t.mb-xl-5,\n\t.my-xl-5 {\n\t  margin-bottom: 3rem !important;\n\t}\n\t.ml-xl-5,\n\t.mx-xl-5 {\n\t  margin-left: 3rem !important;\n\t}\n\t.p-xl-0 {\n\t  padding: 0 !important;\n\t}\n\t.pt-xl-0,\n\t.py-xl-0 {\n\t  padding-top: 0 !important;\n\t}\n\t.pr-xl-0,\n\t.px-xl-0 {\n\t  padding-right: 0 !important;\n\t}\n\t.pb-xl-0,\n\t.py-xl-0 {\n\t  padding-bottom: 0 !important;\n\t}\n\t.pl-xl-0,\n\t.px-xl-0 {\n\t  padding-left: 0 !important;\n\t}\n\t.p-xl-1 {\n\t  padding: 0.25rem !important;\n\t}\n\t.pt-xl-1,\n\t.py-xl-1 {\n\t  padding-top: 0.25rem !important;\n\t}\n\t.pr-xl-1,\n\t.px-xl-1 {\n\t  padding-right: 0.25rem !important;\n\t}\n\t.pb-xl-1,\n\t.py-xl-1 {\n\t  padding-bottom: 0.25rem !important;\n\t}\n\t.pl-xl-1,\n\t.px-xl-1 {\n\t  padding-left: 0.25rem !important;\n\t}\n\t.p-xl-2 {\n\t  padding: 0.5rem !important;\n\t}\n\t.pt-xl-2,\n\t.py-xl-2 {\n\t  padding-top: 0.5rem !important;\n\t}\n\t.pr-xl-2,\n\t.px-xl-2 {\n\t  padding-right: 0.5rem !important;\n\t}\n\t.pb-xl-2,\n\t.py-xl-2 {\n\t  padding-bottom: 0.5rem !important;\n\t}\n\t.pl-xl-2,\n\t.px-xl-2 {\n\t  padding-left: 0.5rem !important;\n\t}\n\t.p-xl-3 {\n\t  padding: 1rem !important;\n\t}\n\t.pt-xl-3,\n\t.py-xl-3 {\n\t  padding-top: 1rem !important;\n\t}\n\t.pr-xl-3,\n\t.px-xl-3 {\n\t  padding-right: 1rem !important;\n\t}\n\t.pb-xl-3,\n\t.py-xl-3 {\n\t  padding-bottom: 1rem !important;\n\t}\n\t.pl-xl-3,\n\t.px-xl-3 {\n\t  padding-left: 1rem !important;\n\t}\n\t.p-xl-4 {\n\t  padding: 1.5rem !important;\n\t}\n\t.pt-xl-4,\n\t.py-xl-4 {\n\t  padding-top: 1.5rem !important;\n\t}\n\t.pr-xl-4,\n\t.px-xl-4 {\n\t  padding-right: 1.5rem !important;\n\t}\n\t.pb-xl-4,\n\t.py-xl-4 {\n\t  padding-bottom: 1.5rem !important;\n\t}\n\t.pl-xl-4,\n\t.px-xl-4 {\n\t  padding-left: 1.5rem !important;\n\t}\n\t.p-xl-5 {\n\t  padding: 3rem !important;\n\t}\n\t.pt-xl-5,\n\t.py-xl-5 {\n\t  padding-top: 3rem !important;\n\t}\n\t.pr-xl-5,\n\t.px-xl-5 {\n\t  padding-right: 3rem !important;\n\t}\n\t.pb-xl-5,\n\t.py-xl-5 {\n\t  padding-bottom: 3rem !important;\n\t}\n\t.pl-xl-5,\n\t.px-xl-5 {\n\t  padding-left: 3rem !important;\n\t}\n\t.m-xl-auto {\n\t  margin: auto !important;\n\t}\n\t.mt-xl-auto,\n\t.my-xl-auto {\n\t  margin-top: auto !important;\n\t}\n\t.mr-xl-auto,\n\t.mx-xl-auto {\n\t  margin-right: auto !important;\n\t}\n\t.mb-xl-auto,\n\t.my-xl-auto {\n\t  margin-bottom: auto !important;\n\t}\n\t.ml-xl-auto,\n\t.mx-xl-auto {\n\t  margin-left: auto !important;\n\t}\n  }\n\n  .text-justify {\n\ttext-align: justify !important;\n  }\n  \n  .text-nowrap {\n\twhite-space: nowrap !important;\n  }\n  \n  .text-truncate {\n\toverflow: hidden;\n\ttext-overflow: ellipsis;\n\twhite-space: nowrap;\n  }\n  \n  .text-left {\n\ttext-align: left !important;\n  }\n  \n  .text-right {\n\ttext-align: right !important;\n  }\n  \n  .text-center {\n\ttext-align: center !important;\n  }\n  \n  @media (min-width: 576px) {\n\t.text-sm-left {\n\t  text-align: left !important;\n\t}\n\t.text-sm-right {\n\t  text-align: right !important;\n\t}\n\t.text-sm-center {\n\t  text-align: center !important;\n\t}\n  }\n  \n  @media (min-width: 768px) {\n\t.text-md-left {\n\t  text-align: left !important;\n\t}\n\t.text-md-right {\n\t  text-align: right !important;\n\t}\n\t.text-md-center {\n\t  text-align: center !important;\n\t}\n  }\n  \n  @media (min-width: 992px) {\n\t.text-lg-left {\n\t  text-align: left !important;\n\t}\n\t.text-lg-right {\n\t  text-align: right !important;\n\t}\n\t.text-lg-center {\n\t  text-align: center !important;\n\t}\n  }\n  \n  @media (min-width: 1200px) {\n\t.text-xl-left {\n\t  text-align: left !important;\n\t}\n\t.text-xl-right {\n\t  text-align: right !important;\n\t}\n\t.text-xl-center {\n\t  text-align: center !important;\n\t}\n  }\n  \n  .text-lowercase {\n\ttext-transform: lowercase !important;\n  }\n  \n  .text-uppercase {\n\ttext-transform: uppercase !important;\n  }\n  \n  .text-capitalize {\n\ttext-transform: capitalize !important;\n  }","@use '../base/var' as *;\n\n.title {\n\tdisplay: flex;\n\tflex-direction: column;\n\talign-items: center;\n\tjustify-content: space-evenly;\n\tfont-family: $lc-font--sans;\n\n\t.title-logo {\n\t\tmax-width: 70px;\n\t}\n \n\t.title-gif {\n\t\tmax-width: 280px;\n\t}\n\n\t.title-intro {\n\t\tmax-width: 350px;\n\t\ttext-align: left;\n\n\t\tp {\n\t\t\tfont-size: 18px;\n\t\t\tmargin-bottom: 1rem;\n\t\t}\n\t}\n\n\t.title-stats {\n\t\tfont-size: 16px;\n\t\t// border: 1px solid $lc-gray--dark;\n\t\tborder-radius: .5rem;\n\t\tpadding: 1rem 2rem;\n\n\t\t.stats-clues, .stats-guesses, .stats-hints {\n\t\t\t// display: flex;\n\t\t\t// justify-content: flex-end;\n\t\t\ttext-align: center;\n\t\t\tborder-radius: 4px;\n\t\t\tpadding: .25rem 1rem;\n\t\t\tfont-weight: 500;\n\n\t\t\tspan {\n\t\t\t\t// margin-left: .5rem;\n\t\t\t\t// width: 25px;\n\t\t\t\t// text-align: center;\n\t\t\t\tfont-weight: 600;\n\t\t\t\t// background-color: green;\n\t\t\t}\n\t\t}\n\t\t\n\t\t.stats-clues {\n\t\t\t// background-color: $lc-gray--light;\n\t\t\tborder: 1px solid $lc-gray--dark;\n\t\t}\n\n\t\t.stats-guesses {\n\t\t\tbackground-color: $lc-primary--light;\n\t\t\t// color: $lc-primary--dark;\n\t\t}\n\n\t\t.stats-hints {\n\t\t\tbackground-color: $lc-secondary--light;\n\t\t\t// color: $lc-secondary--dark;\n\n\t\t}\n\t}\n\n\t.title-actions {\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\tjustify-content: center;\n\t\talign-items: center;\n\t\twidth: 100%;\n\n\t\t.title-date {\n\t\t\tmargin: .5rem auto;\n\t\t\tfont-family: $lc-font--sans;\n\t\t\tfont-size: 16px;\n\t\t\tcolor: $lc-text--light;\n\t\t}\n\t}\n}","@use '../base/var' as *;\n\n.top-bar {\n\tbackground-color: $lc-gray--light;\n\theight: $lc-top-height;\n\t\n\t.container {\n\t\tdisplay: flex;\n\t\tjustify-content: flex-end;\n\t\talign-items: center;\n\t\tpadding: .5rem;\n\n\t\ta img {\n\t\t\tmax-width: 40px;\n\t\t}\n\t}\n}","@use '../base/var' as *;\n\n.learn {\n\tposition: relative;\n\toverflow-y: auto;\n\tpadding: 1rem 1rem 5rem;\n\n\t.back-button {\n\t\tmargin-bottom: 1.5rem;\n\t}\n\n\t.learn-section {\n\t\t&:not(:last-of-type) {\n\t\t\tmargin-bottom: 2rem;\n\t\t}\n\n\t\t.learn-question {\n\t\t\tfont-size: 28px;\n\t\t\tfont-weight: 700;\n\t\t}\n\n\t\timg.border {\n\t\t\tborder: 2px solid $lc-gray--dark;\n\t\t}\n\n\t\tul {\n\t\t\tpadding-left: 1rem;\n\n\t\t\t&.no-dec {\n\t\t\t\tlist-style-type: none;\n\t\t\t}\n\t\t}\n\n\n\t\t.disclaimer {\n\t\t\t// font-size: 16px;\n\t\t\tbackground-color: $lc-secondary--light;\n\t\t}\n\n\t\t.example-container {\n\t\t\tborder: 1px solid $lc-gray--dark;\n\t\t\tborder-radius: .5rem;\n\t\t\tmargin-bottom: 1rem;\n\t\t\t\n\t\t\t.example {\n\t\t\t\tpadding: 1.5rem .5rem .5rem;\n\t\t\t\tfont-family: $lc-font--serif;\n\t\t\t\tmargin-bottom: 1.5rem;\n\t\t\t\ttext-align: center;\n\t\t\t}\n\n\t\t\t.explanation {\n\t\t\t\tbackground-color: $lc-gray--light;\n\t\t\t\tpadding: 1rem;\n\t\t\t\tfont-size: .9rem;\n\t\t\t\t\n\t\t\t\tstrong {\n\t\t\t\t\tfont-family: $lc-font--serif;\n\t\t\t\t\ttext-transform: uppercase;\n\t\t\t\t\tfont-size: .8rem;\n\t\t\t\t}\n\t\n\t\t\t\timg {\n\t\t\t\t\tmargin-top: .5rem;\n\t\t\t\t\tborder: none;\n\t\t\t\t\tborder-radius: .5rem;\n\t\t\t\t}\n\t\t\t}\n\t\t\t.solution {\n\t\t\t\tdisplay: flex;\n\t\t\t\tjustify-content: center;\n\t\t\t\tmargin-top: 1rem;\n\n\t\t\t\t.letter {\n\t\t\t\t\ttext-transform: uppercase;\n\t\t\t\t\tposition: relative;\n\t\t\t\t\ttext-align: center;\n\t\t\t\t\tdisplay: inline-block;\n\t\t\t\t\twidth: 24px;\n\t\t\t\t\theight: 24px;\n\t\t\t\t\tpadding-top: 2px;\n\t\t\t\t\tborder: .75px solid $lc-text;\n\t\t\t\t\t// border-right: none;\n\t\n\t\t\t\t\t&:last-child {\n\t\t\t\t\t\tborder-right: 1px solid $lc-text;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t.indicators {\n\t\t\tdisplay: flex;\n\t\t\tflex-wrap: wrap;\n\t\t\tjustify-content: center;\n\t\t\tpadding-left: 0 !important;\n\t\t\tlist-style-type: none;\n\n\t\t\t.indicator {\n\t\t\t\tmargin: .25rem;\n\t\t\t\tpadding: 0 .25rem;\n\t\t\t\tfont-family: $lc-font--serif;\n\t\t\t\tbackground-color: $lc-secondary--v-light;\n\t\t\t\tfont-size: .9rem;\n\t\t\t}\n\t\t}\n\t}\n\n\t.learn-types {\n\t\tdisplay: flex;\n\t\tflex-wrap: wrap;\n\t\tjustify-content: center;\n\t\tpadding-left: 0 !important;\n\n\t\tli {\n\t\t\tfont-size: 16px;\n\t\t\tborder: 1px solid $lc-gray--dark;\n\t\t\tborder-radius: 50px;\n\t\t\twidth: fit-content;\n\t\t\tpadding: .2rem .75rem;\n\t\t\tmargin: .3rem .25rem !important;\n\t\t\tcursor: pointer;\n\n\t\t\t&:hover, &:active, &:focus, &.viewed {\n\t\t\t\tborder: 1px solid $lc-secondary--light;\n\t\t\t\tbackground-color: $lc-secondary--light;\n\t\t\t}\n\t\t}\n\t}\n}","@use '../base/var' as *;\n\n.archive {\n\tposition: relative;\n\toverflow-y: auto;\n\tpadding: 1rem .5rem 5rem;\n\n\th1 {\n\t\tfont-family: $lc-font--alt;\n\t\tfont-size: 2rem;\n\n\t}\n\n\t.archive-clue {\n\t\tdisplay: flex;\n\t\tflex-wrap: nowrap;\n\t\talign-items: center;\n\t\tposition: relative;\n\n\t\t.archive-release {\n\t\t\twidth: 60px;\n\t\t\tfont-size: 12px;\n\t\t\tmargin-right: 8px;\n\t\t\ttext-align: center;\n\t\t\tfont-family: $lc-font--sans;\n\t\t\tfont-weight: 600;\n\t\t\tflex-shrink: 0;\n\t\t}\n\n\t\t&.completed {\n\t\t\t.archive-release:before {\n\t\t\t\tcontent: \" \";\n\t\t\t\tposition:absolute;\n\t\t\t\tz-index: -1;\n\t\t\t\twidth: 60px;\n\t\t\t\theight: 60px;\n\t\t\t\tborder-radius: .5rem;\n\t\t\t\ttop: 50%;\n\t\t\t\ttransform: translateY(-50%);\n\t\t\t\tleft: 0;\n\t\t\t}\n\n\t\t\t&.g .archive-release:before {\n\t\t\t\tbackground-color: $lc-primary--light;\n\t\t\t\tborder: 1px solid $lc-primary--light;\n\t\t\t}\n\n\t\t\t&.h .archive-release:before {\n\t\t\t\tbackground-color: $lc-secondary--light;\n\t\t\t\tborder: 1px solid $lc-secondary--light;\n\t\t\t}\n\t\t}\n\t}\n\n\t.archive-tile {\n\t\tdisplay: flex;\n\t\twidth: 100%;\n\t\talign-items: center;\n\t\tjustify-content: flex-start;\n\t\tmargin: .5rem 0;\n\t\tpadding: .25rem 1rem;\n\t\theight: 60px;\n\t\tborder: 1px solid $lc-gray--dark;\n\t\toverflow: hidden;\n\t\tborder-radius: .5rem;\n\t\tcursor: pointer;\n\t\t\n\t\t&:hover, &:focus {\n\t\t\tbackground-color: $lc-gray--light;\n\t\t\tborder: 1px solid $lc-gray--light;\n\t\t}\n\t\t\n\t\t.tile-img-stats {\n\t\t\tmargin-right: .25rem;\n\t\t\tdisplay: flex;\n\t\n\t\t\t.tile-difficulty {\n\t\t\t\talign-self: center;\n\t\t\t\twidth: 36px;\n\t\t\t\theight:\tfit-content;\n\t\t\t\tline-height: 1;\n\t\t\t\ttransform: rotate(270deg);\n\t\t\t}\n\n\t\t\t.tile-stats {\n\t\t\t\tdisplay: flex;\n\t\t\t\tflex-direction: column;\n\t\t\t\tjustify-content: center;\n\t\t\t\tfont-size: 11px;\n\t\t\t\tfont-weight: 600;\n\t\t\t\tfont-family: $lc-font--sans;\n\t\t\t\ttext-transform: uppercase;\n\t\t\t\t\n\t\t\t\t.stat-guesses, .stat-hints {\n\t\t\t\t\tmargin: 2px auto;\n\t\t\t\t\tpadding: 2px 3px;\n\t\t\t\t\tborder-radius: 4px;\n\t\t\t\t\t\n\t\t\t\t\t.stat {\n\t\t\t\t\t\tfont-size: 13px;\n\t\t\t\t\t\tfont-weight: 700;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\t.stat-guesses {\n\t\t\t\t\tbackground-color: $lc-primary--light;\n\t\t\t\t}\n\n\t\t\t\t.stat-hints {\n\t\t\t\t\tbackground-color: $lc-secondary--light;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t.tile-name {\n\t\t\toverflow: hidden;\n\t\t\ttext-wrap:nowrap;\n\t\t\ttext-overflow: ellipsis;\n\t\t\tline-height: 1;\n\t\t\tfont-size: 14px;\n\t\t\tflex-shrink: 10;\n\t\t\tpadding: 2px 0;\n\t\t\tfont-family: $lc-font--serif;\n\t\t}\n\t\n\t\t.tile-source {\n\t\t\t// width: 60px;\n\t\t\tfont-family: $lc-font--sans;\n\t\t\tfont-size: 12px;\n\t\t\tcolor: $lc-text--light;\n\t\t\tline-height: 1;\n\t\t\tmargin-left: .5rem;\n\t\t\ttext-align: right;\n\t\t\twhite-space: nowrap;\n\t\t\tflex-grow: 3;\n\t\t\t// color: $lc-secondary--dark;\n\t\t}\n\t}\n}","@use '../base/var' as *;\n\n#clue-container {\n\tposition: relative;\n\toverflow: visible;\n\tdisplay: flex;\n\tflex-direction: column;\n\tjustify-content: space-evenly;\n\talign-self: center;\n\twidth: 100%;\n\theight: $lc-clue-container-height;\n\tmargin: 0 auto;\n\tpadding: 0 2rem;\n\ttext-align: center;\n\tfont-size: 20px;\n\ttext-wrap: balance;\n\n\t.disabled {\n\t\tcursor: default;\n\t}\n\n\t.type {\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tposition: absolute;\n\t\ttop: 0;\n\t\tleft: 0;\n\t\tpadding-left: 0;\n\t\tmargin: 1rem;\n\t\tlist-style-type: none;\n\n\t\tli {\n\t\t\tdisplay: flex;\n\t\t\talign-items: center;\n\t\t\tmargin: 0 .25rem;\n\t\t\tcursor: pointer;\n\t\t\t\n\t\t\t&.type-pill {\n\t\t\t\tpadding: .25rem .5rem;\n\t\t\t\tfont-family: $lc-font--sans;\n\t\t\t\tfont-size: 11px;\n\t\t\t\tfont-weight: 500;\n\t\t\t\ttext-transform: uppercase;\n\t\t\t\tcolor: $lc-text;\n\t\t\t\tborder-radius: 50px;\n\t\t\t\tbackground-color: $lc-secondary--light;\n\t\t\t}\n\n\t\t\t&.type-text {\n\t\t\t\tfont-family: $lc-font--sans;\n\t\t\t\tfont-size: 12px;\n\t\t\t\tfont-weight: 500;\n\t\t\t\tcolor: $lc-text--light;\n\t\t\t}\n\t\t}\n\t\t\n\t}\n\n\t.clue-stats {\n\t\tposition: absolute;\n\t\tbottom: 0;\n\t\tleft: 0;\n\t\tdisplay: flex;\n\t\tfont-size: 13px;\n\t\tfont-weight: 600;\n\t\tfont-family: $lc-font--sans;\n\t\ttext-transform: uppercase;\n\t\tmargin: 1rem;\n\t\tpointer-events: none;\n  \t\tuser-select: none;\n\t\t\n\t\t.stat-guesses, .stat-hints {\n\t\t\tmargin: 2px auto;\n\t\t\tpadding: 2px 3px;\n\t\t\tborder-radius: 4px;\n\t\t\t\n\t\t\t.stat {\n\t\t\t\tfont-size: 15px;\n\t\t\t\tfont-weight: 700;\n\t\t\t}\n\t\t}\n\t\t\n\t\t.stat-hints {\n\t\t\tbackground-color: $lc-secondary--light;\n\t\t\tmargin-right: .5rem;\n\t\t}\n\n\t\t.stat-guesses {\n\t\t\tbackground-color: $lc-primary--light;\n\t\t}\n\t}\n\n\t.clue {\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\tjustify-content: flex-end;\n\t\ttransition: opacity .25s ease;\n\t\tflex-grow: 1;\n\n\t\t.letter {\n\t\t\tposition: relative;\n\t\t\tfont-family: $lc-font--serif;\n\t\t\ttransition:\n\t\t\t\topacity $lc-transition--short ease 0s,\n\t\t\t\tcolor $lc-transition--short ease 0s,\n\t\t\t\tbackground-color $lc-transition--short ease;\n\n\t\t\t&.underline {\n\t\t\t\ttext-decoration: underline;\n\t\t\t}\n\t\t}\n\t}\n\n\t.addLetters {\n\t\tflex-grow: 1;\n\t\tdisplay: flex;\n\t\talign-items: center;\n\t\tjustify-content: center;\n\t\tflex-wrap: wrap;\n\t\talign-content: center;\n\t\tfont-family: $lc-font--serif;\n\t\ttext-transform: uppercase;\n\t\tpointer-events: none;\n\t\tuser-select: none;\n\n\t\t.word {\n\t\t\t\n\t\t\t.letter {\n\t\t\t\tpointer-events: none;\n  \t\t\t\tuser-select: none;\n\t\t\t\tcolor: transparent;\n\t\t\t\tline-height: 23px;\n\t\t\t\topacity: 0;\n\t\t\t\ttransition:\n\t\t\t\t\topacity $lc-transition--short ease 0s,\n\t\t\t\t\tcolor $lc-transition--short ease 0s,\n\t\t\t\t\tbackground-color $lc-transition--short ease;\n\t\t\t}\n\t\t}\n\n\t\tsvg {\n\t\t\tfill: #ccc;\n\t\t\ttransform: rotate(45deg);\n\t\t\topacity: 0;\n\t\t\ttransition:\n\t\t\t\topacity $lc-transition--short ease 0s,\n\t\t\t\tcolor $lc-transition--short ease 0s,\n\t\t\t\tbackground-color $lc-transition--short ease;\n\t\t}\n\t}\n\n\t.sol-section {\n\t\tflex-grow: 1;\n\t\tdisplay: flex;\n\t\talign-items: flex-start;\n\t\tjustify-content: center;\n\n\t\t.solution {\n\t\t\tfont-family: $lc-font--alt;\n\t\t\tz-index: 10;\n\t\t\ttransition: opacity $lc-transition--short ease;\n\t\t\ttext-align: center;\n\t\t\ttext-transform: uppercase;\n\t\t\tmargin: 0 auto;\n\t\t\tfont-size: 1.25rem;\n\n\t\t\t.letter {\n\t\t\t\tposition: relative;\n\t\t\t\tpointer-events: none;\n  \t\t\t\tuser-select: none;\n\t\t\t\ttext-align: center;\n\t\t\t\tdisplay: inline-block;\n\t\t\t\twidth: 30px;\n\t\t\t\theight: 30px;\n\t\t\t\tborder: .75px solid $lc-text;\n\t\t\t\t// border-right: none;\n\n\t\t\t\t&:last-child {\n\t\t\t\t\tborder-right: 1px solid $lc-text;\n\t\t\t\t}\n\n\t\t\t\t.solLetter {\n\t\t\t\t\topacity: 0;\n\t\t\t\t\tpointer-events: none;\n  \t\t\t\t\tuser-select: none;\n\t\t\t\t\ttransition: opacity $lc-transition--short ease;\n\t\t\t\t}\n\n\t\t\t\t.typeLetter {\n\t\t\t\t\tposition: absolute;\n\t\t\t\t\ttop: 50%;\n\t\t\t\t\tleft: 50%;\n\t\t\t\t\ttransform: translate(-50%, -50%);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t&.hide-input .letter .typeLetter {\n\t\t\t\topacity: 0;\n\t\t\t\tpointer-events: none;\n  \t\t\t\tuser-select: none;\n\t\t\t\ttransition: opacity $lc-transition--short ease;\n\t\t\t}\n\n\t\t\t&.reveal-solution .letter .solLetter {\n\t\t\t\topacity: 1;\n\t\t\t\ttransition: opacity $lc-transition--short ease;\n\t\t\t}\n\t\t}\n\n\t\t.source {\n\t\t\topacity: 0;\n\t\t\ttransition: opacity $lc-transition--short ease;\n\t\t\tposition: absolute;\n\t\t\ttop: 60px;\n\t\t\tleft: 50%;\n\t\t\ttransform: translateX(-50%);\n\t\t\tfont-size: 15px;\n\t\t\tfont-family: $lc-font--sans;\n\t\t\tpointer-events: none;\n\t\t\tuser-select: none;\n\n\t\t\t&.show {\n\t\t\t\topacity: 1;\n\t\t\t\ttransition: opacity $lc-transition--short ease;\n\t\t\t\tpointer-events: all;\n\t\t\t\tuser-select: all;\n\t\t\t}\n\t\t}\n\t}\n}","@use '../base/var' as *;\n\n.input {\n\theight: $lc-clue-input-height;\n\tdisplay: flex;\n\tflex-direction: column;\n\tjustify-content: center;\n\n\t.container {\n\t\tdisplay: flex;\n\t\tflex-wrap: wrap;\n\t\tjustify-content: center;\n\t\theight: min-content;\n\n\t\t.word {\n\t\t\tmargin: 0 .5rem;\n\t\t\ttext-wrap: nowrap;\n\n\t\t\t.cell {\n\t\t\t\theight: 36px;\n\t\t\t\twidth: 36px;\n\t\t\t\tborder: 1px solid $lc-text;\n\t\t\t\tborder-right: none;\n\t\t\t\tbackground: none;\n\n\t\t\t\t&:last-child {\n\t\t\t\t\tborder-right: 1px solid $lc-text;\n\t\t\t\t\t;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n}","@use '../base/var' as *;\n\n.tooltip-parent {\n\tposition: relative;\n\n\t.tooltip {\n\t\tposition: absolute;\n\t\tvisibility: hidden;\n\t\twidth: max-content;\n\t\tmax-width: 150px;\n\t\ttop: 32px;\n\t\tleft: 50%;\n\t\ttransform: translateX(-50%);\n\t\tfont-family: $lc-font--sans;\n\t\tfont-size: 14px;\n\t\ttext-transform: none;\n\t\tcolor: #fff;\n\t\tbackground-color: $lc-secondary--dark;\n\t\tpadding: .5rem .25rem;\n\t\tborder-radius: 4px;\n\t\tz-index: 7;\n\n\t\t@media (min-width: 769px) {\n\t\t\tmax-width: 250px;\n\t\t}\n\n\t\t&:after {\n\t\t\tcontent: \"\";\n\t\t\tposition: absolute;\n\t\t\tbottom: 100%;\n\t\t\tleft: 50%;\n\t\t\tmargin-left: -5px;\n\t\t\tborder-width: 5px;\n\t\t\tborder-style: solid;\n\t\t\tborder-color: transparent transparent $lc-secondary--dark transparent;\n\t\t}\n\t\t\n\t\t&.above:after {\n\t\t\tborder-color: $lc-secondary--dark transparent transparent transparent;\n\t\t}\n\n\t\t.tooltip-description {\n\t\t\tmargin-bottom: .75rem;\n\t\t}\n\n\t\t.tooltip-example {\n\t\t\ttext-transform: uppercase;\n\t\t\tfont-size: 12px;\n\t\t}\n\t}\n\n\t&:focus, &:active, &:hover {\n\t\t.tooltip {\n\t\t\tvisibility: visible;\n\t\t}\n\t}\n}","@use '../../base/var' as *;\n\n.bottom {\n\twidth: 100%;\n\theight: $lc-bottom-height;\n\tbackground-color: $lc-gray--light;\n\n\t& > .container {\n\t\tdisplay: flex;\n\t\tflex-wrap: wrap;\n\t\talign-items: flex-end;\n\t}\n}",".button-container {\n\twidth: 100%;\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n\n\t&.stack {\n\t\tflex-direction: column;\n\t}\n\n\t&.solution {\n\t\topacity: 0;\n\t\tvisibility: hidden;\n\t\tanimation-name: fadein;\n\t\tanimation-delay: 4.5s;\n\t\tanimation-duration: 1.5s;\n\t\tanimation-fill-mode: forwards;\n\t}\n}\n\n@keyframes fadein {\n\t0% {\n\t\topacity: 0;\n\t\tvisibility: visible;\n\t}\n\n\t100% {\n\t\topacity: 1;\n\t\tvisibility: visible;\n\t}\n}",'@use "../../base/var" as *;\n@use "../../base/media" as *;\n\n.button-container {\n\t&.stack {\n\t\t.show-btn {\n\t\t\tmin-width: fit-content;\n\t\t\twidth: 60%;\n\t\t\tmax-width: 300px;\n\t\t}\n\t}\n}\n\n.show-btn {\n    outline: none;\n    border: none;\n    padding: .5rem 1rem;\n    margin: .5rem;\n    cursor: pointer;\n\tborder-radius: 50px;\n\tmax-width: 300px;\n\n\t@include max(390px) {\n\t\tfont-size: 16px;\n\t}\n\n\t&:hover, &:active {\n\t\tfilter: brightness(.95);\n\t}\n\n\t&.primary {\n\t\tbackground-color: $lc-primary--light;\n\t\tborder: 1px solid $lc-primary--light;\n\t}\n\n\t&.alt {\n\t\tbackground-color: $lc-secondary--light;\n\t\tborder: 1px solid $lc-secondary--light;\n\t}\n\n\t&.secondary {\n\t\tbackground: none;\n\t\tborder: 1px solid $lc-text;\n\n\t\t&:hover, &:active {\n\t\t\tfilter: brightness(.95);\n\t\t\tbackground-color: $lc-gray;\n\t\t\tborder: 1px solid $lc-gray;\n\t\t}\n\n\t}\n\n\t&.gray {\n\t\tbackground-color: $lc-gray--light;\n\t\tborder: 1px solid $lc-gray--light;\n\n\t\t&:hover, &:active {\n\t\t\tfilter: brightness(.95);\n\t\t\tbackground-color: $lc-gray;\n\t\t\tborder: 1px solid $lc-gray;\n\t\t}\n\t}\n}',"@use '../../base/var' as *;\n\n.keyboard {\n\twidth: 100%;\n\theight: $lc-keyboard-height;\n\tpadding: 0 .25rem .25rem;\n\ttext-align: center;\n\talign-self: flex-end;\n\n\t.k-row {\n\t\tdisplay: flex;\n\t\tjustify-content: space-evenly;\n\t\tmargin: .5rem 0;\n\n\t\tdiv {\n\t\t\tposition: relative;\n\t\t\tbackground-color: $lc-gray;\n\t\t\twidth: 100%;\n\t\t\theight: 44px;\n\t\t\tborder-radius: 8px;\n\t\t\tmargin: 0 .25rem;\n\n\t\t\t&#backspace {\n\t\t\t\twidth: 150%;\n\t\t\t\tbackground-color: $lc-gray--dark;\n\t\t\t}\n\n\t\t\tspan,\n\t\t\timg {\n\t\t\t\tposition: absolute;\n\t\t\t\tleft: 50%;\n\t\t\t\ttop: 50%;\n\t\t\t\ttransform: translate(-50%, -50%);\n\t\t\t\tdisplay: block;\n\t\t\t}\n\t\t}\n\t}\n}","@use '../../base/var' as *;\n\n.message {\n\tposition: fixed;\n\tbottom: 0;\n\tleft: 0;\n\twidth: 100%;\n\theight: $lc-bottom-height;\n\tbackground-color: $lc-gray--light;\n\tdisplay: flex;\n\tflex-direction: column;\n\tjustify-content: space-evenly;\n\talign-items: center;\n\ttext-align: center;\n\ttext-wrap: balance;\n\n\tstrong {\n\t\tfont-family: $lc-font--serif;\n\t}\n\n\t&.solution {\n\t\theight: calc($lc-bottom-height);\n\t\tbackground-color: $lc-gray--light;\n\t\topacity: 0;\n\t\tvisibility: hidden;\n\t\tanimation-name: fadein;\n\t\tanimation-delay: 4s;\n\t\tanimation-duration: 1.5s;\n\t\tanimation-fill-mode: forwards;\n\t}\n\n\t&.is-correct-ans {\n\t\theight: calc($lc-bottom-height);\n\t\tbackground-color: $lc-primary--light;\n\t}\n\n\t.message-copy {\n\t\tmargin: 0 1.5rem;\n\n\t\t.helper {\n\t\t\tfont-size: 16px;\n\t\t\t// color: $lc-text--light;\n\t\t}\n\t}\n\n\t.explainer {\n\t\tmargin-top: 1rem;\n\t\tfont-size: 16px;\n\t\tcolor: $lc-text--light;\n\t}\n}"],sourceRoot:""}]);const o=i},314:e=>{"use strict";e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n="",r=void 0!==t[5];return t[4]&&(n+="@supports (".concat(t[4],") {")),t[2]&&(n+="@media ".concat(t[2]," {")),r&&(n+="@layer".concat(t[5].length>0?" ".concat(t[5]):""," {")),n+=e(t),r&&(n+="}"),t[2]&&(n+="}"),t[4]&&(n+="}"),n})).join("")},t.i=function(e,n,r,a,l){"string"==typeof e&&(e=[[null,e,void 0]]);var i={};if(r)for(var o=0;o<this.length;o++){var s=this[o][0];null!=s&&(i[s]=!0)}for(var c=0;c<e.length;c++){var u=[].concat(e[c]);r&&i[u[0]]||(void 0!==l&&(void 0===u[5]||(u[1]="@layer".concat(u[5].length>0?" ".concat(u[5]):""," {").concat(u[1],"}")),u[5]=l),n&&(u[2]?(u[1]="@media ".concat(u[2]," {").concat(u[1],"}"),u[2]=n):u[2]=n),a&&(u[4]?(u[1]="@supports (".concat(u[4],") {").concat(u[1],"}"),u[4]=a):u[4]="".concat(a)),t.push(u))}},t}},354:e=>{"use strict";e.exports=function(e){var t=e[1],n=e[3];if(!n)return t;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(n)))),a="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),l="/*# ".concat(a," */");return[t].concat([l]).join("\n")}return[t].join("\n")}},551:(e,t,n)=>{"use strict";var r=n(540),a=n(982);function l(e){for(var t="https://reactjs.org/docs/error-decoder.html?invariant="+e,n=1;n<arguments.length;n++)t+="&args[]="+encodeURIComponent(arguments[n]);return"Minified React error #"+e+"; visit "+t+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var i=new Set,o={};function s(e,t){c(e,t),c(e+"Capture",t)}function c(e,t){for(o[e]=t,e=0;e<t.length;e++)i.add(t[e])}var u=!("undefined"==typeof window||void 0===window.document||void 0===window.document.createElement),m=Object.prototype.hasOwnProperty,d=/^[:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD][:A-Z_a-z\u00C0-\u00D6\u00D8-\u00F6\u00F8-\u02FF\u0370-\u037D\u037F-\u1FFF\u200C-\u200D\u2070-\u218F\u2C00-\u2FEF\u3001-\uD7FF\uF900-\uFDCF\uFDF0-\uFFFD\-.0-9\u00B7\u0300-\u036F\u203F-\u2040]*$/,p={},f={};function A(e,t,n,r,a,l,i){this.acceptsBooleans=2===t||3===t||4===t,this.attributeName=r,this.attributeNamespace=a,this.mustUseProperty=n,this.propertyName=e,this.type=t,this.sanitizeURL=l,this.removeEmptyString=i}var g={};"children dangerouslySetInnerHTML defaultValue defaultChecked innerHTML suppressContentEditableWarning suppressHydrationWarning style".split(" ").forEach((function(e){g[e]=new A(e,0,!1,e,null,!1,!1)})),[["acceptCharset","accept-charset"],["className","class"],["htmlFor","for"],["httpEquiv","http-equiv"]].forEach((function(e){var t=e[0];g[t]=new A(t,1,!1,e[1],null,!1,!1)})),["contentEditable","draggable","spellCheck","value"].forEach((function(e){g[e]=new A(e,2,!1,e.toLowerCase(),null,!1,!1)})),["autoReverse","externalResourcesRequired","focusable","preserveAlpha"].forEach((function(e){g[e]=new A(e,2,!1,e,null,!1,!1)})),"allowFullScreen async autoFocus autoPlay controls default defer disabled disablePictureInPicture disableRemotePlayback formNoValidate hidden loop noModule noValidate open playsInline readOnly required reversed scoped seamless itemScope".split(" ").forEach((function(e){g[e]=new A(e,3,!1,e.toLowerCase(),null,!1,!1)})),["checked","multiple","muted","selected"].forEach((function(e){g[e]=new A(e,3,!0,e,null,!1,!1)})),["capture","download"].forEach((function(e){g[e]=new A(e,4,!1,e,null,!1,!1)})),["cols","rows","size","span"].forEach((function(e){g[e]=new A(e,6,!1,e,null,!1,!1)})),["rowSpan","start"].forEach((function(e){g[e]=new A(e,5,!1,e.toLowerCase(),null,!1,!1)}));var h=/[\-:]([a-z])/g;function y(e){return e[1].toUpperCase()}function v(e,t,n,r){var a=g.hasOwnProperty(t)?g[t]:null;(null!==a?0!==a.type:r||!(2<t.length)||"o"!==t[0]&&"O"!==t[0]||"n"!==t[1]&&"N"!==t[1])&&(function(e,t,n,r){if(null==t||function(e,t,n,r){if(null!==n&&0===n.type)return!1;switch(typeof t){case"function":case"symbol":return!0;case"boolean":return!r&&(null!==n?!n.acceptsBooleans:"data-"!==(e=e.toLowerCase().slice(0,5))&&"aria-"!==e);default:return!1}}(e,t,n,r))return!0;if(r)return!1;if(null!==n)switch(n.type){case 3:return!t;case 4:return!1===t;case 5:return isNaN(t);case 6:return isNaN(t)||1>t}return!1}(t,n,a,r)&&(n=null),r||null===a?function(e){return!!m.call(f,e)||!m.call(p,e)&&(d.test(e)?f[e]=!0:(p[e]=!0,!1))}(t)&&(null===n?e.removeAttribute(t):e.setAttribute(t,""+n)):a.mustUseProperty?e[a.propertyName]=null===n?3!==a.type&&"":n:(t=a.attributeName,r=a.attributeNamespace,null===n?e.removeAttribute(t):(n=3===(a=a.type)||4===a&&!0===n?"":""+n,r?e.setAttributeNS(r,t,n):e.setAttribute(t,n))))}"accent-height alignment-baseline arabic-form baseline-shift cap-height clip-path clip-rule color-interpolation color-interpolation-filters color-profile color-rendering dominant-baseline enable-background fill-opacity fill-rule flood-color flood-opacity font-family font-size font-size-adjust font-stretch font-style font-variant font-weight glyph-name glyph-orientation-horizontal glyph-orientation-vertical horiz-adv-x horiz-origin-x image-rendering letter-spacing lighting-color marker-end marker-mid marker-start overline-position overline-thickness paint-order panose-1 pointer-events rendering-intent shape-rendering stop-color stop-opacity strikethrough-position strikethrough-thickness stroke-dasharray stroke-dashoffset stroke-linecap stroke-linejoin stroke-miterlimit stroke-opacity stroke-width text-anchor text-decoration text-rendering underline-position underline-thickness unicode-bidi unicode-range units-per-em v-alphabetic v-hanging v-ideographic v-mathematical vector-effect vert-adv-y vert-origin-x vert-origin-y word-spacing writing-mode xmlns:xlink x-height".split(" ").forEach((function(e){var t=e.replace(h,y);g[t]=new A(t,1,!1,e,null,!1,!1)})),"xlink:actuate xlink:arcrole xlink:role xlink:show xlink:title xlink:type".split(" ").forEach((function(e){var t=e.replace(h,y);g[t]=new A(t,1,!1,e,"http://www.w3.org/1999/xlink",!1,!1)})),["xml:base","xml:lang","xml:space"].forEach((function(e){var t=e.replace(h,y);g[t]=new A(t,1,!1,e,"http://www.w3.org/XML/1998/namespace",!1,!1)})),["tabIndex","crossOrigin"].forEach((function(e){g[e]=new A(e,1,!1,e.toLowerCase(),null,!1,!1)})),g.xlinkHref=new A("xlinkHref",1,!1,"xlink:href","http://www.w3.org/1999/xlink",!0,!1),["src","href","action","formAction"].forEach((function(e){g[e]=new A(e,1,!1,e.toLowerCase(),null,!0,!0)}));var E=r.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,C=Symbol.for("react.element"),b=Symbol.for("react.portal"),x=Symbol.for("react.fragment"),w=Symbol.for("react.strict_mode"),k=Symbol.for("react.profiler"),B=Symbol.for("react.provider"),N=Symbol.for("react.context"),S=Symbol.for("react.forward_ref"),F=Symbol.for("react.suspense"),R=Symbol.for("react.suspense_list"),L=Symbol.for("react.memo"),T=Symbol.for("react.lazy");Symbol.for("react.scope"),Symbol.for("react.debug_trace_mode");var D=Symbol.for("react.offscreen");Symbol.for("react.legacy_hidden"),Symbol.for("react.cache"),Symbol.for("react.tracing_marker");var I=Symbol.iterator;function z(e){return null===e||"object"!=typeof e?null:"function"==typeof(e=I&&e[I]||e["@@iterator"])?e:null}var P,U=Object.assign;function _(e){if(void 0===P)try{throw Error()}catch(e){var t=e.stack.trim().match(/\n( *(at )?)/);P=t&&t[1]||""}return"\n"+P+e}var $=!1;function M(e,t){if(!e||$)return"";$=!0;var n=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(t)if(t=function(){throw Error()},Object.defineProperty(t.prototype,"props",{set:function(){throw Error()}}),"object"==typeof Reflect&&Reflect.construct){try{Reflect.construct(t,[])}catch(e){var r=e}Reflect.construct(e,[],t)}else{try{t.call()}catch(e){r=e}e.call(t.prototype)}else{try{throw Error()}catch(e){r=e}e()}}catch(t){if(t&&r&&"string"==typeof t.stack){for(var a=t.stack.split("\n"),l=r.stack.split("\n"),i=a.length-1,o=l.length-1;1<=i&&0<=o&&a[i]!==l[o];)o--;for(;1<=i&&0<=o;i--,o--)if(a[i]!==l[o]){if(1!==i||1!==o)do{if(i--,0>--o||a[i]!==l[o]){var s="\n"+a[i].replace(" at new "," at ");return e.displayName&&s.includes("<anonymous>")&&(s=s.replace("<anonymous>",e.displayName)),s}}while(1<=i&&0<=o);break}}}finally{$=!1,Error.prepareStackTrace=n}return(e=e?e.displayName||e.name:"")?_(e):""}function O(e){switch(e.tag){case 5:return _(e.type);case 16:return _("Lazy");case 13:return _("Suspense");case 19:return _("SuspenseList");case 0:case 2:case 15:return M(e.type,!1);case 11:return M(e.type.render,!1);case 1:return M(e.type,!0);default:return""}}function j(e){if(null==e)return null;if("function"==typeof e)return e.displayName||e.name||null;if("string"==typeof e)return e;switch(e){case x:return"Fragment";case b:return"Portal";case k:return"Profiler";case w:return"StrictMode";case F:return"Suspense";case R:return"SuspenseList"}if("object"==typeof e)switch(e.$$typeof){case N:return(e.displayName||"Context")+".Consumer";case B:return(e._context.displayName||"Context")+".Provider";case S:var t=e.render;return(e=e.displayName)||(e=""!==(e=t.displayName||t.name||"")?"ForwardRef("+e+")":"ForwardRef"),e;case L:return null!==(t=e.displayName||null)?t:j(e.type)||"Memo";case T:t=e._payload,e=e._init;try{return j(e(t))}catch(e){}}return null}function G(e){var t=e.type;switch(e.tag){case 24:return"Cache";case 9:return(t.displayName||"Context")+".Consumer";case 10:return(t._context.displayName||"Context")+".Provider";case 18:return"DehydratedFragment";case 11:return e=(e=t.render).displayName||e.name||"",t.displayName||(""!==e?"ForwardRef("+e+")":"ForwardRef");case 7:return"Fragment";case 5:return t;case 4:return"Portal";case 3:return"Root";case 6:return"Text";case 16:return j(t);case 8:return t===w?"StrictMode":"Mode";case 22:return"Offscreen";case 12:return"Profiler";case 21:return"Scope";case 13:return"Suspense";case 19:return"SuspenseList";case 25:return"TracingMarker";case 1:case 0:case 17:case 2:case 14:case 15:if("function"==typeof t)return t.displayName||t.name||null;if("string"==typeof t)return t}return null}function H(e){switch(typeof e){case"boolean":case"number":case"string":case"undefined":case"object":return e;default:return""}}function W(e){var t=e.type;return(e=e.nodeName)&&"input"===e.toLowerCase()&&("checkbox"===t||"radio"===t)}function K(e){e._valueTracker||(e._valueTracker=function(e){var t=W(e)?"checked":"value",n=Object.getOwnPropertyDescriptor(e.constructor.prototype,t),r=""+e[t];if(!e.hasOwnProperty(t)&&void 0!==n&&"function"==typeof n.get&&"function"==typeof n.set){var a=n.get,l=n.set;return Object.defineProperty(e,t,{configurable:!0,get:function(){return a.call(this)},set:function(e){r=""+e,l.call(this,e)}}),Object.defineProperty(e,t,{enumerable:n.enumerable}),{getValue:function(){return r},setValue:function(e){r=""+e},stopTracking:function(){e._valueTracker=null,delete e[t]}}}}(e))}function Q(e){if(!e)return!1;var t=e._valueTracker;if(!t)return!0;var n=t.getValue(),r="";return e&&(r=W(e)?e.checked?"true":"false":e.value),(e=r)!==n&&(t.setValue(e),!0)}function Y(e){if(void 0===(e=e||("undefined"!=typeof document?document:void 0)))return null;try{return e.activeElement||e.body}catch(t){return e.body}}function V(e,t){var n=t.checked;return U({},t,{defaultChecked:void 0,defaultValue:void 0,value:void 0,checked:null!=n?n:e._wrapperState.initialChecked})}function q(e,t){var n=null==t.defaultValue?"":t.defaultValue,r=null!=t.checked?t.checked:t.defaultChecked;n=H(null!=t.value?t.value:n),e._wrapperState={initialChecked:r,initialValue:n,controlled:"checkbox"===t.type||"radio"===t.type?null!=t.checked:null!=t.value}}function X(e,t){null!=(t=t.checked)&&v(e,"checked",t,!1)}function J(e,t){X(e,t);var n=H(t.value),r=t.type;if(null!=n)"number"===r?(0===n&&""===e.value||e.value!=n)&&(e.value=""+n):e.value!==""+n&&(e.value=""+n);else if("submit"===r||"reset"===r)return void e.removeAttribute("value");t.hasOwnProperty("value")?ee(e,t.type,n):t.hasOwnProperty("defaultValue")&&ee(e,t.type,H(t.defaultValue)),null==t.checked&&null!=t.defaultChecked&&(e.defaultChecked=!!t.defaultChecked)}function Z(e,t,n){if(t.hasOwnProperty("value")||t.hasOwnProperty("defaultValue")){var r=t.type;if(!("submit"!==r&&"reset"!==r||void 0!==t.value&&null!==t.value))return;t=""+e._wrapperState.initialValue,n||t===e.value||(e.value=t),e.defaultValue=t}""!==(n=e.name)&&(e.name=""),e.defaultChecked=!!e._wrapperState.initialChecked,""!==n&&(e.name=n)}function ee(e,t,n){"number"===t&&Y(e.ownerDocument)===e||(null==n?e.defaultValue=""+e._wrapperState.initialValue:e.defaultValue!==""+n&&(e.defaultValue=""+n))}var te=Array.isArray;function ne(e,t,n,r){if(e=e.options,t){t={};for(var a=0;a<n.length;a++)t["$"+n[a]]=!0;for(n=0;n<e.length;n++)a=t.hasOwnProperty("$"+e[n].value),e[n].selected!==a&&(e[n].selected=a),a&&r&&(e[n].defaultSelected=!0)}else{for(n=""+H(n),t=null,a=0;a<e.length;a++){if(e[a].value===n)return e[a].selected=!0,void(r&&(e[a].defaultSelected=!0));null!==t||e[a].disabled||(t=e[a])}null!==t&&(t.selected=!0)}}function re(e,t){if(null!=t.dangerouslySetInnerHTML)throw Error(l(91));return U({},t,{value:void 0,defaultValue:void 0,children:""+e._wrapperState.initialValue})}function ae(e,t){var n=t.value;if(null==n){if(n=t.children,t=t.defaultValue,null!=n){if(null!=t)throw Error(l(92));if(te(n)){if(1<n.length)throw Error(l(93));n=n[0]}t=n}null==t&&(t=""),n=t}e._wrapperState={initialValue:H(n)}}function le(e,t){var n=H(t.value),r=H(t.defaultValue);null!=n&&((n=""+n)!==e.value&&(e.value=n),null==t.defaultValue&&e.defaultValue!==n&&(e.defaultValue=n)),null!=r&&(e.defaultValue=""+r)}function ie(e){var t=e.textContent;t===e._wrapperState.initialValue&&""!==t&&null!==t&&(e.value=t)}function oe(e){switch(e){case"svg":return"http://www.w3.org/2000/svg";case"math":return"http://www.w3.org/1998/Math/MathML";default:return"http://www.w3.org/1999/xhtml"}}function se(e,t){return null==e||"http://www.w3.org/1999/xhtml"===e?oe(t):"http://www.w3.org/2000/svg"===e&&"foreignObject"===t?"http://www.w3.org/1999/xhtml":e}var ce,ue,me=(ue=function(e,t){if("http://www.w3.org/2000/svg"!==e.namespaceURI||"innerHTML"in e)e.innerHTML=t;else{for((ce=ce||document.createElement("div")).innerHTML="<svg>"+t.valueOf().toString()+"</svg>",t=ce.firstChild;e.firstChild;)e.removeChild(e.firstChild);for(;t.firstChild;)e.appendChild(t.firstChild)}},"undefined"!=typeof MSApp&&MSApp.execUnsafeLocalFunction?function(e,t,n,r){MSApp.execUnsafeLocalFunction((function(){return ue(e,t)}))}:ue);function de(e,t){if(t){var n=e.firstChild;if(n&&n===e.lastChild&&3===n.nodeType)return void(n.nodeValue=t)}e.textContent=t}var pe={animationIterationCount:!0,aspectRatio:!0,borderImageOutset:!0,borderImageSlice:!0,borderImageWidth:!0,boxFlex:!0,boxFlexGroup:!0,boxOrdinalGroup:!0,columnCount:!0,columns:!0,flex:!0,flexGrow:!0,flexPositive:!0,flexShrink:!0,flexNegative:!0,flexOrder:!0,gridArea:!0,gridRow:!0,gridRowEnd:!0,gridRowSpan:!0,gridRowStart:!0,gridColumn:!0,gridColumnEnd:!0,gridColumnSpan:!0,gridColumnStart:!0,fontWeight:!0,lineClamp:!0,lineHeight:!0,opacity:!0,order:!0,orphans:!0,tabSize:!0,widows:!0,zIndex:!0,zoom:!0,fillOpacity:!0,floodOpacity:!0,stopOpacity:!0,strokeDasharray:!0,strokeDashoffset:!0,strokeMiterlimit:!0,strokeOpacity:!0,strokeWidth:!0},fe=["Webkit","ms","Moz","O"];function Ae(e,t,n){return null==t||"boolean"==typeof t||""===t?"":n||"number"!=typeof t||0===t||pe.hasOwnProperty(e)&&pe[e]?(""+t).trim():t+"px"}function ge(e,t){for(var n in e=e.style,t)if(t.hasOwnProperty(n)){var r=0===n.indexOf("--"),a=Ae(n,t[n],r);"float"===n&&(n="cssFloat"),r?e.setProperty(n,a):e[n]=a}}Object.keys(pe).forEach((function(e){fe.forEach((function(t){t=t+e.charAt(0).toUpperCase()+e.substring(1),pe[t]=pe[e]}))}));var he=U({menuitem:!0},{area:!0,base:!0,br:!0,col:!0,embed:!0,hr:!0,img:!0,input:!0,keygen:!0,link:!0,meta:!0,param:!0,source:!0,track:!0,wbr:!0});function ye(e,t){if(t){if(he[e]&&(null!=t.children||null!=t.dangerouslySetInnerHTML))throw Error(l(137,e));if(null!=t.dangerouslySetInnerHTML){if(null!=t.children)throw Error(l(60));if("object"!=typeof t.dangerouslySetInnerHTML||!("__html"in t.dangerouslySetInnerHTML))throw Error(l(61))}if(null!=t.style&&"object"!=typeof t.style)throw Error(l(62))}}function ve(e,t){if(-1===e.indexOf("-"))return"string"==typeof t.is;switch(e){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}var Ee=null;function Ce(e){return(e=e.target||e.srcElement||window).correspondingUseElement&&(e=e.correspondingUseElement),3===e.nodeType?e.parentNode:e}var be=null,xe=null,we=null;function ke(e){if(e=va(e)){if("function"!=typeof be)throw Error(l(280));var t=e.stateNode;t&&(t=Ca(t),be(e.stateNode,e.type,t))}}function Be(e){xe?we?we.push(e):we=[e]:xe=e}function Ne(){if(xe){var e=xe,t=we;if(we=xe=null,ke(e),t)for(e=0;e<t.length;e++)ke(t[e])}}function Se(e,t){return e(t)}function Fe(){}var Re=!1;function Le(e,t,n){if(Re)return e(t,n);Re=!0;try{return Se(e,t,n)}finally{Re=!1,(null!==xe||null!==we)&&(Fe(),Ne())}}function Te(e,t){var n=e.stateNode;if(null===n)return null;var r=Ca(n);if(null===r)return null;n=r[t];e:switch(t){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":case"onMouseEnter":(r=!r.disabled)||(r=!("button"===(e=e.type)||"input"===e||"select"===e||"textarea"===e)),e=!r;break e;default:e=!1}if(e)return null;if(n&&"function"!=typeof n)throw Error(l(231,t,typeof n));return n}var De=!1;if(u)try{var Ie={};Object.defineProperty(Ie,"passive",{get:function(){De=!0}}),window.addEventListener("test",Ie,Ie),window.removeEventListener("test",Ie,Ie)}catch(ue){De=!1}function ze(e,t,n,r,a,l,i,o,s){var c=Array.prototype.slice.call(arguments,3);try{t.apply(n,c)}catch(e){this.onError(e)}}var Pe=!1,Ue=null,_e=!1,$e=null,Me={onError:function(e){Pe=!0,Ue=e}};function Oe(e,t,n,r,a,l,i,o,s){Pe=!1,Ue=null,ze.apply(Me,arguments)}function je(e){var t=e,n=e;if(e.alternate)for(;t.return;)t=t.return;else{e=t;do{!!(4098&(t=e).flags)&&(n=t.return),e=t.return}while(e)}return 3===t.tag?n:null}function Ge(e){if(13===e.tag){var t=e.memoizedState;if(null===t&&null!==(e=e.alternate)&&(t=e.memoizedState),null!==t)return t.dehydrated}return null}function He(e){if(je(e)!==e)throw Error(l(188))}function We(e){return null!==(e=function(e){var t=e.alternate;if(!t){if(null===(t=je(e)))throw Error(l(188));return t!==e?null:e}for(var n=e,r=t;;){var a=n.return;if(null===a)break;var i=a.alternate;if(null===i){if(null!==(r=a.return)){n=r;continue}break}if(a.child===i.child){for(i=a.child;i;){if(i===n)return He(a),e;if(i===r)return He(a),t;i=i.sibling}throw Error(l(188))}if(n.return!==r.return)n=a,r=i;else{for(var o=!1,s=a.child;s;){if(s===n){o=!0,n=a,r=i;break}if(s===r){o=!0,r=a,n=i;break}s=s.sibling}if(!o){for(s=i.child;s;){if(s===n){o=!0,n=i,r=a;break}if(s===r){o=!0,r=i,n=a;break}s=s.sibling}if(!o)throw Error(l(189))}}if(n.alternate!==r)throw Error(l(190))}if(3!==n.tag)throw Error(l(188));return n.stateNode.current===n?e:t}(e))?Ke(e):null}function Ke(e){if(5===e.tag||6===e.tag)return e;for(e=e.child;null!==e;){var t=Ke(e);if(null!==t)return t;e=e.sibling}return null}var Qe=a.unstable_scheduleCallback,Ye=a.unstable_cancelCallback,Ve=a.unstable_shouldYield,qe=a.unstable_requestPaint,Xe=a.unstable_now,Je=a.unstable_getCurrentPriorityLevel,Ze=a.unstable_ImmediatePriority,et=a.unstable_UserBlockingPriority,tt=a.unstable_NormalPriority,nt=a.unstable_LowPriority,rt=a.unstable_IdlePriority,at=null,lt=null,it=Math.clz32?Math.clz32:function(e){return 0===(e>>>=0)?32:31-(ot(e)/st|0)|0},ot=Math.log,st=Math.LN2,ct=64,ut=4194304;function mt(e){switch(e&-e){case 1:return 1;case 2:return 2;case 4:return 4;case 8:return 8;case 16:return 16;case 32:return 32;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return 4194240&e;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return 130023424&e;case 134217728:return 134217728;case 268435456:return 268435456;case 536870912:return 536870912;case 1073741824:return 1073741824;default:return e}}function dt(e,t){var n=e.pendingLanes;if(0===n)return 0;var r=0,a=e.suspendedLanes,l=e.pingedLanes,i=268435455&n;if(0!==i){var o=i&~a;0!==o?r=mt(o):0!=(l&=i)&&(r=mt(l))}else 0!=(i=n&~a)?r=mt(i):0!==l&&(r=mt(l));if(0===r)return 0;if(0!==t&&t!==r&&!(t&a)&&((a=r&-r)>=(l=t&-t)||16===a&&4194240&l))return t;if(4&r&&(r|=16&n),0!==(t=e.entangledLanes))for(e=e.entanglements,t&=r;0<t;)a=1<<(n=31-it(t)),r|=e[n],t&=~a;return r}function pt(e,t){switch(e){case 1:case 2:case 4:return t+250;case 8:case 16:case 32:case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return t+5e3;default:return-1}}function ft(e){return 0!=(e=-1073741825&e.pendingLanes)?e:1073741824&e?1073741824:0}function At(){var e=ct;return!(4194240&(ct<<=1))&&(ct=64),e}function gt(e){for(var t=[],n=0;31>n;n++)t.push(e);return t}function ht(e,t,n){e.pendingLanes|=t,536870912!==t&&(e.suspendedLanes=0,e.pingedLanes=0),(e=e.eventTimes)[t=31-it(t)]=n}function yt(e,t){var n=e.entangledLanes|=t;for(e=e.entanglements;n;){var r=31-it(n),a=1<<r;a&t|e[r]&t&&(e[r]|=t),n&=~a}}var vt=0;function Et(e){return 1<(e&=-e)?4<e?268435455&e?16:536870912:4:1}var Ct,bt,xt,wt,kt,Bt=!1,Nt=[],St=null,Ft=null,Rt=null,Lt=new Map,Tt=new Map,Dt=[],It="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset submit".split(" ");function zt(e,t){switch(e){case"focusin":case"focusout":St=null;break;case"dragenter":case"dragleave":Ft=null;break;case"mouseover":case"mouseout":Rt=null;break;case"pointerover":case"pointerout":Lt.delete(t.pointerId);break;case"gotpointercapture":case"lostpointercapture":Tt.delete(t.pointerId)}}function Pt(e,t,n,r,a,l){return null===e||e.nativeEvent!==l?(e={blockedOn:t,domEventName:n,eventSystemFlags:r,nativeEvent:l,targetContainers:[a]},null!==t&&null!==(t=va(t))&&bt(t),e):(e.eventSystemFlags|=r,t=e.targetContainers,null!==a&&-1===t.indexOf(a)&&t.push(a),e)}function Ut(e){var t=ya(e.target);if(null!==t){var n=je(t);if(null!==n)if(13===(t=n.tag)){if(null!==(t=Ge(n)))return e.blockedOn=t,void kt(e.priority,(function(){xt(n)}))}else if(3===t&&n.stateNode.current.memoizedState.isDehydrated)return void(e.blockedOn=3===n.tag?n.stateNode.containerInfo:null)}e.blockedOn=null}function _t(e){if(null!==e.blockedOn)return!1;for(var t=e.targetContainers;0<t.length;){var n=Vt(e.domEventName,e.eventSystemFlags,t[0],e.nativeEvent);if(null!==n)return null!==(t=va(n))&&bt(t),e.blockedOn=n,!1;var r=new(n=e.nativeEvent).constructor(n.type,n);Ee=r,n.target.dispatchEvent(r),Ee=null,t.shift()}return!0}function $t(e,t,n){_t(e)&&n.delete(t)}function Mt(){Bt=!1,null!==St&&_t(St)&&(St=null),null!==Ft&&_t(Ft)&&(Ft=null),null!==Rt&&_t(Rt)&&(Rt=null),Lt.forEach($t),Tt.forEach($t)}function Ot(e,t){e.blockedOn===t&&(e.blockedOn=null,Bt||(Bt=!0,a.unstable_scheduleCallback(a.unstable_NormalPriority,Mt)))}function jt(e){function t(t){return Ot(t,e)}if(0<Nt.length){Ot(Nt[0],e);for(var n=1;n<Nt.length;n++){var r=Nt[n];r.blockedOn===e&&(r.blockedOn=null)}}for(null!==St&&Ot(St,e),null!==Ft&&Ot(Ft,e),null!==Rt&&Ot(Rt,e),Lt.forEach(t),Tt.forEach(t),n=0;n<Dt.length;n++)(r=Dt[n]).blockedOn===e&&(r.blockedOn=null);for(;0<Dt.length&&null===(n=Dt[0]).blockedOn;)Ut(n),null===n.blockedOn&&Dt.shift()}var Gt=E.ReactCurrentBatchConfig,Ht=!0;function Wt(e,t,n,r){var a=vt,l=Gt.transition;Gt.transition=null;try{vt=1,Qt(e,t,n,r)}finally{vt=a,Gt.transition=l}}function Kt(e,t,n,r){var a=vt,l=Gt.transition;Gt.transition=null;try{vt=4,Qt(e,t,n,r)}finally{vt=a,Gt.transition=l}}function Qt(e,t,n,r){if(Ht){var a=Vt(e,t,n,r);if(null===a)Hr(e,t,r,Yt,n),zt(e,r);else if(function(e,t,n,r,a){switch(t){case"focusin":return St=Pt(St,e,t,n,r,a),!0;case"dragenter":return Ft=Pt(Ft,e,t,n,r,a),!0;case"mouseover":return Rt=Pt(Rt,e,t,n,r,a),!0;case"pointerover":var l=a.pointerId;return Lt.set(l,Pt(Lt.get(l)||null,e,t,n,r,a)),!0;case"gotpointercapture":return l=a.pointerId,Tt.set(l,Pt(Tt.get(l)||null,e,t,n,r,a)),!0}return!1}(a,e,t,n,r))r.stopPropagation();else if(zt(e,r),4&t&&-1<It.indexOf(e)){for(;null!==a;){var l=va(a);if(null!==l&&Ct(l),null===(l=Vt(e,t,n,r))&&Hr(e,t,r,Yt,n),l===a)break;a=l}null!==a&&r.stopPropagation()}else Hr(e,t,r,null,n)}}var Yt=null;function Vt(e,t,n,r){if(Yt=null,null!==(e=ya(e=Ce(r))))if(null===(t=je(e)))e=null;else if(13===(n=t.tag)){if(null!==(e=Ge(t)))return e;e=null}else if(3===n){if(t.stateNode.current.memoizedState.isDehydrated)return 3===t.tag?t.stateNode.containerInfo:null;e=null}else t!==e&&(e=null);return Yt=e,null}function qt(e){switch(e){case"cancel":case"click":case"close":case"contextmenu":case"copy":case"cut":case"auxclick":case"dblclick":case"dragend":case"dragstart":case"drop":case"focusin":case"focusout":case"input":case"invalid":case"keydown":case"keypress":case"keyup":case"mousedown":case"mouseup":case"paste":case"pause":case"play":case"pointercancel":case"pointerdown":case"pointerup":case"ratechange":case"reset":case"resize":case"seeked":case"submit":case"touchcancel":case"touchend":case"touchstart":case"volumechange":case"change":case"selectionchange":case"textInput":case"compositionstart":case"compositionend":case"compositionupdate":case"beforeblur":case"afterblur":case"beforeinput":case"blur":case"fullscreenchange":case"focus":case"hashchange":case"popstate":case"select":case"selectstart":return 1;case"drag":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"mousemove":case"mouseout":case"mouseover":case"pointermove":case"pointerout":case"pointerover":case"scroll":case"toggle":case"touchmove":case"wheel":case"mouseenter":case"mouseleave":case"pointerenter":case"pointerleave":return 4;case"message":switch(Je()){case Ze:return 1;case et:return 4;case tt:case nt:return 16;case rt:return 536870912;default:return 16}default:return 16}}var Xt=null,Jt=null,Zt=null;function en(){if(Zt)return Zt;var e,t,n=Jt,r=n.length,a="value"in Xt?Xt.value:Xt.textContent,l=a.length;for(e=0;e<r&&n[e]===a[e];e++);var i=r-e;for(t=1;t<=i&&n[r-t]===a[l-t];t++);return Zt=a.slice(e,1<t?1-t:void 0)}function tn(e){var t=e.keyCode;return"charCode"in e?0===(e=e.charCode)&&13===t&&(e=13):e=t,10===e&&(e=13),32<=e||13===e?e:0}function nn(){return!0}function rn(){return!1}function an(e){function t(t,n,r,a,l){for(var i in this._reactName=t,this._targetInst=r,this.type=n,this.nativeEvent=a,this.target=l,this.currentTarget=null,e)e.hasOwnProperty(i)&&(t=e[i],this[i]=t?t(a):a[i]);return this.isDefaultPrevented=(null!=a.defaultPrevented?a.defaultPrevented:!1===a.returnValue)?nn:rn,this.isPropagationStopped=rn,this}return U(t.prototype,{preventDefault:function(){this.defaultPrevented=!0;var e=this.nativeEvent;e&&(e.preventDefault?e.preventDefault():"unknown"!=typeof e.returnValue&&(e.returnValue=!1),this.isDefaultPrevented=nn)},stopPropagation:function(){var e=this.nativeEvent;e&&(e.stopPropagation?e.stopPropagation():"unknown"!=typeof e.cancelBubble&&(e.cancelBubble=!0),this.isPropagationStopped=nn)},persist:function(){},isPersistent:nn}),t}var ln,on,sn,cn={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(e){return e.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},un=an(cn),mn=U({},cn,{view:0,detail:0}),dn=an(mn),pn=U({},mn,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:kn,button:0,buttons:0,relatedTarget:function(e){return void 0===e.relatedTarget?e.fromElement===e.srcElement?e.toElement:e.fromElement:e.relatedTarget},movementX:function(e){return"movementX"in e?e.movementX:(e!==sn&&(sn&&"mousemove"===e.type?(ln=e.screenX-sn.screenX,on=e.screenY-sn.screenY):on=ln=0,sn=e),ln)},movementY:function(e){return"movementY"in e?e.movementY:on}}),fn=an(pn),An=an(U({},pn,{dataTransfer:0})),gn=an(U({},mn,{relatedTarget:0})),hn=an(U({},cn,{animationName:0,elapsedTime:0,pseudoElement:0})),yn=U({},cn,{clipboardData:function(e){return"clipboardData"in e?e.clipboardData:window.clipboardData}}),vn=an(yn),En=an(U({},cn,{data:0})),Cn={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},bn={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},xn={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function wn(e){var t=this.nativeEvent;return t.getModifierState?t.getModifierState(e):!!(e=xn[e])&&!!t[e]}function kn(){return wn}var Bn=U({},mn,{key:function(e){if(e.key){var t=Cn[e.key]||e.key;if("Unidentified"!==t)return t}return"keypress"===e.type?13===(e=tn(e))?"Enter":String.fromCharCode(e):"keydown"===e.type||"keyup"===e.type?bn[e.keyCode]||"Unidentified":""},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:kn,charCode:function(e){return"keypress"===e.type?tn(e):0},keyCode:function(e){return"keydown"===e.type||"keyup"===e.type?e.keyCode:0},which:function(e){return"keypress"===e.type?tn(e):"keydown"===e.type||"keyup"===e.type?e.keyCode:0}}),Nn=an(Bn),Sn=an(U({},pn,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0})),Fn=an(U({},mn,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:kn})),Rn=an(U({},cn,{propertyName:0,elapsedTime:0,pseudoElement:0})),Ln=U({},pn,{deltaX:function(e){return"deltaX"in e?e.deltaX:"wheelDeltaX"in e?-e.wheelDeltaX:0},deltaY:function(e){return"deltaY"in e?e.deltaY:"wheelDeltaY"in e?-e.wheelDeltaY:"wheelDelta"in e?-e.wheelDelta:0},deltaZ:0,deltaMode:0}),Tn=an(Ln),Dn=[9,13,27,32],In=u&&"CompositionEvent"in window,zn=null;u&&"documentMode"in document&&(zn=document.documentMode);var Pn=u&&"TextEvent"in window&&!zn,Un=u&&(!In||zn&&8<zn&&11>=zn),_n=String.fromCharCode(32),$n=!1;function Mn(e,t){switch(e){case"keyup":return-1!==Dn.indexOf(t.keyCode);case"keydown":return 229!==t.keyCode;case"keypress":case"mousedown":case"focusout":return!0;default:return!1}}function On(e){return"object"==typeof(e=e.detail)&&"data"in e?e.data:null}var jn=!1,Gn={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function Hn(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return"input"===t?!!Gn[e.type]:"textarea"===t}function Wn(e,t,n,r){Be(r),0<(t=Kr(t,"onChange")).length&&(n=new un("onChange","change",null,n,r),e.push({event:n,listeners:t}))}var Kn=null,Qn=null;function Yn(e){_r(e,0)}function Vn(e){if(Q(Ea(e)))return e}function qn(e,t){if("change"===e)return t}var Xn=!1;if(u){var Jn;if(u){var Zn="oninput"in document;if(!Zn){var er=document.createElement("div");er.setAttribute("oninput","return;"),Zn="function"==typeof er.oninput}Jn=Zn}else Jn=!1;Xn=Jn&&(!document.documentMode||9<document.documentMode)}function tr(){Kn&&(Kn.detachEvent("onpropertychange",nr),Qn=Kn=null)}function nr(e){if("value"===e.propertyName&&Vn(Qn)){var t=[];Wn(t,Qn,e,Ce(e)),Le(Yn,t)}}function rr(e,t,n){"focusin"===e?(tr(),Qn=n,(Kn=t).attachEvent("onpropertychange",nr)):"focusout"===e&&tr()}function ar(e){if("selectionchange"===e||"keyup"===e||"keydown"===e)return Vn(Qn)}function lr(e,t){if("click"===e)return Vn(t)}function ir(e,t){if("input"===e||"change"===e)return Vn(t)}var or="function"==typeof Object.is?Object.is:function(e,t){return e===t&&(0!==e||1/e==1/t)||e!=e&&t!=t};function sr(e,t){if(or(e,t))return!0;if("object"!=typeof e||null===e||"object"!=typeof t||null===t)return!1;var n=Object.keys(e),r=Object.keys(t);if(n.length!==r.length)return!1;for(r=0;r<n.length;r++){var a=n[r];if(!m.call(t,a)||!or(e[a],t[a]))return!1}return!0}function cr(e){for(;e&&e.firstChild;)e=e.firstChild;return e}function ur(e,t){var n,r=cr(e);for(e=0;r;){if(3===r.nodeType){if(n=e+r.textContent.length,e<=t&&n>=t)return{node:r,offset:t-e};e=n}e:{for(;r;){if(r.nextSibling){r=r.nextSibling;break e}r=r.parentNode}r=void 0}r=cr(r)}}function mr(e,t){return!(!e||!t)&&(e===t||(!e||3!==e.nodeType)&&(t&&3===t.nodeType?mr(e,t.parentNode):"contains"in e?e.contains(t):!!e.compareDocumentPosition&&!!(16&e.compareDocumentPosition(t))))}function dr(){for(var e=window,t=Y();t instanceof e.HTMLIFrameElement;){try{var n="string"==typeof t.contentWindow.location.href}catch(e){n=!1}if(!n)break;t=Y((e=t.contentWindow).document)}return t}function pr(e){var t=e&&e.nodeName&&e.nodeName.toLowerCase();return t&&("input"===t&&("text"===e.type||"search"===e.type||"tel"===e.type||"url"===e.type||"password"===e.type)||"textarea"===t||"true"===e.contentEditable)}function fr(e){var t=dr(),n=e.focusedElem,r=e.selectionRange;if(t!==n&&n&&n.ownerDocument&&mr(n.ownerDocument.documentElement,n)){if(null!==r&&pr(n))if(t=r.start,void 0===(e=r.end)&&(e=t),"selectionStart"in n)n.selectionStart=t,n.selectionEnd=Math.min(e,n.value.length);else if((e=(t=n.ownerDocument||document)&&t.defaultView||window).getSelection){e=e.getSelection();var a=n.textContent.length,l=Math.min(r.start,a);r=void 0===r.end?l:Math.min(r.end,a),!e.extend&&l>r&&(a=r,r=l,l=a),a=ur(n,l);var i=ur(n,r);a&&i&&(1!==e.rangeCount||e.anchorNode!==a.node||e.anchorOffset!==a.offset||e.focusNode!==i.node||e.focusOffset!==i.offset)&&((t=t.createRange()).setStart(a.node,a.offset),e.removeAllRanges(),l>r?(e.addRange(t),e.extend(i.node,i.offset)):(t.setEnd(i.node,i.offset),e.addRange(t)))}for(t=[],e=n;e=e.parentNode;)1===e.nodeType&&t.push({element:e,left:e.scrollLeft,top:e.scrollTop});for("function"==typeof n.focus&&n.focus(),n=0;n<t.length;n++)(e=t[n]).element.scrollLeft=e.left,e.element.scrollTop=e.top}}var Ar=u&&"documentMode"in document&&11>=document.documentMode,gr=null,hr=null,yr=null,vr=!1;function Er(e,t,n){var r=n.window===n?n.document:9===n.nodeType?n:n.ownerDocument;vr||null==gr||gr!==Y(r)||(r="selectionStart"in(r=gr)&&pr(r)?{start:r.selectionStart,end:r.selectionEnd}:{anchorNode:(r=(r.ownerDocument&&r.ownerDocument.defaultView||window).getSelection()).anchorNode,anchorOffset:r.anchorOffset,focusNode:r.focusNode,focusOffset:r.focusOffset},yr&&sr(yr,r)||(yr=r,0<(r=Kr(hr,"onSelect")).length&&(t=new un("onSelect","select",null,t,n),e.push({event:t,listeners:r}),t.target=gr)))}function Cr(e,t){var n={};return n[e.toLowerCase()]=t.toLowerCase(),n["Webkit"+e]="webkit"+t,n["Moz"+e]="moz"+t,n}var br={animationend:Cr("Animation","AnimationEnd"),animationiteration:Cr("Animation","AnimationIteration"),animationstart:Cr("Animation","AnimationStart"),transitionend:Cr("Transition","TransitionEnd")},xr={},wr={};function kr(e){if(xr[e])return xr[e];if(!br[e])return e;var t,n=br[e];for(t in n)if(n.hasOwnProperty(t)&&t in wr)return xr[e]=n[t];return e}u&&(wr=document.createElement("div").style,"AnimationEvent"in window||(delete br.animationend.animation,delete br.animationiteration.animation,delete br.animationstart.animation),"TransitionEvent"in window||delete br.transitionend.transition);var Br=kr("animationend"),Nr=kr("animationiteration"),Sr=kr("animationstart"),Fr=kr("transitionend"),Rr=new Map,Lr="abort auxClick cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel".split(" ");function Tr(e,t){Rr.set(e,t),s(t,[e])}for(var Dr=0;Dr<Lr.length;Dr++){var Ir=Lr[Dr];Tr(Ir.toLowerCase(),"on"+(Ir[0].toUpperCase()+Ir.slice(1)))}Tr(Br,"onAnimationEnd"),Tr(Nr,"onAnimationIteration"),Tr(Sr,"onAnimationStart"),Tr("dblclick","onDoubleClick"),Tr("focusin","onFocus"),Tr("focusout","onBlur"),Tr(Fr,"onTransitionEnd"),c("onMouseEnter",["mouseout","mouseover"]),c("onMouseLeave",["mouseout","mouseover"]),c("onPointerEnter",["pointerout","pointerover"]),c("onPointerLeave",["pointerout","pointerover"]),s("onChange","change click focusin focusout input keydown keyup selectionchange".split(" ")),s("onSelect","focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" ")),s("onBeforeInput",["compositionend","keypress","textInput","paste"]),s("onCompositionEnd","compositionend focusout keydown keypress keyup mousedown".split(" ")),s("onCompositionStart","compositionstart focusout keydown keypress keyup mousedown".split(" ")),s("onCompositionUpdate","compositionupdate focusout keydown keypress keyup mousedown".split(" "));var zr="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),Pr=new Set("cancel close invalid load scroll toggle".split(" ").concat(zr));function Ur(e,t,n){var r=e.type||"unknown-event";e.currentTarget=n,function(e,t,n,r,a,i,o,s,c){if(Oe.apply(this,arguments),Pe){if(!Pe)throw Error(l(198));var u=Ue;Pe=!1,Ue=null,_e||(_e=!0,$e=u)}}(r,t,void 0,e),e.currentTarget=null}function _r(e,t){t=!!(4&t);for(var n=0;n<e.length;n++){var r=e[n],a=r.event;r=r.listeners;e:{var l=void 0;if(t)for(var i=r.length-1;0<=i;i--){var o=r[i],s=o.instance,c=o.currentTarget;if(o=o.listener,s!==l&&a.isPropagationStopped())break e;Ur(a,o,c),l=s}else for(i=0;i<r.length;i++){if(s=(o=r[i]).instance,c=o.currentTarget,o=o.listener,s!==l&&a.isPropagationStopped())break e;Ur(a,o,c),l=s}}}if(_e)throw e=$e,_e=!1,$e=null,e}function $r(e,t){var n=t[Aa];void 0===n&&(n=t[Aa]=new Set);var r=e+"__bubble";n.has(r)||(Gr(t,e,2,!1),n.add(r))}function Mr(e,t,n){var r=0;t&&(r|=4),Gr(n,e,r,t)}var Or="_reactListening"+Math.random().toString(36).slice(2);function jr(e){if(!e[Or]){e[Or]=!0,i.forEach((function(t){"selectionchange"!==t&&(Pr.has(t)||Mr(t,!1,e),Mr(t,!0,e))}));var t=9===e.nodeType?e:e.ownerDocument;null===t||t[Or]||(t[Or]=!0,Mr("selectionchange",!1,t))}}function Gr(e,t,n,r){switch(qt(t)){case 1:var a=Wt;break;case 4:a=Kt;break;default:a=Qt}n=a.bind(null,t,n,e),a=void 0,!De||"touchstart"!==t&&"touchmove"!==t&&"wheel"!==t||(a=!0),r?void 0!==a?e.addEventListener(t,n,{capture:!0,passive:a}):e.addEventListener(t,n,!0):void 0!==a?e.addEventListener(t,n,{passive:a}):e.addEventListener(t,n,!1)}function Hr(e,t,n,r,a){var l=r;if(!(1&t||2&t||null===r))e:for(;;){if(null===r)return;var i=r.tag;if(3===i||4===i){var o=r.stateNode.containerInfo;if(o===a||8===o.nodeType&&o.parentNode===a)break;if(4===i)for(i=r.return;null!==i;){var s=i.tag;if((3===s||4===s)&&((s=i.stateNode.containerInfo)===a||8===s.nodeType&&s.parentNode===a))return;i=i.return}for(;null!==o;){if(null===(i=ya(o)))return;if(5===(s=i.tag)||6===s){r=l=i;continue e}o=o.parentNode}}r=r.return}Le((function(){var r=l,a=Ce(n),i=[];e:{var o=Rr.get(e);if(void 0!==o){var s=un,c=e;switch(e){case"keypress":if(0===tn(n))break e;case"keydown":case"keyup":s=Nn;break;case"focusin":c="focus",s=gn;break;case"focusout":c="blur",s=gn;break;case"beforeblur":case"afterblur":s=gn;break;case"click":if(2===n.button)break e;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":s=fn;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":s=An;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":s=Fn;break;case Br:case Nr:case Sr:s=hn;break;case Fr:s=Rn;break;case"scroll":s=dn;break;case"wheel":s=Tn;break;case"copy":case"cut":case"paste":s=vn;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":s=Sn}var u=!!(4&t),m=!u&&"scroll"===e,d=u?null!==o?o+"Capture":null:o;u=[];for(var p,f=r;null!==f;){var A=(p=f).stateNode;if(5===p.tag&&null!==A&&(p=A,null!==d&&null!=(A=Te(f,d))&&u.push(Wr(f,A,p))),m)break;f=f.return}0<u.length&&(o=new s(o,c,null,n,a),i.push({event:o,listeners:u}))}}if(!(7&t)){if(s="mouseout"===e||"pointerout"===e,(!(o="mouseover"===e||"pointerover"===e)||n===Ee||!(c=n.relatedTarget||n.fromElement)||!ya(c)&&!c[fa])&&(s||o)&&(o=a.window===a?a:(o=a.ownerDocument)?o.defaultView||o.parentWindow:window,s?(s=r,null!==(c=(c=n.relatedTarget||n.toElement)?ya(c):null)&&(c!==(m=je(c))||5!==c.tag&&6!==c.tag)&&(c=null)):(s=null,c=r),s!==c)){if(u=fn,A="onMouseLeave",d="onMouseEnter",f="mouse","pointerout"!==e&&"pointerover"!==e||(u=Sn,A="onPointerLeave",d="onPointerEnter",f="pointer"),m=null==s?o:Ea(s),p=null==c?o:Ea(c),(o=new u(A,f+"leave",s,n,a)).target=m,o.relatedTarget=p,A=null,ya(a)===r&&((u=new u(d,f+"enter",c,n,a)).target=p,u.relatedTarget=m,A=u),m=A,s&&c)e:{for(d=c,f=0,p=u=s;p;p=Qr(p))f++;for(p=0,A=d;A;A=Qr(A))p++;for(;0<f-p;)u=Qr(u),f--;for(;0<p-f;)d=Qr(d),p--;for(;f--;){if(u===d||null!==d&&u===d.alternate)break e;u=Qr(u),d=Qr(d)}u=null}else u=null;null!==s&&Yr(i,o,s,u,!1),null!==c&&null!==m&&Yr(i,m,c,u,!0)}if("select"===(s=(o=r?Ea(r):window).nodeName&&o.nodeName.toLowerCase())||"input"===s&&"file"===o.type)var g=qn;else if(Hn(o))if(Xn)g=ir;else{g=ar;var h=rr}else(s=o.nodeName)&&"input"===s.toLowerCase()&&("checkbox"===o.type||"radio"===o.type)&&(g=lr);switch(g&&(g=g(e,r))?Wn(i,g,n,a):(h&&h(e,o,r),"focusout"===e&&(h=o._wrapperState)&&h.controlled&&"number"===o.type&&ee(o,"number",o.value)),h=r?Ea(r):window,e){case"focusin":(Hn(h)||"true"===h.contentEditable)&&(gr=h,hr=r,yr=null);break;case"focusout":yr=hr=gr=null;break;case"mousedown":vr=!0;break;case"contextmenu":case"mouseup":case"dragend":vr=!1,Er(i,n,a);break;case"selectionchange":if(Ar)break;case"keydown":case"keyup":Er(i,n,a)}var y;if(In)e:{switch(e){case"compositionstart":var v="onCompositionStart";break e;case"compositionend":v="onCompositionEnd";break e;case"compositionupdate":v="onCompositionUpdate";break e}v=void 0}else jn?Mn(e,n)&&(v="onCompositionEnd"):"keydown"===e&&229===n.keyCode&&(v="onCompositionStart");v&&(Un&&"ko"!==n.locale&&(jn||"onCompositionStart"!==v?"onCompositionEnd"===v&&jn&&(y=en()):(Jt="value"in(Xt=a)?Xt.value:Xt.textContent,jn=!0)),0<(h=Kr(r,v)).length&&(v=new En(v,e,null,n,a),i.push({event:v,listeners:h}),(y||null!==(y=On(n)))&&(v.data=y))),(y=Pn?function(e,t){switch(e){case"compositionend":return On(t);case"keypress":return 32!==t.which?null:($n=!0,_n);case"textInput":return(e=t.data)===_n&&$n?null:e;default:return null}}(e,n):function(e,t){if(jn)return"compositionend"===e||!In&&Mn(e,t)?(e=en(),Zt=Jt=Xt=null,jn=!1,e):null;switch(e){case"paste":default:return null;case"keypress":if(!(t.ctrlKey||t.altKey||t.metaKey)||t.ctrlKey&&t.altKey){if(t.char&&1<t.char.length)return t.char;if(t.which)return String.fromCharCode(t.which)}return null;case"compositionend":return Un&&"ko"!==t.locale?null:t.data}}(e,n))&&0<(r=Kr(r,"onBeforeInput")).length&&(a=new En("onBeforeInput","beforeinput",null,n,a),i.push({event:a,listeners:r}),a.data=y)}_r(i,t)}))}function Wr(e,t,n){return{instance:e,listener:t,currentTarget:n}}function Kr(e,t){for(var n=t+"Capture",r=[];null!==e;){var a=e,l=a.stateNode;5===a.tag&&null!==l&&(a=l,null!=(l=Te(e,n))&&r.unshift(Wr(e,l,a)),null!=(l=Te(e,t))&&r.push(Wr(e,l,a))),e=e.return}return r}function Qr(e){if(null===e)return null;do{e=e.return}while(e&&5!==e.tag);return e||null}function Yr(e,t,n,r,a){for(var l=t._reactName,i=[];null!==n&&n!==r;){var o=n,s=o.alternate,c=o.stateNode;if(null!==s&&s===r)break;5===o.tag&&null!==c&&(o=c,a?null!=(s=Te(n,l))&&i.unshift(Wr(n,s,o)):a||null!=(s=Te(n,l))&&i.push(Wr(n,s,o))),n=n.return}0!==i.length&&e.push({event:t,listeners:i})}var Vr=/\r\n?/g,qr=/\u0000|\uFFFD/g;function Xr(e){return("string"==typeof e?e:""+e).replace(Vr,"\n").replace(qr,"")}function Jr(e,t,n){if(t=Xr(t),Xr(e)!==t&&n)throw Error(l(425))}function Zr(){}var ea=null,ta=null;function na(e,t){return"textarea"===e||"noscript"===e||"string"==typeof t.children||"number"==typeof t.children||"object"==typeof t.dangerouslySetInnerHTML&&null!==t.dangerouslySetInnerHTML&&null!=t.dangerouslySetInnerHTML.__html}var ra="function"==typeof setTimeout?setTimeout:void 0,aa="function"==typeof clearTimeout?clearTimeout:void 0,la="function"==typeof Promise?Promise:void 0,ia="function"==typeof queueMicrotask?queueMicrotask:void 0!==la?function(e){return la.resolve(null).then(e).catch(oa)}:ra;function oa(e){setTimeout((function(){throw e}))}function sa(e,t){var n=t,r=0;do{var a=n.nextSibling;if(e.removeChild(n),a&&8===a.nodeType)if("/$"===(n=a.data)){if(0===r)return e.removeChild(a),void jt(t);r--}else"$"!==n&&"$?"!==n&&"$!"!==n||r++;n=a}while(n);jt(t)}function ca(e){for(;null!=e;e=e.nextSibling){var t=e.nodeType;if(1===t||3===t)break;if(8===t){if("$"===(t=e.data)||"$!"===t||"$?"===t)break;if("/$"===t)return null}}return e}function ua(e){e=e.previousSibling;for(var t=0;e;){if(8===e.nodeType){var n=e.data;if("$"===n||"$!"===n||"$?"===n){if(0===t)return e;t--}else"/$"===n&&t++}e=e.previousSibling}return null}var ma=Math.random().toString(36).slice(2),da="__reactFiber$"+ma,pa="__reactProps$"+ma,fa="__reactContainer$"+ma,Aa="__reactEvents$"+ma,ga="__reactListeners$"+ma,ha="__reactHandles$"+ma;function ya(e){var t=e[da];if(t)return t;for(var n=e.parentNode;n;){if(t=n[fa]||n[da]){if(n=t.alternate,null!==t.child||null!==n&&null!==n.child)for(e=ua(e);null!==e;){if(n=e[da])return n;e=ua(e)}return t}n=(e=n).parentNode}return null}function va(e){return!(e=e[da]||e[fa])||5!==e.tag&&6!==e.tag&&13!==e.tag&&3!==e.tag?null:e}function Ea(e){if(5===e.tag||6===e.tag)return e.stateNode;throw Error(l(33))}function Ca(e){return e[pa]||null}var ba=[],xa=-1;function wa(e){return{current:e}}function ka(e){0>xa||(e.current=ba[xa],ba[xa]=null,xa--)}function Ba(e,t){xa++,ba[xa]=e.current,e.current=t}var Na={},Sa=wa(Na),Fa=wa(!1),Ra=Na;function La(e,t){var n=e.type.contextTypes;if(!n)return Na;var r=e.stateNode;if(r&&r.__reactInternalMemoizedUnmaskedChildContext===t)return r.__reactInternalMemoizedMaskedChildContext;var a,l={};for(a in n)l[a]=t[a];return r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=t,e.__reactInternalMemoizedMaskedChildContext=l),l}function Ta(e){return null!=e.childContextTypes}function Da(){ka(Fa),ka(Sa)}function Ia(e,t,n){if(Sa.current!==Na)throw Error(l(168));Ba(Sa,t),Ba(Fa,n)}function za(e,t,n){var r=e.stateNode;if(t=t.childContextTypes,"function"!=typeof r.getChildContext)return n;for(var a in r=r.getChildContext())if(!(a in t))throw Error(l(108,G(e)||"Unknown",a));return U({},n,r)}function Pa(e){return e=(e=e.stateNode)&&e.__reactInternalMemoizedMergedChildContext||Na,Ra=Sa.current,Ba(Sa,e),Ba(Fa,Fa.current),!0}function Ua(e,t,n){var r=e.stateNode;if(!r)throw Error(l(169));n?(e=za(e,t,Ra),r.__reactInternalMemoizedMergedChildContext=e,ka(Fa),ka(Sa),Ba(Sa,e)):ka(Fa),Ba(Fa,n)}var _a=null,$a=!1,Ma=!1;function Oa(e){null===_a?_a=[e]:_a.push(e)}function ja(){if(!Ma&&null!==_a){Ma=!0;var e=0,t=vt;try{var n=_a;for(vt=1;e<n.length;e++){var r=n[e];do{r=r(!0)}while(null!==r)}_a=null,$a=!1}catch(t){throw null!==_a&&(_a=_a.slice(e+1)),Qe(Ze,ja),t}finally{vt=t,Ma=!1}}return null}var Ga=[],Ha=0,Wa=null,Ka=0,Qa=[],Ya=0,Va=null,qa=1,Xa="";function Ja(e,t){Ga[Ha++]=Ka,Ga[Ha++]=Wa,Wa=e,Ka=t}function Za(e,t,n){Qa[Ya++]=qa,Qa[Ya++]=Xa,Qa[Ya++]=Va,Va=e;var r=qa;e=Xa;var a=32-it(r)-1;r&=~(1<<a),n+=1;var l=32-it(t)+a;if(30<l){var i=a-a%5;l=(r&(1<<i)-1).toString(32),r>>=i,a-=i,qa=1<<32-it(t)+a|n<<a|r,Xa=l+e}else qa=1<<l|n<<a|r,Xa=e}function el(e){null!==e.return&&(Ja(e,1),Za(e,1,0))}function tl(e){for(;e===Wa;)Wa=Ga[--Ha],Ga[Ha]=null,Ka=Ga[--Ha],Ga[Ha]=null;for(;e===Va;)Va=Qa[--Ya],Qa[Ya]=null,Xa=Qa[--Ya],Qa[Ya]=null,qa=Qa[--Ya],Qa[Ya]=null}var nl=null,rl=null,al=!1,ll=null;function il(e,t){var n=Lc(5,null,null,0);n.elementType="DELETED",n.stateNode=t,n.return=e,null===(t=e.deletions)?(e.deletions=[n],e.flags|=16):t.push(n)}function ol(e,t){switch(e.tag){case 5:var n=e.type;return null!==(t=1!==t.nodeType||n.toLowerCase()!==t.nodeName.toLowerCase()?null:t)&&(e.stateNode=t,nl=e,rl=ca(t.firstChild),!0);case 6:return null!==(t=""===e.pendingProps||3!==t.nodeType?null:t)&&(e.stateNode=t,nl=e,rl=null,!0);case 13:return null!==(t=8!==t.nodeType?null:t)&&(n=null!==Va?{id:qa,overflow:Xa}:null,e.memoizedState={dehydrated:t,treeContext:n,retryLane:1073741824},(n=Lc(18,null,null,0)).stateNode=t,n.return=e,e.child=n,nl=e,rl=null,!0);default:return!1}}function sl(e){return!(!(1&e.mode)||128&e.flags)}function cl(e){if(al){var t=rl;if(t){var n=t;if(!ol(e,t)){if(sl(e))throw Error(l(418));t=ca(n.nextSibling);var r=nl;t&&ol(e,t)?il(r,n):(e.flags=-4097&e.flags|2,al=!1,nl=e)}}else{if(sl(e))throw Error(l(418));e.flags=-4097&e.flags|2,al=!1,nl=e}}}function ul(e){for(e=e.return;null!==e&&5!==e.tag&&3!==e.tag&&13!==e.tag;)e=e.return;nl=e}function ml(e){if(e!==nl)return!1;if(!al)return ul(e),al=!0,!1;var t;if((t=3!==e.tag)&&!(t=5!==e.tag)&&(t="head"!==(t=e.type)&&"body"!==t&&!na(e.type,e.memoizedProps)),t&&(t=rl)){if(sl(e))throw dl(),Error(l(418));for(;t;)il(e,t),t=ca(t.nextSibling)}if(ul(e),13===e.tag){if(!(e=null!==(e=e.memoizedState)?e.dehydrated:null))throw Error(l(317));e:{for(e=e.nextSibling,t=0;e;){if(8===e.nodeType){var n=e.data;if("/$"===n){if(0===t){rl=ca(e.nextSibling);break e}t--}else"$"!==n&&"$!"!==n&&"$?"!==n||t++}e=e.nextSibling}rl=null}}else rl=nl?ca(e.stateNode.nextSibling):null;return!0}function dl(){for(var e=rl;e;)e=ca(e.nextSibling)}function pl(){rl=nl=null,al=!1}function fl(e){null===ll?ll=[e]:ll.push(e)}var Al=E.ReactCurrentBatchConfig;function gl(e,t,n){if(null!==(e=n.ref)&&"function"!=typeof e&&"object"!=typeof e){if(n._owner){if(n=n._owner){if(1!==n.tag)throw Error(l(309));var r=n.stateNode}if(!r)throw Error(l(147,e));var a=r,i=""+e;return null!==t&&null!==t.ref&&"function"==typeof t.ref&&t.ref._stringRef===i?t.ref:(t=function(e){var t=a.refs;null===e?delete t[i]:t[i]=e},t._stringRef=i,t)}if("string"!=typeof e)throw Error(l(284));if(!n._owner)throw Error(l(290,e))}return e}function hl(e,t){throw e=Object.prototype.toString.call(t),Error(l(31,"[object Object]"===e?"object with keys {"+Object.keys(t).join(", ")+"}":e))}function yl(e){return(0,e._init)(e._payload)}function vl(e){function t(t,n){if(e){var r=t.deletions;null===r?(t.deletions=[n],t.flags|=16):r.push(n)}}function n(n,r){if(!e)return null;for(;null!==r;)t(n,r),r=r.sibling;return null}function r(e,t){for(e=new Map;null!==t;)null!==t.key?e.set(t.key,t):e.set(t.index,t),t=t.sibling;return e}function a(e,t){return(e=Dc(e,t)).index=0,e.sibling=null,e}function i(t,n,r){return t.index=r,e?null!==(r=t.alternate)?(r=r.index)<n?(t.flags|=2,n):r:(t.flags|=2,n):(t.flags|=1048576,n)}function o(t){return e&&null===t.alternate&&(t.flags|=2),t}function s(e,t,n,r){return null===t||6!==t.tag?((t=Uc(n,e.mode,r)).return=e,t):((t=a(t,n)).return=e,t)}function c(e,t,n,r){var l=n.type;return l===x?m(e,t,n.props.children,r,n.key):null!==t&&(t.elementType===l||"object"==typeof l&&null!==l&&l.$$typeof===T&&yl(l)===t.type)?((r=a(t,n.props)).ref=gl(e,t,n),r.return=e,r):((r=Ic(n.type,n.key,n.props,null,e.mode,r)).ref=gl(e,t,n),r.return=e,r)}function u(e,t,n,r){return null===t||4!==t.tag||t.stateNode.containerInfo!==n.containerInfo||t.stateNode.implementation!==n.implementation?((t=_c(n,e.mode,r)).return=e,t):((t=a(t,n.children||[])).return=e,t)}function m(e,t,n,r,l){return null===t||7!==t.tag?((t=zc(n,e.mode,r,l)).return=e,t):((t=a(t,n)).return=e,t)}function d(e,t,n){if("string"==typeof t&&""!==t||"number"==typeof t)return(t=Uc(""+t,e.mode,n)).return=e,t;if("object"==typeof t&&null!==t){switch(t.$$typeof){case C:return(n=Ic(t.type,t.key,t.props,null,e.mode,n)).ref=gl(e,null,t),n.return=e,n;case b:return(t=_c(t,e.mode,n)).return=e,t;case T:return d(e,(0,t._init)(t._payload),n)}if(te(t)||z(t))return(t=zc(t,e.mode,n,null)).return=e,t;hl(e,t)}return null}function p(e,t,n,r){var a=null!==t?t.key:null;if("string"==typeof n&&""!==n||"number"==typeof n)return null!==a?null:s(e,t,""+n,r);if("object"==typeof n&&null!==n){switch(n.$$typeof){case C:return n.key===a?c(e,t,n,r):null;case b:return n.key===a?u(e,t,n,r):null;case T:return p(e,t,(a=n._init)(n._payload),r)}if(te(n)||z(n))return null!==a?null:m(e,t,n,r,null);hl(e,n)}return null}function f(e,t,n,r,a){if("string"==typeof r&&""!==r||"number"==typeof r)return s(t,e=e.get(n)||null,""+r,a);if("object"==typeof r&&null!==r){switch(r.$$typeof){case C:return c(t,e=e.get(null===r.key?n:r.key)||null,r,a);case b:return u(t,e=e.get(null===r.key?n:r.key)||null,r,a);case T:return f(e,t,n,(0,r._init)(r._payload),a)}if(te(r)||z(r))return m(t,e=e.get(n)||null,r,a,null);hl(t,r)}return null}function A(a,l,o,s){for(var c=null,u=null,m=l,A=l=0,g=null;null!==m&&A<o.length;A++){m.index>A?(g=m,m=null):g=m.sibling;var h=p(a,m,o[A],s);if(null===h){null===m&&(m=g);break}e&&m&&null===h.alternate&&t(a,m),l=i(h,l,A),null===u?c=h:u.sibling=h,u=h,m=g}if(A===o.length)return n(a,m),al&&Ja(a,A),c;if(null===m){for(;A<o.length;A++)null!==(m=d(a,o[A],s))&&(l=i(m,l,A),null===u?c=m:u.sibling=m,u=m);return al&&Ja(a,A),c}for(m=r(a,m);A<o.length;A++)null!==(g=f(m,a,A,o[A],s))&&(e&&null!==g.alternate&&m.delete(null===g.key?A:g.key),l=i(g,l,A),null===u?c=g:u.sibling=g,u=g);return e&&m.forEach((function(e){return t(a,e)})),al&&Ja(a,A),c}function g(a,o,s,c){var u=z(s);if("function"!=typeof u)throw Error(l(150));if(null==(s=u.call(s)))throw Error(l(151));for(var m=u=null,A=o,g=o=0,h=null,y=s.next();null!==A&&!y.done;g++,y=s.next()){A.index>g?(h=A,A=null):h=A.sibling;var v=p(a,A,y.value,c);if(null===v){null===A&&(A=h);break}e&&A&&null===v.alternate&&t(a,A),o=i(v,o,g),null===m?u=v:m.sibling=v,m=v,A=h}if(y.done)return n(a,A),al&&Ja(a,g),u;if(null===A){for(;!y.done;g++,y=s.next())null!==(y=d(a,y.value,c))&&(o=i(y,o,g),null===m?u=y:m.sibling=y,m=y);return al&&Ja(a,g),u}for(A=r(a,A);!y.done;g++,y=s.next())null!==(y=f(A,a,g,y.value,c))&&(e&&null!==y.alternate&&A.delete(null===y.key?g:y.key),o=i(y,o,g),null===m?u=y:m.sibling=y,m=y);return e&&A.forEach((function(e){return t(a,e)})),al&&Ja(a,g),u}return function e(r,l,i,s){if("object"==typeof i&&null!==i&&i.type===x&&null===i.key&&(i=i.props.children),"object"==typeof i&&null!==i){switch(i.$$typeof){case C:e:{for(var c=i.key,u=l;null!==u;){if(u.key===c){if((c=i.type)===x){if(7===u.tag){n(r,u.sibling),(l=a(u,i.props.children)).return=r,r=l;break e}}else if(u.elementType===c||"object"==typeof c&&null!==c&&c.$$typeof===T&&yl(c)===u.type){n(r,u.sibling),(l=a(u,i.props)).ref=gl(r,u,i),l.return=r,r=l;break e}n(r,u);break}t(r,u),u=u.sibling}i.type===x?((l=zc(i.props.children,r.mode,s,i.key)).return=r,r=l):((s=Ic(i.type,i.key,i.props,null,r.mode,s)).ref=gl(r,l,i),s.return=r,r=s)}return o(r);case b:e:{for(u=i.key;null!==l;){if(l.key===u){if(4===l.tag&&l.stateNode.containerInfo===i.containerInfo&&l.stateNode.implementation===i.implementation){n(r,l.sibling),(l=a(l,i.children||[])).return=r,r=l;break e}n(r,l);break}t(r,l),l=l.sibling}(l=_c(i,r.mode,s)).return=r,r=l}return o(r);case T:return e(r,l,(u=i._init)(i._payload),s)}if(te(i))return A(r,l,i,s);if(z(i))return g(r,l,i,s);hl(r,i)}return"string"==typeof i&&""!==i||"number"==typeof i?(i=""+i,null!==l&&6===l.tag?(n(r,l.sibling),(l=a(l,i)).return=r,r=l):(n(r,l),(l=Uc(i,r.mode,s)).return=r,r=l),o(r)):n(r,l)}}var El=vl(!0),Cl=vl(!1),bl=wa(null),xl=null,wl=null,kl=null;function Bl(){kl=wl=xl=null}function Nl(e){var t=bl.current;ka(bl),e._currentValue=t}function Sl(e,t,n){for(;null!==e;){var r=e.alternate;if((e.childLanes&t)!==t?(e.childLanes|=t,null!==r&&(r.childLanes|=t)):null!==r&&(r.childLanes&t)!==t&&(r.childLanes|=t),e===n)break;e=e.return}}function Fl(e,t){xl=e,kl=wl=null,null!==(e=e.dependencies)&&null!==e.firstContext&&(!!(e.lanes&t)&&(vo=!0),e.firstContext=null)}function Rl(e){var t=e._currentValue;if(kl!==e)if(e={context:e,memoizedValue:t,next:null},null===wl){if(null===xl)throw Error(l(308));wl=e,xl.dependencies={lanes:0,firstContext:e}}else wl=wl.next=e;return t}var Ll=null;function Tl(e){null===Ll?Ll=[e]:Ll.push(e)}function Dl(e,t,n,r){var a=t.interleaved;return null===a?(n.next=n,Tl(t)):(n.next=a.next,a.next=n),t.interleaved=n,Il(e,r)}function Il(e,t){e.lanes|=t;var n=e.alternate;for(null!==n&&(n.lanes|=t),n=e,e=e.return;null!==e;)e.childLanes|=t,null!==(n=e.alternate)&&(n.childLanes|=t),n=e,e=e.return;return 3===n.tag?n.stateNode:null}var zl=!1;function Pl(e){e.updateQueue={baseState:e.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null,interleaved:null,lanes:0},effects:null}}function Ul(e,t){e=e.updateQueue,t.updateQueue===e&&(t.updateQueue={baseState:e.baseState,firstBaseUpdate:e.firstBaseUpdate,lastBaseUpdate:e.lastBaseUpdate,shared:e.shared,effects:e.effects})}function _l(e,t){return{eventTime:e,lane:t,tag:0,payload:null,callback:null,next:null}}function $l(e,t,n){var r=e.updateQueue;if(null===r)return null;if(r=r.shared,2&Ss){var a=r.pending;return null===a?t.next=t:(t.next=a.next,a.next=t),r.pending=t,Il(e,n)}return null===(a=r.interleaved)?(t.next=t,Tl(r)):(t.next=a.next,a.next=t),r.interleaved=t,Il(e,n)}function Ml(e,t,n){if(null!==(t=t.updateQueue)&&(t=t.shared,4194240&n)){var r=t.lanes;n|=r&=e.pendingLanes,t.lanes=n,yt(e,n)}}function Ol(e,t){var n=e.updateQueue,r=e.alternate;if(null!==r&&n===(r=r.updateQueue)){var a=null,l=null;if(null!==(n=n.firstBaseUpdate)){do{var i={eventTime:n.eventTime,lane:n.lane,tag:n.tag,payload:n.payload,callback:n.callback,next:null};null===l?a=l=i:l=l.next=i,n=n.next}while(null!==n);null===l?a=l=t:l=l.next=t}else a=l=t;return n={baseState:r.baseState,firstBaseUpdate:a,lastBaseUpdate:l,shared:r.shared,effects:r.effects},void(e.updateQueue=n)}null===(e=n.lastBaseUpdate)?n.firstBaseUpdate=t:e.next=t,n.lastBaseUpdate=t}function jl(e,t,n,r){var a=e.updateQueue;zl=!1;var l=a.firstBaseUpdate,i=a.lastBaseUpdate,o=a.shared.pending;if(null!==o){a.shared.pending=null;var s=o,c=s.next;s.next=null,null===i?l=c:i.next=c,i=s;var u=e.alternate;null!==u&&(o=(u=u.updateQueue).lastBaseUpdate)!==i&&(null===o?u.firstBaseUpdate=c:o.next=c,u.lastBaseUpdate=s)}if(null!==l){var m=a.baseState;for(i=0,u=c=s=null,o=l;;){var d=o.lane,p=o.eventTime;if((r&d)===d){null!==u&&(u=u.next={eventTime:p,lane:0,tag:o.tag,payload:o.payload,callback:o.callback,next:null});e:{var f=e,A=o;switch(d=t,p=n,A.tag){case 1:if("function"==typeof(f=A.payload)){m=f.call(p,m,d);break e}m=f;break e;case 3:f.flags=-65537&f.flags|128;case 0:if(null==(d="function"==typeof(f=A.payload)?f.call(p,m,d):f))break e;m=U({},m,d);break e;case 2:zl=!0}}null!==o.callback&&0!==o.lane&&(e.flags|=64,null===(d=a.effects)?a.effects=[o]:d.push(o))}else p={eventTime:p,lane:d,tag:o.tag,payload:o.payload,callback:o.callback,next:null},null===u?(c=u=p,s=m):u=u.next=p,i|=d;if(null===(o=o.next)){if(null===(o=a.shared.pending))break;o=(d=o).next,d.next=null,a.lastBaseUpdate=d,a.shared.pending=null}}if(null===u&&(s=m),a.baseState=s,a.firstBaseUpdate=c,a.lastBaseUpdate=u,null!==(t=a.shared.interleaved)){a=t;do{i|=a.lane,a=a.next}while(a!==t)}else null===l&&(a.shared.lanes=0);Ps|=i,e.lanes=i,e.memoizedState=m}}function Gl(e,t,n){if(e=t.effects,t.effects=null,null!==e)for(t=0;t<e.length;t++){var r=e[t],a=r.callback;if(null!==a){if(r.callback=null,r=n,"function"!=typeof a)throw Error(l(191,a));a.call(r)}}}var Hl={},Wl=wa(Hl),Kl=wa(Hl),Ql=wa(Hl);function Yl(e){if(e===Hl)throw Error(l(174));return e}function Vl(e,t){switch(Ba(Ql,t),Ba(Kl,e),Ba(Wl,Hl),e=t.nodeType){case 9:case 11:t=(t=t.documentElement)?t.namespaceURI:se(null,"");break;default:t=se(t=(e=8===e?t.parentNode:t).namespaceURI||null,e=e.tagName)}ka(Wl),Ba(Wl,t)}function ql(){ka(Wl),ka(Kl),ka(Ql)}function Xl(e){Yl(Ql.current);var t=Yl(Wl.current),n=se(t,e.type);t!==n&&(Ba(Kl,e),Ba(Wl,n))}function Jl(e){Kl.current===e&&(ka(Wl),ka(Kl))}var Zl=wa(0);function ei(e){for(var t=e;null!==t;){if(13===t.tag){var n=t.memoizedState;if(null!==n&&(null===(n=n.dehydrated)||"$?"===n.data||"$!"===n.data))return t}else if(19===t.tag&&void 0!==t.memoizedProps.revealOrder){if(128&t.flags)return t}else if(null!==t.child){t.child.return=t,t=t.child;continue}if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return null;t=t.return}t.sibling.return=t.return,t=t.sibling}return null}var ti=[];function ni(){for(var e=0;e<ti.length;e++)ti[e]._workInProgressVersionPrimary=null;ti.length=0}var ri=E.ReactCurrentDispatcher,ai=E.ReactCurrentBatchConfig,li=0,ii=null,oi=null,si=null,ci=!1,ui=!1,mi=0,di=0;function pi(){throw Error(l(321))}function fi(e,t){if(null===t)return!1;for(var n=0;n<t.length&&n<e.length;n++)if(!or(e[n],t[n]))return!1;return!0}function Ai(e,t,n,r,a,i){if(li=i,ii=t,t.memoizedState=null,t.updateQueue=null,t.lanes=0,ri.current=null===e||null===e.memoizedState?Ji:Zi,e=n(r,a),ui){i=0;do{if(ui=!1,mi=0,25<=i)throw Error(l(301));i+=1,si=oi=null,t.updateQueue=null,ri.current=eo,e=n(r,a)}while(ui)}if(ri.current=Xi,t=null!==oi&&null!==oi.next,li=0,si=oi=ii=null,ci=!1,t)throw Error(l(300));return e}function gi(){var e=0!==mi;return mi=0,e}function hi(){var e={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return null===si?ii.memoizedState=si=e:si=si.next=e,si}function yi(){if(null===oi){var e=ii.alternate;e=null!==e?e.memoizedState:null}else e=oi.next;var t=null===si?ii.memoizedState:si.next;if(null!==t)si=t,oi=e;else{if(null===e)throw Error(l(310));e={memoizedState:(oi=e).memoizedState,baseState:oi.baseState,baseQueue:oi.baseQueue,queue:oi.queue,next:null},null===si?ii.memoizedState=si=e:si=si.next=e}return si}function vi(e,t){return"function"==typeof t?t(e):t}function Ei(e){var t=yi(),n=t.queue;if(null===n)throw Error(l(311));n.lastRenderedReducer=e;var r=oi,a=r.baseQueue,i=n.pending;if(null!==i){if(null!==a){var o=a.next;a.next=i.next,i.next=o}r.baseQueue=a=i,n.pending=null}if(null!==a){i=a.next,r=r.baseState;var s=o=null,c=null,u=i;do{var m=u.lane;if((li&m)===m)null!==c&&(c=c.next={lane:0,action:u.action,hasEagerState:u.hasEagerState,eagerState:u.eagerState,next:null}),r=u.hasEagerState?u.eagerState:e(r,u.action);else{var d={lane:m,action:u.action,hasEagerState:u.hasEagerState,eagerState:u.eagerState,next:null};null===c?(s=c=d,o=r):c=c.next=d,ii.lanes|=m,Ps|=m}u=u.next}while(null!==u&&u!==i);null===c?o=r:c.next=s,or(r,t.memoizedState)||(vo=!0),t.memoizedState=r,t.baseState=o,t.baseQueue=c,n.lastRenderedState=r}if(null!==(e=n.interleaved)){a=e;do{i=a.lane,ii.lanes|=i,Ps|=i,a=a.next}while(a!==e)}else null===a&&(n.lanes=0);return[t.memoizedState,n.dispatch]}function Ci(e){var t=yi(),n=t.queue;if(null===n)throw Error(l(311));n.lastRenderedReducer=e;var r=n.dispatch,a=n.pending,i=t.memoizedState;if(null!==a){n.pending=null;var o=a=a.next;do{i=e(i,o.action),o=o.next}while(o!==a);or(i,t.memoizedState)||(vo=!0),t.memoizedState=i,null===t.baseQueue&&(t.baseState=i),n.lastRenderedState=i}return[i,r]}function bi(){}function xi(e,t){var n=ii,r=yi(),a=t(),i=!or(r.memoizedState,a);if(i&&(r.memoizedState=a,vo=!0),r=r.queue,zi(Bi.bind(null,n,r,e),[e]),r.getSnapshot!==t||i||null!==si&&1&si.memoizedState.tag){if(n.flags|=2048,Ri(9,ki.bind(null,n,r,a,t),void 0,null),null===Fs)throw Error(l(349));30&li||wi(n,t,a)}return a}function wi(e,t,n){e.flags|=16384,e={getSnapshot:t,value:n},null===(t=ii.updateQueue)?(t={lastEffect:null,stores:null},ii.updateQueue=t,t.stores=[e]):null===(n=t.stores)?t.stores=[e]:n.push(e)}function ki(e,t,n,r){t.value=n,t.getSnapshot=r,Ni(t)&&Si(e)}function Bi(e,t,n){return n((function(){Ni(t)&&Si(e)}))}function Ni(e){var t=e.getSnapshot;e=e.value;try{var n=t();return!or(e,n)}catch(e){return!0}}function Si(e){var t=Il(e,1);null!==t&&nc(t,e,1,-1)}function Fi(e){var t=hi();return"function"==typeof e&&(e=e()),t.memoizedState=t.baseState=e,e={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:vi,lastRenderedState:e},t.queue=e,e=e.dispatch=Qi.bind(null,ii,e),[t.memoizedState,e]}function Ri(e,t,n,r){return e={tag:e,create:t,destroy:n,deps:r,next:null},null===(t=ii.updateQueue)?(t={lastEffect:null,stores:null},ii.updateQueue=t,t.lastEffect=e.next=e):null===(n=t.lastEffect)?t.lastEffect=e.next=e:(r=n.next,n.next=e,e.next=r,t.lastEffect=e),e}function Li(){return yi().memoizedState}function Ti(e,t,n,r){var a=hi();ii.flags|=e,a.memoizedState=Ri(1|t,n,void 0,void 0===r?null:r)}function Di(e,t,n,r){var a=yi();r=void 0===r?null:r;var l=void 0;if(null!==oi){var i=oi.memoizedState;if(l=i.destroy,null!==r&&fi(r,i.deps))return void(a.memoizedState=Ri(t,n,l,r))}ii.flags|=e,a.memoizedState=Ri(1|t,n,l,r)}function Ii(e,t){return Ti(8390656,8,e,t)}function zi(e,t){return Di(2048,8,e,t)}function Pi(e,t){return Di(4,2,e,t)}function Ui(e,t){return Di(4,4,e,t)}function _i(e,t){return"function"==typeof t?(e=e(),t(e),function(){t(null)}):null!=t?(e=e(),t.current=e,function(){t.current=null}):void 0}function $i(e,t,n){return n=null!=n?n.concat([e]):null,Di(4,4,_i.bind(null,t,e),n)}function Mi(){}function Oi(e,t){var n=yi();t=void 0===t?null:t;var r=n.memoizedState;return null!==r&&null!==t&&fi(t,r[1])?r[0]:(n.memoizedState=[e,t],e)}function ji(e,t){var n=yi();t=void 0===t?null:t;var r=n.memoizedState;return null!==r&&null!==t&&fi(t,r[1])?r[0]:(e=e(),n.memoizedState=[e,t],e)}function Gi(e,t,n){return 21&li?(or(n,t)||(n=At(),ii.lanes|=n,Ps|=n,e.baseState=!0),t):(e.baseState&&(e.baseState=!1,vo=!0),e.memoizedState=n)}function Hi(e,t){var n=vt;vt=0!==n&&4>n?n:4,e(!0);var r=ai.transition;ai.transition={};try{e(!1),t()}finally{vt=n,ai.transition=r}}function Wi(){return yi().memoizedState}function Ki(e,t,n){var r=tc(e);n={lane:r,action:n,hasEagerState:!1,eagerState:null,next:null},Yi(e)?Vi(t,n):null!==(n=Dl(e,t,n,r))&&(nc(n,e,r,ec()),qi(n,t,r))}function Qi(e,t,n){var r=tc(e),a={lane:r,action:n,hasEagerState:!1,eagerState:null,next:null};if(Yi(e))Vi(t,a);else{var l=e.alternate;if(0===e.lanes&&(null===l||0===l.lanes)&&null!==(l=t.lastRenderedReducer))try{var i=t.lastRenderedState,o=l(i,n);if(a.hasEagerState=!0,a.eagerState=o,or(o,i)){var s=t.interleaved;return null===s?(a.next=a,Tl(t)):(a.next=s.next,s.next=a),void(t.interleaved=a)}}catch(e){}null!==(n=Dl(e,t,a,r))&&(nc(n,e,r,a=ec()),qi(n,t,r))}}function Yi(e){var t=e.alternate;return e===ii||null!==t&&t===ii}function Vi(e,t){ui=ci=!0;var n=e.pending;null===n?t.next=t:(t.next=n.next,n.next=t),e.pending=t}function qi(e,t,n){if(4194240&n){var r=t.lanes;n|=r&=e.pendingLanes,t.lanes=n,yt(e,n)}}var Xi={readContext:Rl,useCallback:pi,useContext:pi,useEffect:pi,useImperativeHandle:pi,useInsertionEffect:pi,useLayoutEffect:pi,useMemo:pi,useReducer:pi,useRef:pi,useState:pi,useDebugValue:pi,useDeferredValue:pi,useTransition:pi,useMutableSource:pi,useSyncExternalStore:pi,useId:pi,unstable_isNewReconciler:!1},Ji={readContext:Rl,useCallback:function(e,t){return hi().memoizedState=[e,void 0===t?null:t],e},useContext:Rl,useEffect:Ii,useImperativeHandle:function(e,t,n){return n=null!=n?n.concat([e]):null,Ti(4194308,4,_i.bind(null,t,e),n)},useLayoutEffect:function(e,t){return Ti(4194308,4,e,t)},useInsertionEffect:function(e,t){return Ti(4,2,e,t)},useMemo:function(e,t){var n=hi();return t=void 0===t?null:t,e=e(),n.memoizedState=[e,t],e},useReducer:function(e,t,n){var r=hi();return t=void 0!==n?n(t):t,r.memoizedState=r.baseState=t,e={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:e,lastRenderedState:t},r.queue=e,e=e.dispatch=Ki.bind(null,ii,e),[r.memoizedState,e]},useRef:function(e){return e={current:e},hi().memoizedState=e},useState:Fi,useDebugValue:Mi,useDeferredValue:function(e){return hi().memoizedState=e},useTransition:function(){var e=Fi(!1),t=e[0];return e=Hi.bind(null,e[1]),hi().memoizedState=e,[t,e]},useMutableSource:function(){},useSyncExternalStore:function(e,t,n){var r=ii,a=hi();if(al){if(void 0===n)throw Error(l(407));n=n()}else{if(n=t(),null===Fs)throw Error(l(349));30&li||wi(r,t,n)}a.memoizedState=n;var i={value:n,getSnapshot:t};return a.queue=i,Ii(Bi.bind(null,r,i,e),[e]),r.flags|=2048,Ri(9,ki.bind(null,r,i,n,t),void 0,null),n},useId:function(){var e=hi(),t=Fs.identifierPrefix;if(al){var n=Xa;t=":"+t+"R"+(n=(qa&~(1<<32-it(qa)-1)).toString(32)+n),0<(n=mi++)&&(t+="H"+n.toString(32)),t+=":"}else t=":"+t+"r"+(n=di++).toString(32)+":";return e.memoizedState=t},unstable_isNewReconciler:!1},Zi={readContext:Rl,useCallback:Oi,useContext:Rl,useEffect:zi,useImperativeHandle:$i,useInsertionEffect:Pi,useLayoutEffect:Ui,useMemo:ji,useReducer:Ei,useRef:Li,useState:function(){return Ei(vi)},useDebugValue:Mi,useDeferredValue:function(e){return Gi(yi(),oi.memoizedState,e)},useTransition:function(){return[Ei(vi)[0],yi().memoizedState]},useMutableSource:bi,useSyncExternalStore:xi,useId:Wi,unstable_isNewReconciler:!1},eo={readContext:Rl,useCallback:Oi,useContext:Rl,useEffect:zi,useImperativeHandle:$i,useInsertionEffect:Pi,useLayoutEffect:Ui,useMemo:ji,useReducer:Ci,useRef:Li,useState:function(){return Ci(vi)},useDebugValue:Mi,useDeferredValue:function(e){var t=yi();return null===oi?t.memoizedState=e:Gi(t,oi.memoizedState,e)},useTransition:function(){return[Ci(vi)[0],yi().memoizedState]},useMutableSource:bi,useSyncExternalStore:xi,useId:Wi,unstable_isNewReconciler:!1};function to(e,t){if(e&&e.defaultProps){for(var n in t=U({},t),e=e.defaultProps)void 0===t[n]&&(t[n]=e[n]);return t}return t}function no(e,t,n,r){n=null==(n=n(r,t=e.memoizedState))?t:U({},t,n),e.memoizedState=n,0===e.lanes&&(e.updateQueue.baseState=n)}var ro={isMounted:function(e){return!!(e=e._reactInternals)&&je(e)===e},enqueueSetState:function(e,t,n){e=e._reactInternals;var r=ec(),a=tc(e),l=_l(r,a);l.payload=t,null!=n&&(l.callback=n),null!==(t=$l(e,l,a))&&(nc(t,e,a,r),Ml(t,e,a))},enqueueReplaceState:function(e,t,n){e=e._reactInternals;var r=ec(),a=tc(e),l=_l(r,a);l.tag=1,l.payload=t,null!=n&&(l.callback=n),null!==(t=$l(e,l,a))&&(nc(t,e,a,r),Ml(t,e,a))},enqueueForceUpdate:function(e,t){e=e._reactInternals;var n=ec(),r=tc(e),a=_l(n,r);a.tag=2,null!=t&&(a.callback=t),null!==(t=$l(e,a,r))&&(nc(t,e,r,n),Ml(t,e,r))}};function ao(e,t,n,r,a,l,i){return"function"==typeof(e=e.stateNode).shouldComponentUpdate?e.shouldComponentUpdate(r,l,i):!(t.prototype&&t.prototype.isPureReactComponent&&sr(n,r)&&sr(a,l))}function lo(e,t,n){var r=!1,a=Na,l=t.contextType;return"object"==typeof l&&null!==l?l=Rl(l):(a=Ta(t)?Ra:Sa.current,l=(r=null!=(r=t.contextTypes))?La(e,a):Na),t=new t(n,l),e.memoizedState=null!==t.state&&void 0!==t.state?t.state:null,t.updater=ro,e.stateNode=t,t._reactInternals=e,r&&((e=e.stateNode).__reactInternalMemoizedUnmaskedChildContext=a,e.__reactInternalMemoizedMaskedChildContext=l),t}function io(e,t,n,r){e=t.state,"function"==typeof t.componentWillReceiveProps&&t.componentWillReceiveProps(n,r),"function"==typeof t.UNSAFE_componentWillReceiveProps&&t.UNSAFE_componentWillReceiveProps(n,r),t.state!==e&&ro.enqueueReplaceState(t,t.state,null)}function oo(e,t,n,r){var a=e.stateNode;a.props=n,a.state=e.memoizedState,a.refs={},Pl(e);var l=t.contextType;"object"==typeof l&&null!==l?a.context=Rl(l):(l=Ta(t)?Ra:Sa.current,a.context=La(e,l)),a.state=e.memoizedState,"function"==typeof(l=t.getDerivedStateFromProps)&&(no(e,t,l,n),a.state=e.memoizedState),"function"==typeof t.getDerivedStateFromProps||"function"==typeof a.getSnapshotBeforeUpdate||"function"!=typeof a.UNSAFE_componentWillMount&&"function"!=typeof a.componentWillMount||(t=a.state,"function"==typeof a.componentWillMount&&a.componentWillMount(),"function"==typeof a.UNSAFE_componentWillMount&&a.UNSAFE_componentWillMount(),t!==a.state&&ro.enqueueReplaceState(a,a.state,null),jl(e,n,a,r),a.state=e.memoizedState),"function"==typeof a.componentDidMount&&(e.flags|=4194308)}function so(e,t){try{var n="",r=t;do{n+=O(r),r=r.return}while(r);var a=n}catch(e){a="\nError generating stack: "+e.message+"\n"+e.stack}return{value:e,source:t,stack:a,digest:null}}function co(e,t,n){return{value:e,source:null,stack:null!=n?n:null,digest:null!=t?t:null}}function uo(e,t){try{console.error(t.value)}catch(e){setTimeout((function(){throw e}))}}var mo="function"==typeof WeakMap?WeakMap:Map;function po(e,t,n){(n=_l(-1,n)).tag=3,n.payload={element:null};var r=t.value;return n.callback=function(){Hs||(Hs=!0,Ws=r),uo(0,t)},n}function fo(e,t,n){(n=_l(-1,n)).tag=3;var r=e.type.getDerivedStateFromError;if("function"==typeof r){var a=t.value;n.payload=function(){return r(a)},n.callback=function(){uo(0,t)}}var l=e.stateNode;return null!==l&&"function"==typeof l.componentDidCatch&&(n.callback=function(){uo(0,t),"function"!=typeof r&&(null===Ks?Ks=new Set([this]):Ks.add(this));var e=t.stack;this.componentDidCatch(t.value,{componentStack:null!==e?e:""})}),n}function Ao(e,t,n){var r=e.pingCache;if(null===r){r=e.pingCache=new mo;var a=new Set;r.set(t,a)}else void 0===(a=r.get(t))&&(a=new Set,r.set(t,a));a.has(n)||(a.add(n),e=kc.bind(null,e,t,n),t.then(e,e))}function go(e){do{var t;if((t=13===e.tag)&&(t=null===(t=e.memoizedState)||null!==t.dehydrated),t)return e;e=e.return}while(null!==e);return null}function ho(e,t,n,r,a){return 1&e.mode?(e.flags|=65536,e.lanes=a,e):(e===t?e.flags|=65536:(e.flags|=128,n.flags|=131072,n.flags&=-52805,1===n.tag&&(null===n.alternate?n.tag=17:((t=_l(-1,1)).tag=2,$l(n,t,1))),n.lanes|=1),e)}var yo=E.ReactCurrentOwner,vo=!1;function Eo(e,t,n,r){t.child=null===e?Cl(t,null,n,r):El(t,e.child,n,r)}function Co(e,t,n,r,a){n=n.render;var l=t.ref;return Fl(t,a),r=Ai(e,t,n,r,l,a),n=gi(),null===e||vo?(al&&n&&el(t),t.flags|=1,Eo(e,t,r,a),t.child):(t.updateQueue=e.updateQueue,t.flags&=-2053,e.lanes&=~a,Ho(e,t,a))}function bo(e,t,n,r,a){if(null===e){var l=n.type;return"function"!=typeof l||Tc(l)||void 0!==l.defaultProps||null!==n.compare||void 0!==n.defaultProps?((e=Ic(n.type,null,r,t,t.mode,a)).ref=t.ref,e.return=t,t.child=e):(t.tag=15,t.type=l,xo(e,t,l,r,a))}if(l=e.child,!(e.lanes&a)){var i=l.memoizedProps;if((n=null!==(n=n.compare)?n:sr)(i,r)&&e.ref===t.ref)return Ho(e,t,a)}return t.flags|=1,(e=Dc(l,r)).ref=t.ref,e.return=t,t.child=e}function xo(e,t,n,r,a){if(null!==e){var l=e.memoizedProps;if(sr(l,r)&&e.ref===t.ref){if(vo=!1,t.pendingProps=r=l,!(e.lanes&a))return t.lanes=e.lanes,Ho(e,t,a);131072&e.flags&&(vo=!0)}}return Bo(e,t,n,r,a)}function wo(e,t,n){var r=t.pendingProps,a=r.children,l=null!==e?e.memoizedState:null;if("hidden"===r.mode)if(1&t.mode){if(!(1073741824&n))return e=null!==l?l.baseLanes|n:n,t.lanes=t.childLanes=1073741824,t.memoizedState={baseLanes:e,cachePool:null,transitions:null},t.updateQueue=null,Ba(Ds,Ts),Ts|=e,null;t.memoizedState={baseLanes:0,cachePool:null,transitions:null},r=null!==l?l.baseLanes:n,Ba(Ds,Ts),Ts|=r}else t.memoizedState={baseLanes:0,cachePool:null,transitions:null},Ba(Ds,Ts),Ts|=n;else null!==l?(r=l.baseLanes|n,t.memoizedState=null):r=n,Ba(Ds,Ts),Ts|=r;return Eo(e,t,a,n),t.child}function ko(e,t){var n=t.ref;(null===e&&null!==n||null!==e&&e.ref!==n)&&(t.flags|=512,t.flags|=2097152)}function Bo(e,t,n,r,a){var l=Ta(n)?Ra:Sa.current;return l=La(t,l),Fl(t,a),n=Ai(e,t,n,r,l,a),r=gi(),null===e||vo?(al&&r&&el(t),t.flags|=1,Eo(e,t,n,a),t.child):(t.updateQueue=e.updateQueue,t.flags&=-2053,e.lanes&=~a,Ho(e,t,a))}function No(e,t,n,r,a){if(Ta(n)){var l=!0;Pa(t)}else l=!1;if(Fl(t,a),null===t.stateNode)Go(e,t),lo(t,n,r),oo(t,n,r,a),r=!0;else if(null===e){var i=t.stateNode,o=t.memoizedProps;i.props=o;var s=i.context,c=n.contextType;c="object"==typeof c&&null!==c?Rl(c):La(t,c=Ta(n)?Ra:Sa.current);var u=n.getDerivedStateFromProps,m="function"==typeof u||"function"==typeof i.getSnapshotBeforeUpdate;m||"function"!=typeof i.UNSAFE_componentWillReceiveProps&&"function"!=typeof i.componentWillReceiveProps||(o!==r||s!==c)&&io(t,i,r,c),zl=!1;var d=t.memoizedState;i.state=d,jl(t,r,i,a),s=t.memoizedState,o!==r||d!==s||Fa.current||zl?("function"==typeof u&&(no(t,n,u,r),s=t.memoizedState),(o=zl||ao(t,n,o,r,d,s,c))?(m||"function"!=typeof i.UNSAFE_componentWillMount&&"function"!=typeof i.componentWillMount||("function"==typeof i.componentWillMount&&i.componentWillMount(),"function"==typeof i.UNSAFE_componentWillMount&&i.UNSAFE_componentWillMount()),"function"==typeof i.componentDidMount&&(t.flags|=4194308)):("function"==typeof i.componentDidMount&&(t.flags|=4194308),t.memoizedProps=r,t.memoizedState=s),i.props=r,i.state=s,i.context=c,r=o):("function"==typeof i.componentDidMount&&(t.flags|=4194308),r=!1)}else{i=t.stateNode,Ul(e,t),o=t.memoizedProps,c=t.type===t.elementType?o:to(t.type,o),i.props=c,m=t.pendingProps,d=i.context,s="object"==typeof(s=n.contextType)&&null!==s?Rl(s):La(t,s=Ta(n)?Ra:Sa.current);var p=n.getDerivedStateFromProps;(u="function"==typeof p||"function"==typeof i.getSnapshotBeforeUpdate)||"function"!=typeof i.UNSAFE_componentWillReceiveProps&&"function"!=typeof i.componentWillReceiveProps||(o!==m||d!==s)&&io(t,i,r,s),zl=!1,d=t.memoizedState,i.state=d,jl(t,r,i,a);var f=t.memoizedState;o!==m||d!==f||Fa.current||zl?("function"==typeof p&&(no(t,n,p,r),f=t.memoizedState),(c=zl||ao(t,n,c,r,d,f,s)||!1)?(u||"function"!=typeof i.UNSAFE_componentWillUpdate&&"function"!=typeof i.componentWillUpdate||("function"==typeof i.componentWillUpdate&&i.componentWillUpdate(r,f,s),"function"==typeof i.UNSAFE_componentWillUpdate&&i.UNSAFE_componentWillUpdate(r,f,s)),"function"==typeof i.componentDidUpdate&&(t.flags|=4),"function"==typeof i.getSnapshotBeforeUpdate&&(t.flags|=1024)):("function"!=typeof i.componentDidUpdate||o===e.memoizedProps&&d===e.memoizedState||(t.flags|=4),"function"!=typeof i.getSnapshotBeforeUpdate||o===e.memoizedProps&&d===e.memoizedState||(t.flags|=1024),t.memoizedProps=r,t.memoizedState=f),i.props=r,i.state=f,i.context=s,r=c):("function"!=typeof i.componentDidUpdate||o===e.memoizedProps&&d===e.memoizedState||(t.flags|=4),"function"!=typeof i.getSnapshotBeforeUpdate||o===e.memoizedProps&&d===e.memoizedState||(t.flags|=1024),r=!1)}return So(e,t,n,r,l,a)}function So(e,t,n,r,a,l){ko(e,t);var i=!!(128&t.flags);if(!r&&!i)return a&&Ua(t,n,!1),Ho(e,t,l);r=t.stateNode,yo.current=t;var o=i&&"function"!=typeof n.getDerivedStateFromError?null:r.render();return t.flags|=1,null!==e&&i?(t.child=El(t,e.child,null,l),t.child=El(t,null,o,l)):Eo(e,t,o,l),t.memoizedState=r.state,a&&Ua(t,n,!0),t.child}function Fo(e){var t=e.stateNode;t.pendingContext?Ia(0,t.pendingContext,t.pendingContext!==t.context):t.context&&Ia(0,t.context,!1),Vl(e,t.containerInfo)}function Ro(e,t,n,r,a){return pl(),fl(a),t.flags|=256,Eo(e,t,n,r),t.child}var Lo,To,Do,Io,zo={dehydrated:null,treeContext:null,retryLane:0};function Po(e){return{baseLanes:e,cachePool:null,transitions:null}}function Uo(e,t,n){var r,a=t.pendingProps,i=Zl.current,o=!1,s=!!(128&t.flags);if((r=s)||(r=(null===e||null!==e.memoizedState)&&!!(2&i)),r?(o=!0,t.flags&=-129):null!==e&&null===e.memoizedState||(i|=1),Ba(Zl,1&i),null===e)return cl(t),null!==(e=t.memoizedState)&&null!==(e=e.dehydrated)?(1&t.mode?"$!"===e.data?t.lanes=8:t.lanes=1073741824:t.lanes=1,null):(s=a.children,e=a.fallback,o?(a=t.mode,o=t.child,s={mode:"hidden",children:s},1&a||null===o?o=Pc(s,a,0,null):(o.childLanes=0,o.pendingProps=s),e=zc(e,a,n,null),o.return=t,e.return=t,o.sibling=e,t.child=o,t.child.memoizedState=Po(n),t.memoizedState=zo,e):_o(t,s));if(null!==(i=e.memoizedState)&&null!==(r=i.dehydrated))return function(e,t,n,r,a,i,o){if(n)return 256&t.flags?(t.flags&=-257,$o(e,t,o,r=co(Error(l(422))))):null!==t.memoizedState?(t.child=e.child,t.flags|=128,null):(i=r.fallback,a=t.mode,r=Pc({mode:"visible",children:r.children},a,0,null),(i=zc(i,a,o,null)).flags|=2,r.return=t,i.return=t,r.sibling=i,t.child=r,1&t.mode&&El(t,e.child,null,o),t.child.memoizedState=Po(o),t.memoizedState=zo,i);if(!(1&t.mode))return $o(e,t,o,null);if("$!"===a.data){if(r=a.nextSibling&&a.nextSibling.dataset)var s=r.dgst;return r=s,$o(e,t,o,r=co(i=Error(l(419)),r,void 0))}if(s=!!(o&e.childLanes),vo||s){if(null!==(r=Fs)){switch(o&-o){case 4:a=2;break;case 16:a=8;break;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:a=32;break;case 536870912:a=268435456;break;default:a=0}0!==(a=a&(r.suspendedLanes|o)?0:a)&&a!==i.retryLane&&(i.retryLane=a,Il(e,a),nc(r,e,a,-1))}return Ac(),$o(e,t,o,r=co(Error(l(421))))}return"$?"===a.data?(t.flags|=128,t.child=e.child,t=Nc.bind(null,e),a._reactRetry=t,null):(e=i.treeContext,rl=ca(a.nextSibling),nl=t,al=!0,ll=null,null!==e&&(Qa[Ya++]=qa,Qa[Ya++]=Xa,Qa[Ya++]=Va,qa=e.id,Xa=e.overflow,Va=t),(t=_o(t,r.children)).flags|=4096,t)}(e,t,s,a,r,i,n);if(o){o=a.fallback,s=t.mode,r=(i=e.child).sibling;var c={mode:"hidden",children:a.children};return 1&s||t.child===i?(a=Dc(i,c)).subtreeFlags=14680064&i.subtreeFlags:((a=t.child).childLanes=0,a.pendingProps=c,t.deletions=null),null!==r?o=Dc(r,o):(o=zc(o,s,n,null)).flags|=2,o.return=t,a.return=t,a.sibling=o,t.child=a,a=o,o=t.child,s=null===(s=e.child.memoizedState)?Po(n):{baseLanes:s.baseLanes|n,cachePool:null,transitions:s.transitions},o.memoizedState=s,o.childLanes=e.childLanes&~n,t.memoizedState=zo,a}return e=(o=e.child).sibling,a=Dc(o,{mode:"visible",children:a.children}),!(1&t.mode)&&(a.lanes=n),a.return=t,a.sibling=null,null!==e&&(null===(n=t.deletions)?(t.deletions=[e],t.flags|=16):n.push(e)),t.child=a,t.memoizedState=null,a}function _o(e,t){return(t=Pc({mode:"visible",children:t},e.mode,0,null)).return=e,e.child=t}function $o(e,t,n,r){return null!==r&&fl(r),El(t,e.child,null,n),(e=_o(t,t.pendingProps.children)).flags|=2,t.memoizedState=null,e}function Mo(e,t,n){e.lanes|=t;var r=e.alternate;null!==r&&(r.lanes|=t),Sl(e.return,t,n)}function Oo(e,t,n,r,a){var l=e.memoizedState;null===l?e.memoizedState={isBackwards:t,rendering:null,renderingStartTime:0,last:r,tail:n,tailMode:a}:(l.isBackwards=t,l.rendering=null,l.renderingStartTime=0,l.last=r,l.tail=n,l.tailMode=a)}function jo(e,t,n){var r=t.pendingProps,a=r.revealOrder,l=r.tail;if(Eo(e,t,r.children,n),2&(r=Zl.current))r=1&r|2,t.flags|=128;else{if(null!==e&&128&e.flags)e:for(e=t.child;null!==e;){if(13===e.tag)null!==e.memoizedState&&Mo(e,n,t);else if(19===e.tag)Mo(e,n,t);else if(null!==e.child){e.child.return=e,e=e.child;continue}if(e===t)break e;for(;null===e.sibling;){if(null===e.return||e.return===t)break e;e=e.return}e.sibling.return=e.return,e=e.sibling}r&=1}if(Ba(Zl,r),1&t.mode)switch(a){case"forwards":for(n=t.child,a=null;null!==n;)null!==(e=n.alternate)&&null===ei(e)&&(a=n),n=n.sibling;null===(n=a)?(a=t.child,t.child=null):(a=n.sibling,n.sibling=null),Oo(t,!1,a,n,l);break;case"backwards":for(n=null,a=t.child,t.child=null;null!==a;){if(null!==(e=a.alternate)&&null===ei(e)){t.child=a;break}e=a.sibling,a.sibling=n,n=a,a=e}Oo(t,!0,n,null,l);break;case"together":Oo(t,!1,null,null,void 0);break;default:t.memoizedState=null}else t.memoizedState=null;return t.child}function Go(e,t){!(1&t.mode)&&null!==e&&(e.alternate=null,t.alternate=null,t.flags|=2)}function Ho(e,t,n){if(null!==e&&(t.dependencies=e.dependencies),Ps|=t.lanes,!(n&t.childLanes))return null;if(null!==e&&t.child!==e.child)throw Error(l(153));if(null!==t.child){for(n=Dc(e=t.child,e.pendingProps),t.child=n,n.return=t;null!==e.sibling;)e=e.sibling,(n=n.sibling=Dc(e,e.pendingProps)).return=t;n.sibling=null}return t.child}function Wo(e,t){if(!al)switch(e.tailMode){case"hidden":t=e.tail;for(var n=null;null!==t;)null!==t.alternate&&(n=t),t=t.sibling;null===n?e.tail=null:n.sibling=null;break;case"collapsed":n=e.tail;for(var r=null;null!==n;)null!==n.alternate&&(r=n),n=n.sibling;null===r?t||null===e.tail?e.tail=null:e.tail.sibling=null:r.sibling=null}}function Ko(e){var t=null!==e.alternate&&e.alternate.child===e.child,n=0,r=0;if(t)for(var a=e.child;null!==a;)n|=a.lanes|a.childLanes,r|=14680064&a.subtreeFlags,r|=14680064&a.flags,a.return=e,a=a.sibling;else for(a=e.child;null!==a;)n|=a.lanes|a.childLanes,r|=a.subtreeFlags,r|=a.flags,a.return=e,a=a.sibling;return e.subtreeFlags|=r,e.childLanes=n,t}function Qo(e,t,n){var r=t.pendingProps;switch(tl(t),t.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return Ko(t),null;case 1:case 17:return Ta(t.type)&&Da(),Ko(t),null;case 3:return r=t.stateNode,ql(),ka(Fa),ka(Sa),ni(),r.pendingContext&&(r.context=r.pendingContext,r.pendingContext=null),null!==e&&null!==e.child||(ml(t)?t.flags|=4:null===e||e.memoizedState.isDehydrated&&!(256&t.flags)||(t.flags|=1024,null!==ll&&(ic(ll),ll=null))),To(e,t),Ko(t),null;case 5:Jl(t);var a=Yl(Ql.current);if(n=t.type,null!==e&&null!=t.stateNode)Do(e,t,n,r,a),e.ref!==t.ref&&(t.flags|=512,t.flags|=2097152);else{if(!r){if(null===t.stateNode)throw Error(l(166));return Ko(t),null}if(e=Yl(Wl.current),ml(t)){r=t.stateNode,n=t.type;var i=t.memoizedProps;switch(r[da]=t,r[pa]=i,e=!!(1&t.mode),n){case"dialog":$r("cancel",r),$r("close",r);break;case"iframe":case"object":case"embed":$r("load",r);break;case"video":case"audio":for(a=0;a<zr.length;a++)$r(zr[a],r);break;case"source":$r("error",r);break;case"img":case"image":case"link":$r("error",r),$r("load",r);break;case"details":$r("toggle",r);break;case"input":q(r,i),$r("invalid",r);break;case"select":r._wrapperState={wasMultiple:!!i.multiple},$r("invalid",r);break;case"textarea":ae(r,i),$r("invalid",r)}for(var s in ye(n,i),a=null,i)if(i.hasOwnProperty(s)){var c=i[s];"children"===s?"string"==typeof c?r.textContent!==c&&(!0!==i.suppressHydrationWarning&&Jr(r.textContent,c,e),a=["children",c]):"number"==typeof c&&r.textContent!==""+c&&(!0!==i.suppressHydrationWarning&&Jr(r.textContent,c,e),a=["children",""+c]):o.hasOwnProperty(s)&&null!=c&&"onScroll"===s&&$r("scroll",r)}switch(n){case"input":K(r),Z(r,i,!0);break;case"textarea":K(r),ie(r);break;case"select":case"option":break;default:"function"==typeof i.onClick&&(r.onclick=Zr)}r=a,t.updateQueue=r,null!==r&&(t.flags|=4)}else{s=9===a.nodeType?a:a.ownerDocument,"http://www.w3.org/1999/xhtml"===e&&(e=oe(n)),"http://www.w3.org/1999/xhtml"===e?"script"===n?((e=s.createElement("div")).innerHTML="<script><\/script>",e=e.removeChild(e.firstChild)):"string"==typeof r.is?e=s.createElement(n,{is:r.is}):(e=s.createElement(n),"select"===n&&(s=e,r.multiple?s.multiple=!0:r.size&&(s.size=r.size))):e=s.createElementNS(e,n),e[da]=t,e[pa]=r,Lo(e,t,!1,!1),t.stateNode=e;e:{switch(s=ve(n,r),n){case"dialog":$r("cancel",e),$r("close",e),a=r;break;case"iframe":case"object":case"embed":$r("load",e),a=r;break;case"video":case"audio":for(a=0;a<zr.length;a++)$r(zr[a],e);a=r;break;case"source":$r("error",e),a=r;break;case"img":case"image":case"link":$r("error",e),$r("load",e),a=r;break;case"details":$r("toggle",e),a=r;break;case"input":q(e,r),a=V(e,r),$r("invalid",e);break;case"option":default:a=r;break;case"select":e._wrapperState={wasMultiple:!!r.multiple},a=U({},r,{value:void 0}),$r("invalid",e);break;case"textarea":ae(e,r),a=re(e,r),$r("invalid",e)}for(i in ye(n,a),c=a)if(c.hasOwnProperty(i)){var u=c[i];"style"===i?ge(e,u):"dangerouslySetInnerHTML"===i?null!=(u=u?u.__html:void 0)&&me(e,u):"children"===i?"string"==typeof u?("textarea"!==n||""!==u)&&de(e,u):"number"==typeof u&&de(e,""+u):"suppressContentEditableWarning"!==i&&"suppressHydrationWarning"!==i&&"autoFocus"!==i&&(o.hasOwnProperty(i)?null!=u&&"onScroll"===i&&$r("scroll",e):null!=u&&v(e,i,u,s))}switch(n){case"input":K(e),Z(e,r,!1);break;case"textarea":K(e),ie(e);break;case"option":null!=r.value&&e.setAttribute("value",""+H(r.value));break;case"select":e.multiple=!!r.multiple,null!=(i=r.value)?ne(e,!!r.multiple,i,!1):null!=r.defaultValue&&ne(e,!!r.multiple,r.defaultValue,!0);break;default:"function"==typeof a.onClick&&(e.onclick=Zr)}switch(n){case"button":case"input":case"select":case"textarea":r=!!r.autoFocus;break e;case"img":r=!0;break e;default:r=!1}}r&&(t.flags|=4)}null!==t.ref&&(t.flags|=512,t.flags|=2097152)}return Ko(t),null;case 6:if(e&&null!=t.stateNode)Io(e,t,e.memoizedProps,r);else{if("string"!=typeof r&&null===t.stateNode)throw Error(l(166));if(n=Yl(Ql.current),Yl(Wl.current),ml(t)){if(r=t.stateNode,n=t.memoizedProps,r[da]=t,(i=r.nodeValue!==n)&&null!==(e=nl))switch(e.tag){case 3:Jr(r.nodeValue,n,!!(1&e.mode));break;case 5:!0!==e.memoizedProps.suppressHydrationWarning&&Jr(r.nodeValue,n,!!(1&e.mode))}i&&(t.flags|=4)}else(r=(9===n.nodeType?n:n.ownerDocument).createTextNode(r))[da]=t,t.stateNode=r}return Ko(t),null;case 13:if(ka(Zl),r=t.memoizedState,null===e||null!==e.memoizedState&&null!==e.memoizedState.dehydrated){if(al&&null!==rl&&1&t.mode&&!(128&t.flags))dl(),pl(),t.flags|=98560,i=!1;else if(i=ml(t),null!==r&&null!==r.dehydrated){if(null===e){if(!i)throw Error(l(318));if(!(i=null!==(i=t.memoizedState)?i.dehydrated:null))throw Error(l(317));i[da]=t}else pl(),!(128&t.flags)&&(t.memoizedState=null),t.flags|=4;Ko(t),i=!1}else null!==ll&&(ic(ll),ll=null),i=!0;if(!i)return 65536&t.flags?t:null}return 128&t.flags?(t.lanes=n,t):((r=null!==r)!=(null!==e&&null!==e.memoizedState)&&r&&(t.child.flags|=8192,1&t.mode&&(null===e||1&Zl.current?0===Is&&(Is=3):Ac())),null!==t.updateQueue&&(t.flags|=4),Ko(t),null);case 4:return ql(),To(e,t),null===e&&jr(t.stateNode.containerInfo),Ko(t),null;case 10:return Nl(t.type._context),Ko(t),null;case 19:if(ka(Zl),null===(i=t.memoizedState))return Ko(t),null;if(r=!!(128&t.flags),null===(s=i.rendering))if(r)Wo(i,!1);else{if(0!==Is||null!==e&&128&e.flags)for(e=t.child;null!==e;){if(null!==(s=ei(e))){for(t.flags|=128,Wo(i,!1),null!==(r=s.updateQueue)&&(t.updateQueue=r,t.flags|=4),t.subtreeFlags=0,r=n,n=t.child;null!==n;)e=r,(i=n).flags&=14680066,null===(s=i.alternate)?(i.childLanes=0,i.lanes=e,i.child=null,i.subtreeFlags=0,i.memoizedProps=null,i.memoizedState=null,i.updateQueue=null,i.dependencies=null,i.stateNode=null):(i.childLanes=s.childLanes,i.lanes=s.lanes,i.child=s.child,i.subtreeFlags=0,i.deletions=null,i.memoizedProps=s.memoizedProps,i.memoizedState=s.memoizedState,i.updateQueue=s.updateQueue,i.type=s.type,e=s.dependencies,i.dependencies=null===e?null:{lanes:e.lanes,firstContext:e.firstContext}),n=n.sibling;return Ba(Zl,1&Zl.current|2),t.child}e=e.sibling}null!==i.tail&&Xe()>js&&(t.flags|=128,r=!0,Wo(i,!1),t.lanes=4194304)}else{if(!r)if(null!==(e=ei(s))){if(t.flags|=128,r=!0,null!==(n=e.updateQueue)&&(t.updateQueue=n,t.flags|=4),Wo(i,!0),null===i.tail&&"hidden"===i.tailMode&&!s.alternate&&!al)return Ko(t),null}else 2*Xe()-i.renderingStartTime>js&&1073741824!==n&&(t.flags|=128,r=!0,Wo(i,!1),t.lanes=4194304);i.isBackwards?(s.sibling=t.child,t.child=s):(null!==(n=i.last)?n.sibling=s:t.child=s,i.last=s)}return null!==i.tail?(t=i.tail,i.rendering=t,i.tail=t.sibling,i.renderingStartTime=Xe(),t.sibling=null,n=Zl.current,Ba(Zl,r?1&n|2:1&n),t):(Ko(t),null);case 22:case 23:return mc(),r=null!==t.memoizedState,null!==e&&null!==e.memoizedState!==r&&(t.flags|=8192),r&&1&t.mode?!!(1073741824&Ts)&&(Ko(t),6&t.subtreeFlags&&(t.flags|=8192)):Ko(t),null;case 24:case 25:return null}throw Error(l(156,t.tag))}function Yo(e,t){switch(tl(t),t.tag){case 1:return Ta(t.type)&&Da(),65536&(e=t.flags)?(t.flags=-65537&e|128,t):null;case 3:return ql(),ka(Fa),ka(Sa),ni(),65536&(e=t.flags)&&!(128&e)?(t.flags=-65537&e|128,t):null;case 5:return Jl(t),null;case 13:if(ka(Zl),null!==(e=t.memoizedState)&&null!==e.dehydrated){if(null===t.alternate)throw Error(l(340));pl()}return 65536&(e=t.flags)?(t.flags=-65537&e|128,t):null;case 19:return ka(Zl),null;case 4:return ql(),null;case 10:return Nl(t.type._context),null;case 22:case 23:return mc(),null;default:return null}}Lo=function(e,t){for(var n=t.child;null!==n;){if(5===n.tag||6===n.tag)e.appendChild(n.stateNode);else if(4!==n.tag&&null!==n.child){n.child.return=n,n=n.child;continue}if(n===t)break;for(;null===n.sibling;){if(null===n.return||n.return===t)return;n=n.return}n.sibling.return=n.return,n=n.sibling}},To=function(){},Do=function(e,t,n,r){var a=e.memoizedProps;if(a!==r){e=t.stateNode,Yl(Wl.current);var l,i=null;switch(n){case"input":a=V(e,a),r=V(e,r),i=[];break;case"select":a=U({},a,{value:void 0}),r=U({},r,{value:void 0}),i=[];break;case"textarea":a=re(e,a),r=re(e,r),i=[];break;default:"function"!=typeof a.onClick&&"function"==typeof r.onClick&&(e.onclick=Zr)}for(u in ye(n,r),n=null,a)if(!r.hasOwnProperty(u)&&a.hasOwnProperty(u)&&null!=a[u])if("style"===u){var s=a[u];for(l in s)s.hasOwnProperty(l)&&(n||(n={}),n[l]="")}else"dangerouslySetInnerHTML"!==u&&"children"!==u&&"suppressContentEditableWarning"!==u&&"suppressHydrationWarning"!==u&&"autoFocus"!==u&&(o.hasOwnProperty(u)?i||(i=[]):(i=i||[]).push(u,null));for(u in r){var c=r[u];if(s=null!=a?a[u]:void 0,r.hasOwnProperty(u)&&c!==s&&(null!=c||null!=s))if("style"===u)if(s){for(l in s)!s.hasOwnProperty(l)||c&&c.hasOwnProperty(l)||(n||(n={}),n[l]="");for(l in c)c.hasOwnProperty(l)&&s[l]!==c[l]&&(n||(n={}),n[l]=c[l])}else n||(i||(i=[]),i.push(u,n)),n=c;else"dangerouslySetInnerHTML"===u?(c=c?c.__html:void 0,s=s?s.__html:void 0,null!=c&&s!==c&&(i=i||[]).push(u,c)):"children"===u?"string"!=typeof c&&"number"!=typeof c||(i=i||[]).push(u,""+c):"suppressContentEditableWarning"!==u&&"suppressHydrationWarning"!==u&&(o.hasOwnProperty(u)?(null!=c&&"onScroll"===u&&$r("scroll",e),i||s===c||(i=[])):(i=i||[]).push(u,c))}n&&(i=i||[]).push("style",n);var u=i;(t.updateQueue=u)&&(t.flags|=4)}},Io=function(e,t,n,r){n!==r&&(t.flags|=4)};var Vo=!1,qo=!1,Xo="function"==typeof WeakSet?WeakSet:Set,Jo=null;function Zo(e,t){var n=e.ref;if(null!==n)if("function"==typeof n)try{n(null)}catch(n){wc(e,t,n)}else n.current=null}function es(e,t,n){try{n()}catch(n){wc(e,t,n)}}var ts=!1;function ns(e,t,n){var r=t.updateQueue;if(null!==(r=null!==r?r.lastEffect:null)){var a=r=r.next;do{if((a.tag&e)===e){var l=a.destroy;a.destroy=void 0,void 0!==l&&es(t,n,l)}a=a.next}while(a!==r)}}function rs(e,t){if(null!==(t=null!==(t=t.updateQueue)?t.lastEffect:null)){var n=t=t.next;do{if((n.tag&e)===e){var r=n.create;n.destroy=r()}n=n.next}while(n!==t)}}function as(e){var t=e.ref;if(null!==t){var n=e.stateNode;e.tag,e=n,"function"==typeof t?t(e):t.current=e}}function ls(e){var t=e.alternate;null!==t&&(e.alternate=null,ls(t)),e.child=null,e.deletions=null,e.sibling=null,5===e.tag&&null!==(t=e.stateNode)&&(delete t[da],delete t[pa],delete t[Aa],delete t[ga],delete t[ha]),e.stateNode=null,e.return=null,e.dependencies=null,e.memoizedProps=null,e.memoizedState=null,e.pendingProps=null,e.stateNode=null,e.updateQueue=null}function is(e){return 5===e.tag||3===e.tag||4===e.tag}function os(e){e:for(;;){for(;null===e.sibling;){if(null===e.return||is(e.return))return null;e=e.return}for(e.sibling.return=e.return,e=e.sibling;5!==e.tag&&6!==e.tag&&18!==e.tag;){if(2&e.flags)continue e;if(null===e.child||4===e.tag)continue e;e.child.return=e,e=e.child}if(!(2&e.flags))return e.stateNode}}function ss(e,t,n){var r=e.tag;if(5===r||6===r)e=e.stateNode,t?8===n.nodeType?n.parentNode.insertBefore(e,t):n.insertBefore(e,t):(8===n.nodeType?(t=n.parentNode).insertBefore(e,n):(t=n).appendChild(e),null!=(n=n._reactRootContainer)||null!==t.onclick||(t.onclick=Zr));else if(4!==r&&null!==(e=e.child))for(ss(e,t,n),e=e.sibling;null!==e;)ss(e,t,n),e=e.sibling}function cs(e,t,n){var r=e.tag;if(5===r||6===r)e=e.stateNode,t?n.insertBefore(e,t):n.appendChild(e);else if(4!==r&&null!==(e=e.child))for(cs(e,t,n),e=e.sibling;null!==e;)cs(e,t,n),e=e.sibling}var us=null,ms=!1;function ds(e,t,n){for(n=n.child;null!==n;)ps(e,t,n),n=n.sibling}function ps(e,t,n){if(lt&&"function"==typeof lt.onCommitFiberUnmount)try{lt.onCommitFiberUnmount(at,n)}catch(e){}switch(n.tag){case 5:qo||Zo(n,t);case 6:var r=us,a=ms;us=null,ds(e,t,n),ms=a,null!==(us=r)&&(ms?(e=us,n=n.stateNode,8===e.nodeType?e.parentNode.removeChild(n):e.removeChild(n)):us.removeChild(n.stateNode));break;case 18:null!==us&&(ms?(e=us,n=n.stateNode,8===e.nodeType?sa(e.parentNode,n):1===e.nodeType&&sa(e,n),jt(e)):sa(us,n.stateNode));break;case 4:r=us,a=ms,us=n.stateNode.containerInfo,ms=!0,ds(e,t,n),us=r,ms=a;break;case 0:case 11:case 14:case 15:if(!qo&&null!==(r=n.updateQueue)&&null!==(r=r.lastEffect)){a=r=r.next;do{var l=a,i=l.destroy;l=l.tag,void 0!==i&&(2&l||4&l)&&es(n,t,i),a=a.next}while(a!==r)}ds(e,t,n);break;case 1:if(!qo&&(Zo(n,t),"function"==typeof(r=n.stateNode).componentWillUnmount))try{r.props=n.memoizedProps,r.state=n.memoizedState,r.componentWillUnmount()}catch(e){wc(n,t,e)}ds(e,t,n);break;case 21:ds(e,t,n);break;case 22:1&n.mode?(qo=(r=qo)||null!==n.memoizedState,ds(e,t,n),qo=r):ds(e,t,n);break;default:ds(e,t,n)}}function fs(e){var t=e.updateQueue;if(null!==t){e.updateQueue=null;var n=e.stateNode;null===n&&(n=e.stateNode=new Xo),t.forEach((function(t){var r=Sc.bind(null,e,t);n.has(t)||(n.add(t),t.then(r,r))}))}}function As(e,t){var n=t.deletions;if(null!==n)for(var r=0;r<n.length;r++){var a=n[r];try{var i=e,o=t,s=o;e:for(;null!==s;){switch(s.tag){case 5:us=s.stateNode,ms=!1;break e;case 3:case 4:us=s.stateNode.containerInfo,ms=!0;break e}s=s.return}if(null===us)throw Error(l(160));ps(i,o,a),us=null,ms=!1;var c=a.alternate;null!==c&&(c.return=null),a.return=null}catch(e){wc(a,t,e)}}if(12854&t.subtreeFlags)for(t=t.child;null!==t;)gs(t,e),t=t.sibling}function gs(e,t){var n=e.alternate,r=e.flags;switch(e.tag){case 0:case 11:case 14:case 15:if(As(t,e),hs(e),4&r){try{ns(3,e,e.return),rs(3,e)}catch(t){wc(e,e.return,t)}try{ns(5,e,e.return)}catch(t){wc(e,e.return,t)}}break;case 1:As(t,e),hs(e),512&r&&null!==n&&Zo(n,n.return);break;case 5:if(As(t,e),hs(e),512&r&&null!==n&&Zo(n,n.return),32&e.flags){var a=e.stateNode;try{de(a,"")}catch(t){wc(e,e.return,t)}}if(4&r&&null!=(a=e.stateNode)){var i=e.memoizedProps,o=null!==n?n.memoizedProps:i,s=e.type,c=e.updateQueue;if(e.updateQueue=null,null!==c)try{"input"===s&&"radio"===i.type&&null!=i.name&&X(a,i),ve(s,o);var u=ve(s,i);for(o=0;o<c.length;o+=2){var m=c[o],d=c[o+1];"style"===m?ge(a,d):"dangerouslySetInnerHTML"===m?me(a,d):"children"===m?de(a,d):v(a,m,d,u)}switch(s){case"input":J(a,i);break;case"textarea":le(a,i);break;case"select":var p=a._wrapperState.wasMultiple;a._wrapperState.wasMultiple=!!i.multiple;var f=i.value;null!=f?ne(a,!!i.multiple,f,!1):p!==!!i.multiple&&(null!=i.defaultValue?ne(a,!!i.multiple,i.defaultValue,!0):ne(a,!!i.multiple,i.multiple?[]:"",!1))}a[pa]=i}catch(t){wc(e,e.return,t)}}break;case 6:if(As(t,e),hs(e),4&r){if(null===e.stateNode)throw Error(l(162));a=e.stateNode,i=e.memoizedProps;try{a.nodeValue=i}catch(t){wc(e,e.return,t)}}break;case 3:if(As(t,e),hs(e),4&r&&null!==n&&n.memoizedState.isDehydrated)try{jt(t.containerInfo)}catch(t){wc(e,e.return,t)}break;case 4:default:As(t,e),hs(e);break;case 13:As(t,e),hs(e),8192&(a=e.child).flags&&(i=null!==a.memoizedState,a.stateNode.isHidden=i,!i||null!==a.alternate&&null!==a.alternate.memoizedState||(Os=Xe())),4&r&&fs(e);break;case 22:if(m=null!==n&&null!==n.memoizedState,1&e.mode?(qo=(u=qo)||m,As(t,e),qo=u):As(t,e),hs(e),8192&r){if(u=null!==e.memoizedState,(e.stateNode.isHidden=u)&&!m&&1&e.mode)for(Jo=e,m=e.child;null!==m;){for(d=Jo=m;null!==Jo;){switch(f=(p=Jo).child,p.tag){case 0:case 11:case 14:case 15:ns(4,p,p.return);break;case 1:Zo(p,p.return);var A=p.stateNode;if("function"==typeof A.componentWillUnmount){r=p,n=p.return;try{t=r,A.props=t.memoizedProps,A.state=t.memoizedState,A.componentWillUnmount()}catch(e){wc(r,n,e)}}break;case 5:Zo(p,p.return);break;case 22:if(null!==p.memoizedState){Cs(d);continue}}null!==f?(f.return=p,Jo=f):Cs(d)}m=m.sibling}e:for(m=null,d=e;;){if(5===d.tag){if(null===m){m=d;try{a=d.stateNode,u?"function"==typeof(i=a.style).setProperty?i.setProperty("display","none","important"):i.display="none":(s=d.stateNode,o=null!=(c=d.memoizedProps.style)&&c.hasOwnProperty("display")?c.display:null,s.style.display=Ae("display",o))}catch(t){wc(e,e.return,t)}}}else if(6===d.tag){if(null===m)try{d.stateNode.nodeValue=u?"":d.memoizedProps}catch(t){wc(e,e.return,t)}}else if((22!==d.tag&&23!==d.tag||null===d.memoizedState||d===e)&&null!==d.child){d.child.return=d,d=d.child;continue}if(d===e)break e;for(;null===d.sibling;){if(null===d.return||d.return===e)break e;m===d&&(m=null),d=d.return}m===d&&(m=null),d.sibling.return=d.return,d=d.sibling}}break;case 19:As(t,e),hs(e),4&r&&fs(e);case 21:}}function hs(e){var t=e.flags;if(2&t){try{e:{for(var n=e.return;null!==n;){if(is(n)){var r=n;break e}n=n.return}throw Error(l(160))}switch(r.tag){case 5:var a=r.stateNode;32&r.flags&&(de(a,""),r.flags&=-33),cs(e,os(e),a);break;case 3:case 4:var i=r.stateNode.containerInfo;ss(e,os(e),i);break;default:throw Error(l(161))}}catch(t){wc(e,e.return,t)}e.flags&=-3}4096&t&&(e.flags&=-4097)}function ys(e,t,n){Jo=e,vs(e,t,n)}function vs(e,t,n){for(var r=!!(1&e.mode);null!==Jo;){var a=Jo,l=a.child;if(22===a.tag&&r){var i=null!==a.memoizedState||Vo;if(!i){var o=a.alternate,s=null!==o&&null!==o.memoizedState||qo;o=Vo;var c=qo;if(Vo=i,(qo=s)&&!c)for(Jo=a;null!==Jo;)s=(i=Jo).child,22===i.tag&&null!==i.memoizedState?bs(a):null!==s?(s.return=i,Jo=s):bs(a);for(;null!==l;)Jo=l,vs(l,t,n),l=l.sibling;Jo=a,Vo=o,qo=c}Es(e)}else 8772&a.subtreeFlags&&null!==l?(l.return=a,Jo=l):Es(e)}}function Es(e){for(;null!==Jo;){var t=Jo;if(8772&t.flags){var n=t.alternate;try{if(8772&t.flags)switch(t.tag){case 0:case 11:case 15:qo||rs(5,t);break;case 1:var r=t.stateNode;if(4&t.flags&&!qo)if(null===n)r.componentDidMount();else{var a=t.elementType===t.type?n.memoizedProps:to(t.type,n.memoizedProps);r.componentDidUpdate(a,n.memoizedState,r.__reactInternalSnapshotBeforeUpdate)}var i=t.updateQueue;null!==i&&Gl(t,i,r);break;case 3:var o=t.updateQueue;if(null!==o){if(n=null,null!==t.child)switch(t.child.tag){case 5:case 1:n=t.child.stateNode}Gl(t,o,n)}break;case 5:var s=t.stateNode;if(null===n&&4&t.flags){n=s;var c=t.memoizedProps;switch(t.type){case"button":case"input":case"select":case"textarea":c.autoFocus&&n.focus();break;case"img":c.src&&(n.src=c.src)}}break;case 6:case 4:case 12:case 19:case 17:case 21:case 22:case 23:case 25:break;case 13:if(null===t.memoizedState){var u=t.alternate;if(null!==u){var m=u.memoizedState;if(null!==m){var d=m.dehydrated;null!==d&&jt(d)}}}break;default:throw Error(l(163))}qo||512&t.flags&&as(t)}catch(e){wc(t,t.return,e)}}if(t===e){Jo=null;break}if(null!==(n=t.sibling)){n.return=t.return,Jo=n;break}Jo=t.return}}function Cs(e){for(;null!==Jo;){var t=Jo;if(t===e){Jo=null;break}var n=t.sibling;if(null!==n){n.return=t.return,Jo=n;break}Jo=t.return}}function bs(e){for(;null!==Jo;){var t=Jo;try{switch(t.tag){case 0:case 11:case 15:var n=t.return;try{rs(4,t)}catch(e){wc(t,n,e)}break;case 1:var r=t.stateNode;if("function"==typeof r.componentDidMount){var a=t.return;try{r.componentDidMount()}catch(e){wc(t,a,e)}}var l=t.return;try{as(t)}catch(e){wc(t,l,e)}break;case 5:var i=t.return;try{as(t)}catch(e){wc(t,i,e)}}}catch(e){wc(t,t.return,e)}if(t===e){Jo=null;break}var o=t.sibling;if(null!==o){o.return=t.return,Jo=o;break}Jo=t.return}}var xs,ws=Math.ceil,ks=E.ReactCurrentDispatcher,Bs=E.ReactCurrentOwner,Ns=E.ReactCurrentBatchConfig,Ss=0,Fs=null,Rs=null,Ls=0,Ts=0,Ds=wa(0),Is=0,zs=null,Ps=0,Us=0,_s=0,$s=null,Ms=null,Os=0,js=1/0,Gs=null,Hs=!1,Ws=null,Ks=null,Qs=!1,Ys=null,Vs=0,qs=0,Xs=null,Js=-1,Zs=0;function ec(){return 6&Ss?Xe():-1!==Js?Js:Js=Xe()}function tc(e){return 1&e.mode?2&Ss&&0!==Ls?Ls&-Ls:null!==Al.transition?(0===Zs&&(Zs=At()),Zs):0!==(e=vt)?e:e=void 0===(e=window.event)?16:qt(e.type):1}function nc(e,t,n,r){if(50<qs)throw qs=0,Xs=null,Error(l(185));ht(e,n,r),2&Ss&&e===Fs||(e===Fs&&(!(2&Ss)&&(Us|=n),4===Is&&oc(e,Ls)),rc(e,r),1===n&&0===Ss&&!(1&t.mode)&&(js=Xe()+500,$a&&ja()))}function rc(e,t){var n=e.callbackNode;!function(e,t){for(var n=e.suspendedLanes,r=e.pingedLanes,a=e.expirationTimes,l=e.pendingLanes;0<l;){var i=31-it(l),o=1<<i,s=a[i];-1===s?o&n&&!(o&r)||(a[i]=pt(o,t)):s<=t&&(e.expiredLanes|=o),l&=~o}}(e,t);var r=dt(e,e===Fs?Ls:0);if(0===r)null!==n&&Ye(n),e.callbackNode=null,e.callbackPriority=0;else if(t=r&-r,e.callbackPriority!==t){if(null!=n&&Ye(n),1===t)0===e.tag?function(e){$a=!0,Oa(e)}(sc.bind(null,e)):Oa(sc.bind(null,e)),ia((function(){!(6&Ss)&&ja()})),n=null;else{switch(Et(r)){case 1:n=Ze;break;case 4:n=et;break;case 16:default:n=tt;break;case 536870912:n=rt}n=Fc(n,ac.bind(null,e))}e.callbackPriority=t,e.callbackNode=n}}function ac(e,t){if(Js=-1,Zs=0,6&Ss)throw Error(l(327));var n=e.callbackNode;if(bc()&&e.callbackNode!==n)return null;var r=dt(e,e===Fs?Ls:0);if(0===r)return null;if(30&r||r&e.expiredLanes||t)t=gc(e,r);else{t=r;var a=Ss;Ss|=2;var i=fc();for(Fs===e&&Ls===t||(Gs=null,js=Xe()+500,dc(e,t));;)try{yc();break}catch(t){pc(e,t)}Bl(),ks.current=i,Ss=a,null!==Rs?t=0:(Fs=null,Ls=0,t=Is)}if(0!==t){if(2===t&&0!==(a=ft(e))&&(r=a,t=lc(e,a)),1===t)throw n=zs,dc(e,0),oc(e,r),rc(e,Xe()),n;if(6===t)oc(e,r);else{if(a=e.current.alternate,!(30&r||function(e){for(var t=e;;){if(16384&t.flags){var n=t.updateQueue;if(null!==n&&null!==(n=n.stores))for(var r=0;r<n.length;r++){var a=n[r],l=a.getSnapshot;a=a.value;try{if(!or(l(),a))return!1}catch(e){return!1}}}if(n=t.child,16384&t.subtreeFlags&&null!==n)n.return=t,t=n;else{if(t===e)break;for(;null===t.sibling;){if(null===t.return||t.return===e)return!0;t=t.return}t.sibling.return=t.return,t=t.sibling}}return!0}(a)||(t=gc(e,r),2===t&&(i=ft(e),0!==i&&(r=i,t=lc(e,i))),1!==t)))throw n=zs,dc(e,0),oc(e,r),rc(e,Xe()),n;switch(e.finishedWork=a,e.finishedLanes=r,t){case 0:case 1:throw Error(l(345));case 2:case 5:Cc(e,Ms,Gs);break;case 3:if(oc(e,r),(130023424&r)===r&&10<(t=Os+500-Xe())){if(0!==dt(e,0))break;if(((a=e.suspendedLanes)&r)!==r){ec(),e.pingedLanes|=e.suspendedLanes&a;break}e.timeoutHandle=ra(Cc.bind(null,e,Ms,Gs),t);break}Cc(e,Ms,Gs);break;case 4:if(oc(e,r),(4194240&r)===r)break;for(t=e.eventTimes,a=-1;0<r;){var o=31-it(r);i=1<<o,(o=t[o])>a&&(a=o),r&=~i}if(r=a,10<(r=(120>(r=Xe()-r)?120:480>r?480:1080>r?1080:1920>r?1920:3e3>r?3e3:4320>r?4320:1960*ws(r/1960))-r)){e.timeoutHandle=ra(Cc.bind(null,e,Ms,Gs),r);break}Cc(e,Ms,Gs);break;default:throw Error(l(329))}}}return rc(e,Xe()),e.callbackNode===n?ac.bind(null,e):null}function lc(e,t){var n=$s;return e.current.memoizedState.isDehydrated&&(dc(e,t).flags|=256),2!==(e=gc(e,t))&&(t=Ms,Ms=n,null!==t&&ic(t)),e}function ic(e){null===Ms?Ms=e:Ms.push.apply(Ms,e)}function oc(e,t){for(t&=~_s,t&=~Us,e.suspendedLanes|=t,e.pingedLanes&=~t,e=e.expirationTimes;0<t;){var n=31-it(t),r=1<<n;e[n]=-1,t&=~r}}function sc(e){if(6&Ss)throw Error(l(327));bc();var t=dt(e,0);if(!(1&t))return rc(e,Xe()),null;var n=gc(e,t);if(0!==e.tag&&2===n){var r=ft(e);0!==r&&(t=r,n=lc(e,r))}if(1===n)throw n=zs,dc(e,0),oc(e,t),rc(e,Xe()),n;if(6===n)throw Error(l(345));return e.finishedWork=e.current.alternate,e.finishedLanes=t,Cc(e,Ms,Gs),rc(e,Xe()),null}function cc(e,t){var n=Ss;Ss|=1;try{return e(t)}finally{0===(Ss=n)&&(js=Xe()+500,$a&&ja())}}function uc(e){null!==Ys&&0===Ys.tag&&!(6&Ss)&&bc();var t=Ss;Ss|=1;var n=Ns.transition,r=vt;try{if(Ns.transition=null,vt=1,e)return e()}finally{vt=r,Ns.transition=n,!(6&(Ss=t))&&ja()}}function mc(){Ts=Ds.current,ka(Ds)}function dc(e,t){e.finishedWork=null,e.finishedLanes=0;var n=e.timeoutHandle;if(-1!==n&&(e.timeoutHandle=-1,aa(n)),null!==Rs)for(n=Rs.return;null!==n;){var r=n;switch(tl(r),r.tag){case 1:null!=(r=r.type.childContextTypes)&&Da();break;case 3:ql(),ka(Fa),ka(Sa),ni();break;case 5:Jl(r);break;case 4:ql();break;case 13:case 19:ka(Zl);break;case 10:Nl(r.type._context);break;case 22:case 23:mc()}n=n.return}if(Fs=e,Rs=e=Dc(e.current,null),Ls=Ts=t,Is=0,zs=null,_s=Us=Ps=0,Ms=$s=null,null!==Ll){for(t=0;t<Ll.length;t++)if(null!==(r=(n=Ll[t]).interleaved)){n.interleaved=null;var a=r.next,l=n.pending;if(null!==l){var i=l.next;l.next=a,r.next=i}n.pending=r}Ll=null}return e}function pc(e,t){for(;;){var n=Rs;try{if(Bl(),ri.current=Xi,ci){for(var r=ii.memoizedState;null!==r;){var a=r.queue;null!==a&&(a.pending=null),r=r.next}ci=!1}if(li=0,si=oi=ii=null,ui=!1,mi=0,Bs.current=null,null===n||null===n.return){Is=1,zs=t,Rs=null;break}e:{var i=e,o=n.return,s=n,c=t;if(t=Ls,s.flags|=32768,null!==c&&"object"==typeof c&&"function"==typeof c.then){var u=c,m=s,d=m.tag;if(!(1&m.mode||0!==d&&11!==d&&15!==d)){var p=m.alternate;p?(m.updateQueue=p.updateQueue,m.memoizedState=p.memoizedState,m.lanes=p.lanes):(m.updateQueue=null,m.memoizedState=null)}var f=go(o);if(null!==f){f.flags&=-257,ho(f,o,s,0,t),1&f.mode&&Ao(i,u,t),c=u;var A=(t=f).updateQueue;if(null===A){var g=new Set;g.add(c),t.updateQueue=g}else A.add(c);break e}if(!(1&t)){Ao(i,u,t),Ac();break e}c=Error(l(426))}else if(al&&1&s.mode){var h=go(o);if(null!==h){!(65536&h.flags)&&(h.flags|=256),ho(h,o,s,0,t),fl(so(c,s));break e}}i=c=so(c,s),4!==Is&&(Is=2),null===$s?$s=[i]:$s.push(i),i=o;do{switch(i.tag){case 3:i.flags|=65536,t&=-t,i.lanes|=t,Ol(i,po(0,c,t));break e;case 1:s=c;var y=i.type,v=i.stateNode;if(!(128&i.flags||"function"!=typeof y.getDerivedStateFromError&&(null===v||"function"!=typeof v.componentDidCatch||null!==Ks&&Ks.has(v)))){i.flags|=65536,t&=-t,i.lanes|=t,Ol(i,fo(i,s,t));break e}}i=i.return}while(null!==i)}Ec(n)}catch(e){t=e,Rs===n&&null!==n&&(Rs=n=n.return);continue}break}}function fc(){var e=ks.current;return ks.current=Xi,null===e?Xi:e}function Ac(){0!==Is&&3!==Is&&2!==Is||(Is=4),null===Fs||!(268435455&Ps)&&!(268435455&Us)||oc(Fs,Ls)}function gc(e,t){var n=Ss;Ss|=2;var r=fc();for(Fs===e&&Ls===t||(Gs=null,dc(e,t));;)try{hc();break}catch(t){pc(e,t)}if(Bl(),Ss=n,ks.current=r,null!==Rs)throw Error(l(261));return Fs=null,Ls=0,Is}function hc(){for(;null!==Rs;)vc(Rs)}function yc(){for(;null!==Rs&&!Ve();)vc(Rs)}function vc(e){var t=xs(e.alternate,e,Ts);e.memoizedProps=e.pendingProps,null===t?Ec(e):Rs=t,Bs.current=null}function Ec(e){var t=e;do{var n=t.alternate;if(e=t.return,32768&t.flags){if(null!==(n=Yo(n,t)))return n.flags&=32767,void(Rs=n);if(null===e)return Is=6,void(Rs=null);e.flags|=32768,e.subtreeFlags=0,e.deletions=null}else if(null!==(n=Qo(n,t,Ts)))return void(Rs=n);if(null!==(t=t.sibling))return void(Rs=t);Rs=t=e}while(null!==t);0===Is&&(Is=5)}function Cc(e,t,n){var r=vt,a=Ns.transition;try{Ns.transition=null,vt=1,function(e,t,n,r){do{bc()}while(null!==Ys);if(6&Ss)throw Error(l(327));n=e.finishedWork;var a=e.finishedLanes;if(null===n)return null;if(e.finishedWork=null,e.finishedLanes=0,n===e.current)throw Error(l(177));e.callbackNode=null,e.callbackPriority=0;var i=n.lanes|n.childLanes;if(function(e,t){var n=e.pendingLanes&~t;e.pendingLanes=t,e.suspendedLanes=0,e.pingedLanes=0,e.expiredLanes&=t,e.mutableReadLanes&=t,e.entangledLanes&=t,t=e.entanglements;var r=e.eventTimes;for(e=e.expirationTimes;0<n;){var a=31-it(n),l=1<<a;t[a]=0,r[a]=-1,e[a]=-1,n&=~l}}(e,i),e===Fs&&(Rs=Fs=null,Ls=0),!(2064&n.subtreeFlags)&&!(2064&n.flags)||Qs||(Qs=!0,Fc(tt,(function(){return bc(),null}))),i=!!(15990&n.flags),15990&n.subtreeFlags||i){i=Ns.transition,Ns.transition=null;var o=vt;vt=1;var s=Ss;Ss|=4,Bs.current=null,function(e,t){if(ea=Ht,pr(e=dr())){if("selectionStart"in e)var n={start:e.selectionStart,end:e.selectionEnd};else e:{var r=(n=(n=e.ownerDocument)&&n.defaultView||window).getSelection&&n.getSelection();if(r&&0!==r.rangeCount){n=r.anchorNode;var a=r.anchorOffset,i=r.focusNode;r=r.focusOffset;try{n.nodeType,i.nodeType}catch(e){n=null;break e}var o=0,s=-1,c=-1,u=0,m=0,d=e,p=null;t:for(;;){for(var f;d!==n||0!==a&&3!==d.nodeType||(s=o+a),d!==i||0!==r&&3!==d.nodeType||(c=o+r),3===d.nodeType&&(o+=d.nodeValue.length),null!==(f=d.firstChild);)p=d,d=f;for(;;){if(d===e)break t;if(p===n&&++u===a&&(s=o),p===i&&++m===r&&(c=o),null!==(f=d.nextSibling))break;p=(d=p).parentNode}d=f}n=-1===s||-1===c?null:{start:s,end:c}}else n=null}n=n||{start:0,end:0}}else n=null;for(ta={focusedElem:e,selectionRange:n},Ht=!1,Jo=t;null!==Jo;)if(e=(t=Jo).child,1028&t.subtreeFlags&&null!==e)e.return=t,Jo=e;else for(;null!==Jo;){t=Jo;try{var A=t.alternate;if(1024&t.flags)switch(t.tag){case 0:case 11:case 15:case 5:case 6:case 4:case 17:break;case 1:if(null!==A){var g=A.memoizedProps,h=A.memoizedState,y=t.stateNode,v=y.getSnapshotBeforeUpdate(t.elementType===t.type?g:to(t.type,g),h);y.__reactInternalSnapshotBeforeUpdate=v}break;case 3:var E=t.stateNode.containerInfo;1===E.nodeType?E.textContent="":9===E.nodeType&&E.documentElement&&E.removeChild(E.documentElement);break;default:throw Error(l(163))}}catch(e){wc(t,t.return,e)}if(null!==(e=t.sibling)){e.return=t.return,Jo=e;break}Jo=t.return}A=ts,ts=!1}(e,n),gs(n,e),fr(ta),Ht=!!ea,ta=ea=null,e.current=n,ys(n,e,a),qe(),Ss=s,vt=o,Ns.transition=i}else e.current=n;if(Qs&&(Qs=!1,Ys=e,Vs=a),0===(i=e.pendingLanes)&&(Ks=null),function(e){if(lt&&"function"==typeof lt.onCommitFiberRoot)try{lt.onCommitFiberRoot(at,e,void 0,!(128&~e.current.flags))}catch(e){}}(n.stateNode),rc(e,Xe()),null!==t)for(r=e.onRecoverableError,n=0;n<t.length;n++)r((a=t[n]).value,{componentStack:a.stack,digest:a.digest});if(Hs)throw Hs=!1,e=Ws,Ws=null,e;!!(1&Vs)&&0!==e.tag&&bc(),1&(i=e.pendingLanes)?e===Xs?qs++:(qs=0,Xs=e):qs=0,ja()}(e,t,n,r)}finally{Ns.transition=a,vt=r}return null}function bc(){if(null!==Ys){var e=Et(Vs),t=Ns.transition,n=vt;try{if(Ns.transition=null,vt=16>e?16:e,null===Ys)var r=!1;else{if(e=Ys,Ys=null,Vs=0,6&Ss)throw Error(l(331));var a=Ss;for(Ss|=4,Jo=e.current;null!==Jo;){var i=Jo,o=i.child;if(16&Jo.flags){var s=i.deletions;if(null!==s){for(var c=0;c<s.length;c++){var u=s[c];for(Jo=u;null!==Jo;){var m=Jo;switch(m.tag){case 0:case 11:case 15:ns(8,m,i)}var d=m.child;if(null!==d)d.return=m,Jo=d;else for(;null!==Jo;){var p=(m=Jo).sibling,f=m.return;if(ls(m),m===u){Jo=null;break}if(null!==p){p.return=f,Jo=p;break}Jo=f}}}var A=i.alternate;if(null!==A){var g=A.child;if(null!==g){A.child=null;do{var h=g.sibling;g.sibling=null,g=h}while(null!==g)}}Jo=i}}if(2064&i.subtreeFlags&&null!==o)o.return=i,Jo=o;else e:for(;null!==Jo;){if(2048&(i=Jo).flags)switch(i.tag){case 0:case 11:case 15:ns(9,i,i.return)}var y=i.sibling;if(null!==y){y.return=i.return,Jo=y;break e}Jo=i.return}}var v=e.current;for(Jo=v;null!==Jo;){var E=(o=Jo).child;if(2064&o.subtreeFlags&&null!==E)E.return=o,Jo=E;else e:for(o=v;null!==Jo;){if(2048&(s=Jo).flags)try{switch(s.tag){case 0:case 11:case 15:rs(9,s)}}catch(e){wc(s,s.return,e)}if(s===o){Jo=null;break e}var C=s.sibling;if(null!==C){C.return=s.return,Jo=C;break e}Jo=s.return}}if(Ss=a,ja(),lt&&"function"==typeof lt.onPostCommitFiberRoot)try{lt.onPostCommitFiberRoot(at,e)}catch(e){}r=!0}return r}finally{vt=n,Ns.transition=t}}return!1}function xc(e,t,n){e=$l(e,t=po(0,t=so(n,t),1),1),t=ec(),null!==e&&(ht(e,1,t),rc(e,t))}function wc(e,t,n){if(3===e.tag)xc(e,e,n);else for(;null!==t;){if(3===t.tag){xc(t,e,n);break}if(1===t.tag){var r=t.stateNode;if("function"==typeof t.type.getDerivedStateFromError||"function"==typeof r.componentDidCatch&&(null===Ks||!Ks.has(r))){t=$l(t,e=fo(t,e=so(n,e),1),1),e=ec(),null!==t&&(ht(t,1,e),rc(t,e));break}}t=t.return}}function kc(e,t,n){var r=e.pingCache;null!==r&&r.delete(t),t=ec(),e.pingedLanes|=e.suspendedLanes&n,Fs===e&&(Ls&n)===n&&(4===Is||3===Is&&(130023424&Ls)===Ls&&500>Xe()-Os?dc(e,0):_s|=n),rc(e,t)}function Bc(e,t){0===t&&(1&e.mode?(t=ut,!(130023424&(ut<<=1))&&(ut=4194304)):t=1);var n=ec();null!==(e=Il(e,t))&&(ht(e,t,n),rc(e,n))}function Nc(e){var t=e.memoizedState,n=0;null!==t&&(n=t.retryLane),Bc(e,n)}function Sc(e,t){var n=0;switch(e.tag){case 13:var r=e.stateNode,a=e.memoizedState;null!==a&&(n=a.retryLane);break;case 19:r=e.stateNode;break;default:throw Error(l(314))}null!==r&&r.delete(t),Bc(e,n)}function Fc(e,t){return Qe(e,t)}function Rc(e,t,n,r){this.tag=e,this.key=n,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=t,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=r,this.subtreeFlags=this.flags=0,this.deletions=null,this.childLanes=this.lanes=0,this.alternate=null}function Lc(e,t,n,r){return new Rc(e,t,n,r)}function Tc(e){return!(!(e=e.prototype)||!e.isReactComponent)}function Dc(e,t){var n=e.alternate;return null===n?((n=Lc(e.tag,t,e.key,e.mode)).elementType=e.elementType,n.type=e.type,n.stateNode=e.stateNode,n.alternate=e,e.alternate=n):(n.pendingProps=t,n.type=e.type,n.flags=0,n.subtreeFlags=0,n.deletions=null),n.flags=14680064&e.flags,n.childLanes=e.childLanes,n.lanes=e.lanes,n.child=e.child,n.memoizedProps=e.memoizedProps,n.memoizedState=e.memoizedState,n.updateQueue=e.updateQueue,t=e.dependencies,n.dependencies=null===t?null:{lanes:t.lanes,firstContext:t.firstContext},n.sibling=e.sibling,n.index=e.index,n.ref=e.ref,n}function Ic(e,t,n,r,a,i){var o=2;if(r=e,"function"==typeof e)Tc(e)&&(o=1);else if("string"==typeof e)o=5;else e:switch(e){case x:return zc(n.children,a,i,t);case w:o=8,a|=8;break;case k:return(e=Lc(12,n,t,2|a)).elementType=k,e.lanes=i,e;case F:return(e=Lc(13,n,t,a)).elementType=F,e.lanes=i,e;case R:return(e=Lc(19,n,t,a)).elementType=R,e.lanes=i,e;case D:return Pc(n,a,i,t);default:if("object"==typeof e&&null!==e)switch(e.$$typeof){case B:o=10;break e;case N:o=9;break e;case S:o=11;break e;case L:o=14;break e;case T:o=16,r=null;break e}throw Error(l(130,null==e?e:typeof e,""))}return(t=Lc(o,n,t,a)).elementType=e,t.type=r,t.lanes=i,t}function zc(e,t,n,r){return(e=Lc(7,e,r,t)).lanes=n,e}function Pc(e,t,n,r){return(e=Lc(22,e,r,t)).elementType=D,e.lanes=n,e.stateNode={isHidden:!1},e}function Uc(e,t,n){return(e=Lc(6,e,null,t)).lanes=n,e}function _c(e,t,n){return(t=Lc(4,null!==e.children?e.children:[],e.key,t)).lanes=n,t.stateNode={containerInfo:e.containerInfo,pendingChildren:null,implementation:e.implementation},t}function $c(e,t,n,r,a){this.tag=t,this.containerInfo=e,this.finishedWork=this.pingCache=this.current=this.pendingChildren=null,this.timeoutHandle=-1,this.callbackNode=this.pendingContext=this.context=null,this.callbackPriority=0,this.eventTimes=gt(0),this.expirationTimes=gt(-1),this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0,this.entanglements=gt(0),this.identifierPrefix=r,this.onRecoverableError=a,this.mutableSourceEagerHydrationData=null}function Mc(e,t,n,r,a,l,i,o,s){return e=new $c(e,t,n,o,s),1===t?(t=1,!0===l&&(t|=8)):t=0,l=Lc(3,null,null,t),e.current=l,l.stateNode=e,l.memoizedState={element:r,isDehydrated:n,cache:null,transitions:null,pendingSuspenseBoundaries:null},Pl(l),e}function Oc(e){if(!e)return Na;e:{if(je(e=e._reactInternals)!==e||1!==e.tag)throw Error(l(170));var t=e;do{switch(t.tag){case 3:t=t.stateNode.context;break e;case 1:if(Ta(t.type)){t=t.stateNode.__reactInternalMemoizedMergedChildContext;break e}}t=t.return}while(null!==t);throw Error(l(171))}if(1===e.tag){var n=e.type;if(Ta(n))return za(e,n,t)}return t}function jc(e,t,n,r,a,l,i,o,s){return(e=Mc(n,r,!0,e,0,l,0,o,s)).context=Oc(null),n=e.current,(l=_l(r=ec(),a=tc(n))).callback=null!=t?t:null,$l(n,l,a),e.current.lanes=a,ht(e,a,r),rc(e,r),e}function Gc(e,t,n,r){var a=t.current,l=ec(),i=tc(a);return n=Oc(n),null===t.context?t.context=n:t.pendingContext=n,(t=_l(l,i)).payload={element:e},null!==(r=void 0===r?null:r)&&(t.callback=r),null!==(e=$l(a,t,i))&&(nc(e,a,i,l),Ml(e,a,i)),i}function Hc(e){return(e=e.current).child?(e.child.tag,e.child.stateNode):null}function Wc(e,t){if(null!==(e=e.memoizedState)&&null!==e.dehydrated){var n=e.retryLane;e.retryLane=0!==n&&n<t?n:t}}function Kc(e,t){Wc(e,t),(e=e.alternate)&&Wc(e,t)}xs=function(e,t,n){if(null!==e)if(e.memoizedProps!==t.pendingProps||Fa.current)vo=!0;else{if(!(e.lanes&n||128&t.flags))return vo=!1,function(e,t,n){switch(t.tag){case 3:Fo(t),pl();break;case 5:Xl(t);break;case 1:Ta(t.type)&&Pa(t);break;case 4:Vl(t,t.stateNode.containerInfo);break;case 10:var r=t.type._context,a=t.memoizedProps.value;Ba(bl,r._currentValue),r._currentValue=a;break;case 13:if(null!==(r=t.memoizedState))return null!==r.dehydrated?(Ba(Zl,1&Zl.current),t.flags|=128,null):n&t.child.childLanes?Uo(e,t,n):(Ba(Zl,1&Zl.current),null!==(e=Ho(e,t,n))?e.sibling:null);Ba(Zl,1&Zl.current);break;case 19:if(r=!!(n&t.childLanes),128&e.flags){if(r)return jo(e,t,n);t.flags|=128}if(null!==(a=t.memoizedState)&&(a.rendering=null,a.tail=null,a.lastEffect=null),Ba(Zl,Zl.current),r)break;return null;case 22:case 23:return t.lanes=0,wo(e,t,n)}return Ho(e,t,n)}(e,t,n);vo=!!(131072&e.flags)}else vo=!1,al&&1048576&t.flags&&Za(t,Ka,t.index);switch(t.lanes=0,t.tag){case 2:var r=t.type;Go(e,t),e=t.pendingProps;var a=La(t,Sa.current);Fl(t,n),a=Ai(null,t,r,e,a,n);var i=gi();return t.flags|=1,"object"==typeof a&&null!==a&&"function"==typeof a.render&&void 0===a.$$typeof?(t.tag=1,t.memoizedState=null,t.updateQueue=null,Ta(r)?(i=!0,Pa(t)):i=!1,t.memoizedState=null!==a.state&&void 0!==a.state?a.state:null,Pl(t),a.updater=ro,t.stateNode=a,a._reactInternals=t,oo(t,r,e,n),t=So(null,t,r,!0,i,n)):(t.tag=0,al&&i&&el(t),Eo(null,t,a,n),t=t.child),t;case 16:r=t.elementType;e:{switch(Go(e,t),e=t.pendingProps,r=(a=r._init)(r._payload),t.type=r,a=t.tag=function(e){if("function"==typeof e)return Tc(e)?1:0;if(null!=e){if((e=e.$$typeof)===S)return 11;if(e===L)return 14}return 2}(r),e=to(r,e),a){case 0:t=Bo(null,t,r,e,n);break e;case 1:t=No(null,t,r,e,n);break e;case 11:t=Co(null,t,r,e,n);break e;case 14:t=bo(null,t,r,to(r.type,e),n);break e}throw Error(l(306,r,""))}return t;case 0:return r=t.type,a=t.pendingProps,Bo(e,t,r,a=t.elementType===r?a:to(r,a),n);case 1:return r=t.type,a=t.pendingProps,No(e,t,r,a=t.elementType===r?a:to(r,a),n);case 3:e:{if(Fo(t),null===e)throw Error(l(387));r=t.pendingProps,a=(i=t.memoizedState).element,Ul(e,t),jl(t,r,null,n);var o=t.memoizedState;if(r=o.element,i.isDehydrated){if(i={element:r,isDehydrated:!1,cache:o.cache,pendingSuspenseBoundaries:o.pendingSuspenseBoundaries,transitions:o.transitions},t.updateQueue.baseState=i,t.memoizedState=i,256&t.flags){t=Ro(e,t,r,n,a=so(Error(l(423)),t));break e}if(r!==a){t=Ro(e,t,r,n,a=so(Error(l(424)),t));break e}for(rl=ca(t.stateNode.containerInfo.firstChild),nl=t,al=!0,ll=null,n=Cl(t,null,r,n),t.child=n;n;)n.flags=-3&n.flags|4096,n=n.sibling}else{if(pl(),r===a){t=Ho(e,t,n);break e}Eo(e,t,r,n)}t=t.child}return t;case 5:return Xl(t),null===e&&cl(t),r=t.type,a=t.pendingProps,i=null!==e?e.memoizedProps:null,o=a.children,na(r,a)?o=null:null!==i&&na(r,i)&&(t.flags|=32),ko(e,t),Eo(e,t,o,n),t.child;case 6:return null===e&&cl(t),null;case 13:return Uo(e,t,n);case 4:return Vl(t,t.stateNode.containerInfo),r=t.pendingProps,null===e?t.child=El(t,null,r,n):Eo(e,t,r,n),t.child;case 11:return r=t.type,a=t.pendingProps,Co(e,t,r,a=t.elementType===r?a:to(r,a),n);case 7:return Eo(e,t,t.pendingProps,n),t.child;case 8:case 12:return Eo(e,t,t.pendingProps.children,n),t.child;case 10:e:{if(r=t.type._context,a=t.pendingProps,i=t.memoizedProps,o=a.value,Ba(bl,r._currentValue),r._currentValue=o,null!==i)if(or(i.value,o)){if(i.children===a.children&&!Fa.current){t=Ho(e,t,n);break e}}else for(null!==(i=t.child)&&(i.return=t);null!==i;){var s=i.dependencies;if(null!==s){o=i.child;for(var c=s.firstContext;null!==c;){if(c.context===r){if(1===i.tag){(c=_l(-1,n&-n)).tag=2;var u=i.updateQueue;if(null!==u){var m=(u=u.shared).pending;null===m?c.next=c:(c.next=m.next,m.next=c),u.pending=c}}i.lanes|=n,null!==(c=i.alternate)&&(c.lanes|=n),Sl(i.return,n,t),s.lanes|=n;break}c=c.next}}else if(10===i.tag)o=i.type===t.type?null:i.child;else if(18===i.tag){if(null===(o=i.return))throw Error(l(341));o.lanes|=n,null!==(s=o.alternate)&&(s.lanes|=n),Sl(o,n,t),o=i.sibling}else o=i.child;if(null!==o)o.return=i;else for(o=i;null!==o;){if(o===t){o=null;break}if(null!==(i=o.sibling)){i.return=o.return,o=i;break}o=o.return}i=o}Eo(e,t,a.children,n),t=t.child}return t;case 9:return a=t.type,r=t.pendingProps.children,Fl(t,n),r=r(a=Rl(a)),t.flags|=1,Eo(e,t,r,n),t.child;case 14:return a=to(r=t.type,t.pendingProps),bo(e,t,r,a=to(r.type,a),n);case 15:return xo(e,t,t.type,t.pendingProps,n);case 17:return r=t.type,a=t.pendingProps,a=t.elementType===r?a:to(r,a),Go(e,t),t.tag=1,Ta(r)?(e=!0,Pa(t)):e=!1,Fl(t,n),lo(t,r,a),oo(t,r,a,n),So(null,t,r,!0,e,n);case 19:return jo(e,t,n);case 22:return wo(e,t,n)}throw Error(l(156,t.tag))};var Qc="function"==typeof reportError?reportError:function(e){console.error(e)};function Yc(e){this._internalRoot=e}function Vc(e){this._internalRoot=e}function qc(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType)}function Xc(e){return!(!e||1!==e.nodeType&&9!==e.nodeType&&11!==e.nodeType&&(8!==e.nodeType||" react-mount-point-unstable "!==e.nodeValue))}function Jc(){}function Zc(e,t,n,r,a){var l=n._reactRootContainer;if(l){var i=l;if("function"==typeof a){var o=a;a=function(){var e=Hc(i);o.call(e)}}Gc(t,i,e,a)}else i=function(e,t,n,r,a){if(a){if("function"==typeof r){var l=r;r=function(){var e=Hc(i);l.call(e)}}var i=jc(t,r,e,0,null,!1,0,"",Jc);return e._reactRootContainer=i,e[fa]=i.current,jr(8===e.nodeType?e.parentNode:e),uc(),i}for(;a=e.lastChild;)e.removeChild(a);if("function"==typeof r){var o=r;r=function(){var e=Hc(s);o.call(e)}}var s=Mc(e,0,!1,null,0,!1,0,"",Jc);return e._reactRootContainer=s,e[fa]=s.current,jr(8===e.nodeType?e.parentNode:e),uc((function(){Gc(t,s,n,r)})),s}(n,t,e,a,r);return Hc(i)}Vc.prototype.render=Yc.prototype.render=function(e){var t=this._internalRoot;if(null===t)throw Error(l(409));Gc(e,t,null,null)},Vc.prototype.unmount=Yc.prototype.unmount=function(){var e=this._internalRoot;if(null!==e){this._internalRoot=null;var t=e.containerInfo;uc((function(){Gc(null,e,null,null)})),t[fa]=null}},Vc.prototype.unstable_scheduleHydration=function(e){if(e){var t=wt();e={blockedOn:null,target:e,priority:t};for(var n=0;n<Dt.length&&0!==t&&t<Dt[n].priority;n++);Dt.splice(n,0,e),0===n&&Ut(e)}},Ct=function(e){switch(e.tag){case 3:var t=e.stateNode;if(t.current.memoizedState.isDehydrated){var n=mt(t.pendingLanes);0!==n&&(yt(t,1|n),rc(t,Xe()),!(6&Ss)&&(js=Xe()+500,ja()))}break;case 13:uc((function(){var t=Il(e,1);if(null!==t){var n=ec();nc(t,e,1,n)}})),Kc(e,1)}},bt=function(e){if(13===e.tag){var t=Il(e,134217728);null!==t&&nc(t,e,134217728,ec()),Kc(e,134217728)}},xt=function(e){if(13===e.tag){var t=tc(e),n=Il(e,t);null!==n&&nc(n,e,t,ec()),Kc(e,t)}},wt=function(){return vt},kt=function(e,t){var n=vt;try{return vt=e,t()}finally{vt=n}},be=function(e,t,n){switch(t){case"input":if(J(e,n),t=n.name,"radio"===n.type&&null!=t){for(n=e;n.parentNode;)n=n.parentNode;for(n=n.querySelectorAll("input[name="+JSON.stringify(""+t)+'][type="radio"]'),t=0;t<n.length;t++){var r=n[t];if(r!==e&&r.form===e.form){var a=Ca(r);if(!a)throw Error(l(90));Q(r),J(r,a)}}}break;case"textarea":le(e,n);break;case"select":null!=(t=n.value)&&ne(e,!!n.multiple,t,!1)}},Se=cc,Fe=uc;var eu={usingClientEntryPoint:!1,Events:[va,Ea,Ca,Be,Ne,cc]},tu={findFiberByHostInstance:ya,bundleType:0,version:"18.3.1",rendererPackageName:"react-dom"},nu={bundleType:tu.bundleType,version:tu.version,rendererPackageName:tu.rendererPackageName,rendererConfig:tu.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setErrorHandler:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:E.ReactCurrentDispatcher,findHostInstanceByFiber:function(e){return null===(e=We(e))?null:e.stateNode},findFiberByHostInstance:tu.findFiberByHostInstance||function(){return null},findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null,reconcilerVersion:"18.3.1-next-f1338f8080-20240426"};if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__){var ru=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!ru.isDisabled&&ru.supportsFiber)try{at=ru.inject(nu),lt=ru}catch(ue){}}t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=eu,t.createPortal=function(e,t){var n=2<arguments.length&&void 0!==arguments[2]?arguments[2]:null;if(!qc(t))throw Error(l(200));return function(e,t,n){var r=3<arguments.length&&void 0!==arguments[3]?arguments[3]:null;return{$$typeof:b,key:null==r?null:""+r,children:e,containerInfo:t,implementation:n}}(e,t,null,n)},t.createRoot=function(e,t){if(!qc(e))throw Error(l(299));var n=!1,r="",a=Qc;return null!=t&&(!0===t.unstable_strictMode&&(n=!0),void 0!==t.identifierPrefix&&(r=t.identifierPrefix),void 0!==t.onRecoverableError&&(a=t.onRecoverableError)),t=Mc(e,1,!1,null,0,n,0,r,a),e[fa]=t.current,jr(8===e.nodeType?e.parentNode:e),new Yc(t)},t.findDOMNode=function(e){if(null==e)return null;if(1===e.nodeType)return e;var t=e._reactInternals;if(void 0===t){if("function"==typeof e.render)throw Error(l(188));throw e=Object.keys(e).join(","),Error(l(268,e))}return null===(e=We(t))?null:e.stateNode},t.flushSync=function(e){return uc(e)},t.hydrate=function(e,t,n){if(!Xc(t))throw Error(l(200));return Zc(null,e,t,!0,n)},t.hydrateRoot=function(e,t,n){if(!qc(e))throw Error(l(405));var r=null!=n&&n.hydratedSources||null,a=!1,i="",o=Qc;if(null!=n&&(!0===n.unstable_strictMode&&(a=!0),void 0!==n.identifierPrefix&&(i=n.identifierPrefix),void 0!==n.onRecoverableError&&(o=n.onRecoverableError)),t=jc(t,null,e,1,null!=n?n:null,a,0,i,o),e[fa]=t.current,jr(e),r)for(e=0;e<r.length;e++)a=(a=(n=r[e])._getVersion)(n._source),null==t.mutableSourceEagerHydrationData?t.mutableSourceEagerHydrationData=[n,a]:t.mutableSourceEagerHydrationData.push(n,a);return new Vc(t)},t.render=function(e,t,n){if(!Xc(t))throw Error(l(200));return Zc(null,e,t,!1,n)},t.unmountComponentAtNode=function(e){if(!Xc(e))throw Error(l(40));return!!e._reactRootContainer&&(uc((function(){Zc(null,null,e,!1,(function(){e._reactRootContainer=null,e[fa]=null}))})),!0)},t.unstable_batchedUpdates=cc,t.unstable_renderSubtreeIntoContainer=function(e,t,n,r){if(!Xc(n))throw Error(l(200));if(null==e||void 0===e._reactInternals)throw Error(l(38));return Zc(e,t,n,!1,r)},t.version="18.3.1-next-f1338f8080-20240426"},338:(e,t,n)=>{"use strict";var r=n(961);t.createRoot=r.createRoot,t.hydrateRoot=r.hydrateRoot},961:(e,t,n)=>{"use strict";!function e(){if("undefined"!=typeof __REACT_DEVTOOLS_GLOBAL_HOOK__&&"function"==typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE)try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(e)}catch(e){console.error(e)}}(),e.exports=n(551)},69:(e,t)=>{"use strict";Object.prototype.toString},287:(e,t)=>{"use strict";var n=Symbol.for("react.element"),r=Symbol.for("react.portal"),a=Symbol.for("react.fragment"),l=Symbol.for("react.strict_mode"),i=Symbol.for("react.profiler"),o=Symbol.for("react.provider"),s=Symbol.for("react.context"),c=Symbol.for("react.forward_ref"),u=Symbol.for("react.suspense"),m=Symbol.for("react.memo"),d=Symbol.for("react.lazy"),p=Symbol.iterator,f={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},A=Object.assign,g={};function h(e,t,n){this.props=e,this.context=t,this.refs=g,this.updater=n||f}function y(){}function v(e,t,n){this.props=e,this.context=t,this.refs=g,this.updater=n||f}h.prototype.isReactComponent={},h.prototype.setState=function(e,t){if("object"!=typeof e&&"function"!=typeof e&&null!=e)throw Error("setState(...): takes an object of state variables to update or a function which returns an object of state variables.");this.updater.enqueueSetState(this,e,t,"setState")},h.prototype.forceUpdate=function(e){this.updater.enqueueForceUpdate(this,e,"forceUpdate")},y.prototype=h.prototype;var E=v.prototype=new y;E.constructor=v,A(E,h.prototype),E.isPureReactComponent=!0;var C=Array.isArray,b=Object.prototype.hasOwnProperty,x={current:null},w={key:!0,ref:!0,__self:!0,__source:!0};function k(e,t,r){var a,l={},i=null,o=null;if(null!=t)for(a in void 0!==t.ref&&(o=t.ref),void 0!==t.key&&(i=""+t.key),t)b.call(t,a)&&!w.hasOwnProperty(a)&&(l[a]=t[a]);var s=arguments.length-2;if(1===s)l.children=r;else if(1<s){for(var c=Array(s),u=0;u<s;u++)c[u]=arguments[u+2];l.children=c}if(e&&e.defaultProps)for(a in s=e.defaultProps)void 0===l[a]&&(l[a]=s[a]);return{$$typeof:n,type:e,key:i,ref:o,props:l,_owner:x.current}}function B(e){return"object"==typeof e&&null!==e&&e.$$typeof===n}var N=/\/+/g;function S(e,t){return"object"==typeof e&&null!==e&&null!=e.key?function(e){var t={"=":"=0",":":"=2"};return"$"+e.replace(/[=:]/g,(function(e){return t[e]}))}(""+e.key):t.toString(36)}function F(e,t,a,l,i){var o=typeof e;"undefined"!==o&&"boolean"!==o||(e=null);var s=!1;if(null===e)s=!0;else switch(o){case"string":case"number":s=!0;break;case"object":switch(e.$$typeof){case n:case r:s=!0}}if(s)return i=i(s=e),e=""===l?"."+S(s,0):l,C(i)?(a="",null!=e&&(a=e.replace(N,"$&/")+"/"),F(i,t,a,"",(function(e){return e}))):null!=i&&(B(i)&&(i=function(e,t){return{$$typeof:n,type:e.type,key:t,ref:e.ref,props:e.props,_owner:e._owner}}(i,a+(!i.key||s&&s.key===i.key?"":(""+i.key).replace(N,"$&/")+"/")+e)),t.push(i)),1;if(s=0,l=""===l?".":l+":",C(e))for(var c=0;c<e.length;c++){var u=l+S(o=e[c],c);s+=F(o,t,a,u,i)}else if(u=function(e){return null===e||"object"!=typeof e?null:"function"==typeof(e=p&&e[p]||e["@@iterator"])?e:null}(e),"function"==typeof u)for(e=u.call(e),c=0;!(o=e.next()).done;)s+=F(o=o.value,t,a,u=l+S(o,c++),i);else if("object"===o)throw t=String(e),Error("Objects are not valid as a React child (found: "+("[object Object]"===t?"object with keys {"+Object.keys(e).join(", ")+"}":t)+"). If you meant to render a collection of children, use an array instead.");return s}function R(e,t,n){if(null==e)return e;var r=[],a=0;return F(e,r,"","",(function(e){return t.call(n,e,a++)})),r}function L(e){if(-1===e._status){var t=e._result;(t=t()).then((function(t){0!==e._status&&-1!==e._status||(e._status=1,e._result=t)}),(function(t){0!==e._status&&-1!==e._status||(e._status=2,e._result=t)})),-1===e._status&&(e._status=0,e._result=t)}if(1===e._status)return e._result.default;throw e._result}var T={current:null},D={transition:null},I={ReactCurrentDispatcher:T,ReactCurrentBatchConfig:D,ReactCurrentOwner:x};function z(){throw Error("act(...) is not supported in production builds of React.")}t.Children={map:R,forEach:function(e,t,n){R(e,(function(){t.apply(this,arguments)}),n)},count:function(e){var t=0;return R(e,(function(){t++})),t},toArray:function(e){return R(e,(function(e){return e}))||[]},only:function(e){if(!B(e))throw Error("React.Children.only expected to receive a single React element child.");return e}},t.Component=h,t.Fragment=a,t.Profiler=i,t.PureComponent=v,t.StrictMode=l,t.Suspense=u,t.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED=I,t.act=z,t.cloneElement=function(e,t,r){if(null==e)throw Error("React.cloneElement(...): The argument must be a React element, but you passed "+e+".");var a=A({},e.props),l=e.key,i=e.ref,o=e._owner;if(null!=t){if(void 0!==t.ref&&(i=t.ref,o=x.current),void 0!==t.key&&(l=""+t.key),e.type&&e.type.defaultProps)var s=e.type.defaultProps;for(c in t)b.call(t,c)&&!w.hasOwnProperty(c)&&(a[c]=void 0===t[c]&&void 0!==s?s[c]:t[c])}var c=arguments.length-2;if(1===c)a.children=r;else if(1<c){s=Array(c);for(var u=0;u<c;u++)s[u]=arguments[u+2];a.children=s}return{$$typeof:n,type:e.type,key:l,ref:i,props:a,_owner:o}},t.createContext=function(e){return(e={$$typeof:s,_currentValue:e,_currentValue2:e,_threadCount:0,Provider:null,Consumer:null,_defaultValue:null,_globalName:null}).Provider={$$typeof:o,_context:e},e.Consumer=e},t.createElement=k,t.createFactory=function(e){var t=k.bind(null,e);return t.type=e,t},t.createRef=function(){return{current:null}},t.forwardRef=function(e){return{$$typeof:c,render:e}},t.isValidElement=B,t.lazy=function(e){return{$$typeof:d,_payload:{_status:-1,_result:e},_init:L}},t.memo=function(e,t){return{$$typeof:m,type:e,compare:void 0===t?null:t}},t.startTransition=function(e){var t=D.transition;D.transition={};try{e()}finally{D.transition=t}},t.unstable_act=z,t.useCallback=function(e,t){return T.current.useCallback(e,t)},t.useContext=function(e){return T.current.useContext(e)},t.useDebugValue=function(){},t.useDeferredValue=function(e){return T.current.useDeferredValue(e)},t.useEffect=function(e,t){return T.current.useEffect(e,t)},t.useId=function(){return T.current.useId()},t.useImperativeHandle=function(e,t,n){return T.current.useImperativeHandle(e,t,n)},t.useInsertionEffect=function(e,t){return T.current.useInsertionEffect(e,t)},t.useLayoutEffect=function(e,t){return T.current.useLayoutEffect(e,t)},t.useMemo=function(e,t){return T.current.useMemo(e,t)},t.useReducer=function(e,t,n){return T.current.useReducer(e,t,n)},t.useRef=function(e){return T.current.useRef(e)},t.useState=function(e){return T.current.useState(e)},t.useSyncExternalStore=function(e,t,n){return T.current.useSyncExternalStore(e,t,n)},t.useTransition=function(){return T.current.useTransition()},t.version="18.3.1"},540:(e,t,n)=>{"use strict";e.exports=n(287)},463:(e,t)=>{"use strict";function n(e,t){var n=e.length;e.push(t);e:for(;0<n;){var r=n-1>>>1,a=e[r];if(!(0<l(a,t)))break e;e[r]=t,e[n]=a,n=r}}function r(e){return 0===e.length?null:e[0]}function a(e){if(0===e.length)return null;var t=e[0],n=e.pop();if(n!==t){e[0]=n;e:for(var r=0,a=e.length,i=a>>>1;r<i;){var o=2*(r+1)-1,s=e[o],c=o+1,u=e[c];if(0>l(s,n))c<a&&0>l(u,s)?(e[r]=u,e[c]=n,r=c):(e[r]=s,e[o]=n,r=o);else{if(!(c<a&&0>l(u,n)))break e;e[r]=u,e[c]=n,r=c}}}return t}function l(e,t){var n=e.sortIndex-t.sortIndex;return 0!==n?n:e.id-t.id}if("object"==typeof performance&&"function"==typeof performance.now){var i=performance;t.unstable_now=function(){return i.now()}}else{var o=Date,s=o.now();t.unstable_now=function(){return o.now()-s}}var c=[],u=[],m=1,d=null,p=3,f=!1,A=!1,g=!1,h="function"==typeof setTimeout?setTimeout:null,y="function"==typeof clearTimeout?clearTimeout:null,v="undefined"!=typeof setImmediate?setImmediate:null;function E(e){for(var t=r(u);null!==t;){if(null===t.callback)a(u);else{if(!(t.startTime<=e))break;a(u),t.sortIndex=t.expirationTime,n(c,t)}t=r(u)}}function C(e){if(g=!1,E(e),!A)if(null!==r(c))A=!0,D(b);else{var t=r(u);null!==t&&I(C,t.startTime-e)}}function b(e,n){A=!1,g&&(g=!1,y(B),B=-1),f=!0;var l=p;try{for(E(n),d=r(c);null!==d&&(!(d.expirationTime>n)||e&&!F());){var i=d.callback;if("function"==typeof i){d.callback=null,p=d.priorityLevel;var o=i(d.expirationTime<=n);n=t.unstable_now(),"function"==typeof o?d.callback=o:d===r(c)&&a(c),E(n)}else a(c);d=r(c)}if(null!==d)var s=!0;else{var m=r(u);null!==m&&I(C,m.startTime-n),s=!1}return s}finally{d=null,p=l,f=!1}}"undefined"!=typeof navigator&&void 0!==navigator.scheduling&&void 0!==navigator.scheduling.isInputPending&&navigator.scheduling.isInputPending.bind(navigator.scheduling);var x,w=!1,k=null,B=-1,N=5,S=-1;function F(){return!(t.unstable_now()-S<N)}function R(){if(null!==k){var e=t.unstable_now();S=e;var n=!0;try{n=k(!0,e)}finally{n?x():(w=!1,k=null)}}else w=!1}if("function"==typeof v)x=function(){v(R)};else if("undefined"!=typeof MessageChannel){var L=new MessageChannel,T=L.port2;L.port1.onmessage=R,x=function(){T.postMessage(null)}}else x=function(){h(R,0)};function D(e){k=e,w||(w=!0,x())}function I(e,n){B=h((function(){e(t.unstable_now())}),n)}t.unstable_IdlePriority=5,t.unstable_ImmediatePriority=1,t.unstable_LowPriority=4,t.unstable_NormalPriority=3,t.unstable_Profiling=null,t.unstable_UserBlockingPriority=2,t.unstable_cancelCallback=function(e){e.callback=null},t.unstable_continueExecution=function(){A||f||(A=!0,D(b))},t.unstable_forceFrameRate=function(e){0>e||125<e?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):N=0<e?Math.floor(1e3/e):5},t.unstable_getCurrentPriorityLevel=function(){return p},t.unstable_getFirstCallbackNode=function(){return r(c)},t.unstable_next=function(e){switch(p){case 1:case 2:case 3:var t=3;break;default:t=p}var n=p;p=t;try{return e()}finally{p=n}},t.unstable_pauseExecution=function(){},t.unstable_requestPaint=function(){},t.unstable_runWithPriority=function(e,t){switch(e){case 1:case 2:case 3:case 4:case 5:break;default:e=3}var n=p;p=e;try{return t()}finally{p=n}},t.unstable_scheduleCallback=function(e,a,l){var i=t.unstable_now();switch(l="object"==typeof l&&null!==l&&"number"==typeof(l=l.delay)&&0<l?i+l:i,e){case 1:var o=-1;break;case 2:o=250;break;case 5:o=1073741823;break;case 4:o=1e4;break;default:o=5e3}return e={id:m++,callback:a,priorityLevel:e,startTime:l,expirationTime:o=l+o,sortIndex:-1},l>i?(e.sortIndex=l,n(u,e),null===r(c)&&e===r(u)&&(g?(y(B),B=-1):g=!0,I(C,l-i))):(e.sortIndex=o,n(c,e),A||f||(A=!0,D(b))),e},t.unstable_shouldYield=F,t.unstable_wrapCallback=function(e){var t=p;return function(){var n=p;p=t;try{return e.apply(this,arguments)}finally{p=n}}}},982:(e,t,n)=>{"use strict";e.exports=n(463)},769:(e,t,n)=>{var r=n(72),a=n(100);"string"==typeof(a=a.__esModule?a.default:a)&&(a=[[e.id,a,""]]);r(a,{insert:"head",singleton:!1}),e.exports=a.locals||{}},72:(e,t,n)=>{"use strict";var r,a=function(){var e={};return function(t){if(void 0===e[t]){var n=document.querySelector(t);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}e[t]=n}return e[t]}}(),l=[];function i(e){for(var t=-1,n=0;n<l.length;n++)if(l[n].identifier===e){t=n;break}return t}function o(e,t){for(var n={},r=[],a=0;a<e.length;a++){var o=e[a],s=t.base?o[0]+t.base:o[0],c=n[s]||0,u="".concat(s," ").concat(c);n[s]=c+1;var m=i(u),d={css:o[1],media:o[2],sourceMap:o[3]};-1!==m?(l[m].references++,l[m].updater(d)):l.push({identifier:u,updater:A(d,t),references:1}),r.push(u)}return r}function s(e){var t=document.createElement("style"),r=e.attributes||{};if(void 0===r.nonce){var l=n.nc;l&&(r.nonce=l)}if(Object.keys(r).forEach((function(e){t.setAttribute(e,r[e])})),"function"==typeof e.insert)e.insert(t);else{var i=a(e.insert||"head");if(!i)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");i.appendChild(t)}return t}var c,u=(c=[],function(e,t){return c[e]=t,c.filter(Boolean).join("\n")});function m(e,t,n,r){var a=n?"":r.media?"@media ".concat(r.media," {").concat(r.css,"}"):r.css;if(e.styleSheet)e.styleSheet.cssText=u(t,a);else{var l=document.createTextNode(a),i=e.childNodes;i[t]&&e.removeChild(i[t]),i.length?e.insertBefore(l,i[t]):e.appendChild(l)}}function d(e,t,n){var r=n.css,a=n.media,l=n.sourceMap;if(a?e.setAttribute("media",a):e.removeAttribute("media"),l&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(l))))," */")),e.styleSheet)e.styleSheet.cssText=r;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(r))}}var p=null,f=0;function A(e,t){var n,r,a;if(t.singleton){var l=f++;n=p||(p=s(t)),r=m.bind(null,n,l,!1),a=m.bind(null,n,l,!0)}else n=s(t),r=d.bind(null,n,t),a=function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)};return r(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap)return;r(e=t)}else a()}}e.exports=function(e,t){(t=t||{}).singleton||"boolean"==typeof t.singleton||(t.singleton=(void 0===r&&(r=Boolean(window&&document&&document.all&&!window.atob)),r));var n=o(e=e||[],t);return function(e){if(e=e||[],"[object Array]"===Object.prototype.toString.call(e)){for(var r=0;r<n.length;r++){var a=i(n[r]);l[a].references--}for(var s=o(e,t),c=0;c<n.length;c++){var u=i(n[c]);0===l[u].references&&(l[u].updater(),l.splice(u,1))}n=s}}}}},t={};function n(r){var a=t[r];if(void 0!==a)return a.exports;var l=t[r]={id:r,exports:{}};return e[r](l,l.exports,n),l.exports}n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var r in t)n.o(t,r)&&!n.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},(()=>{var e;n.g.importScripts&&(e=n.g.location+"");var t=n.g.document;if(!e&&t&&(t.currentScript&&(e=t.currentScript.src),!e)){var r=t.getElementsByTagName("script");if(r.length)for(var a=r.length-1;a>-1&&(!e||!/^http(s?):/.test(e));)e=r[a--].src}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),n.p=e})(),n.nc=void 0,(()=>{"use strict";var e=n(540),t=n(338),r=(n(69),"popstate");function a(e={}){return function(e,t,n,a={}){let{window:i=document.defaultView,v5Compat:u=!1}=a,m=i.history,d="POP",p=null,f=A();function A(){return(m.state||{idx:null}).idx}function g(){d="POP";let e=A(),t=null==e?null:e-f;f=e,p&&p({action:d,location:y.location,delta:t})}function h(e){let t="null"!==i.location.origin?i.location.origin:i.location.href,n="string"==typeof e?e:c(e);return n=n.replace(/ $/,"%20"),l(t,`No window.location.(origin|href) available to create URL for href: ${n}`),new URL(n,t)}null==f&&(f=0,m.replaceState({...m.state,idx:f},""));let y={get action(){return d},get location(){return e(i,m)},listen(e){if(p)throw new Error("A history only accepts one active listener");return i.addEventListener(r,g),p=e,()=>{i.removeEventListener(r,g),p=null}},createHref:e=>t(i,e),createURL:h,encodeLocation(e){let t=h(e);return{pathname:t.pathname,search:t.search,hash:t.hash}},push:function(e,t){d="PUSH";let r=s(y.location,e,t);n&&n(r,e),f=A()+1;let a=o(r,f),l=y.createHref(r);try{m.pushState(a,"",l)}catch(e){if(e instanceof DOMException&&"DataCloneError"===e.name)throw e;i.location.assign(l)}u&&p&&p({action:d,location:y.location,delta:1})},replace:function(e,t){d="REPLACE";let r=s(y.location,e,t);n&&n(r,e),f=A();let a=o(r,f),l=y.createHref(r);m.replaceState(a,"",l),u&&p&&p({action:d,location:y.location,delta:0})},go:e=>m.go(e)};return y}((function(e,t){let{pathname:n,search:r,hash:a}=e.location;return s("",{pathname:n,search:r,hash:a},t.state&&t.state.usr||null,t.state&&t.state.key||"default")}),(function(e,t){return"string"==typeof t?t:c(t)}),null,e)}function l(e,t){if(!1===e||null==e)throw new Error(t)}function i(e,t){if(!e){"undefined"!=typeof console&&console.warn(t);try{throw new Error(t)}catch(e){}}}function o(e,t){return{usr:e.state,key:e.key,idx:t}}function s(e,t,n=null,r){return{pathname:"string"==typeof e?e:e.pathname,search:"",hash:"",..."string"==typeof t?u(t):t,state:n,key:t&&t.key||r||Math.random().toString(36).substring(2,10)}}function c({pathname:e="/",search:t="",hash:n=""}){return t&&"?"!==t&&(e+="?"===t.charAt(0)?t:"?"+t),n&&"#"!==n&&(e+="#"===n.charAt(0)?n:"#"+n),e}function u(e){let t={};if(e){let n=e.indexOf("#");n>=0&&(t.hash=e.substring(n),e=e.substring(0,n));let r=e.indexOf("?");r>=0&&(t.search=e.substring(r),e=e.substring(0,r)),e&&(t.pathname=e)}return t}function m(e,t,n="/"){return function(e,t,n,r){let a=k(("string"==typeof t?u(t):t).pathname||"/",n);if(null==a)return null;let l=d(e);!function(e){e.sort(((e,t)=>e.score!==t.score?t.score-e.score:function(e,t){return e.length===t.length&&e.slice(0,-1).every(((e,n)=>e===t[n]))?e[e.length-1]-t[t.length-1]:0}(e.routesMeta.map((e=>e.childrenIndex)),t.routesMeta.map((e=>e.childrenIndex)))))}(l);let i=null;for(let e=0;null==i&&e<l.length;++e){let t=w(a);i=b(l[e],t,r)}return i}(e,t,n,!1)}function d(e,t=[],n=[],r=""){let a=(e,a,i)=>{let o={relativePath:void 0===i?e.path||"":i,caseSensitive:!0===e.caseSensitive,childrenIndex:a,route:e};o.relativePath.startsWith("/")&&(l(o.relativePath.startsWith(r),`Absolute route path "${o.relativePath}" nested under path "${r}" is not valid. An absolute child route path must start with the combined path of all its parent routes.`),o.relativePath=o.relativePath.slice(r.length));let s=F([r,o.relativePath]),c=n.concat(o);e.children&&e.children.length>0&&(l(!0!==e.index,`Index routes must not have child routes. Please remove all child routes from route path "${s}".`),d(e.children,t,c,s)),(null!=e.path||e.index)&&t.push({path:s,score:C(s,e.index),routesMeta:c})};return e.forEach(((e,t)=>{if(""!==e.path&&e.path?.includes("?"))for(let n of p(e.path))a(e,t,n);else a(e,t)})),t}function p(e){let t=e.split("/");if(0===t.length)return[];let[n,...r]=t,a=n.endsWith("?"),l=n.replace(/\?$/,"");if(0===r.length)return a?[l,""]:[l];let i=p(r.join("/")),o=[];return o.push(...i.map((e=>""===e?l:[l,e].join("/")))),a&&o.push(...i),o.map((t=>e.startsWith("/")&&""===t?"/":t))}var f=/^:[\w-]+$/,A=3,g=2,h=1,y=10,v=-2,E=e=>"*"===e;function C(e,t){let n=e.split("/"),r=n.length;return n.some(E)&&(r+=v),t&&(r+=g),n.filter((e=>!E(e))).reduce(((e,t)=>e+(f.test(t)?A:""===t?h:y)),r)}function b(e,t,n=!1){let{routesMeta:r}=e,a={},l="/",i=[];for(let e=0;e<r.length;++e){let o=r[e],s=e===r.length-1,c="/"===l?t:t.slice(l.length)||"/",u=x({path:o.relativePath,caseSensitive:o.caseSensitive,end:s},c),m=o.route;if(!u&&s&&n&&!r[r.length-1].route.index&&(u=x({path:o.relativePath,caseSensitive:o.caseSensitive,end:!1},c)),!u)return null;Object.assign(a,u.params),i.push({params:a,pathname:F([l,u.pathname]),pathnameBase:R(F([l,u.pathnameBase])),route:m}),"/"!==u.pathnameBase&&(l=F([l,u.pathnameBase]))}return i}function x(e,t){"string"==typeof e&&(e={path:e,caseSensitive:!1,end:!0});let[n,r]=function(e,t=!1,n=!0){i("*"===e||!e.endsWith("*")||e.endsWith("/*"),`Route path "${e}" will be treated as if it were "${e.replace(/\*$/,"/*")}" because the \`*\` character must always follow a \`/\` in the pattern. To get rid of this warning, please change the route path to "${e.replace(/\*$/,"/*")}".`);let r=[],a="^"+e.replace(/\/*\*?$/,"").replace(/^\/*/,"/").replace(/[\\.*+^${}|()[\]]/g,"\\$&").replace(/\/:([\w-]+)(\?)?/g,((e,t,n)=>(r.push({paramName:t,isOptional:null!=n}),n?"/?([^\\/]+)?":"/([^\\/]+)")));return e.endsWith("*")?(r.push({paramName:"*"}),a+="*"===e||"/*"===e?"(.*)$":"(?:\\/(.+)|\\/*)$"):n?a+="\\/*$":""!==e&&"/"!==e&&(a+="(?:(?=\\/|$))"),[new RegExp(a,t?void 0:"i"),r]}(e.path,e.caseSensitive,e.end),a=t.match(n);if(!a)return null;let l=a[0],o=l.replace(/(.)\/+$/,"$1"),s=a.slice(1);return{params:r.reduce(((e,{paramName:t,isOptional:n},r)=>{if("*"===t){let e=s[r]||"";o=l.slice(0,l.length-e.length).replace(/(.)\/+$/,"$1")}const a=s[r];return e[t]=n&&!a?void 0:(a||"").replace(/%2F/g,"/"),e}),{}),pathname:l,pathnameBase:o,pattern:e}}function w(e){try{return e.split("/").map((e=>decodeURIComponent(e).replace(/\//g,"%2F"))).join("/")}catch(t){return i(!1,`The URL path "${e}" could not be decoded because it is a malformed URL segment. This is probably due to a bad percent encoding (${t}).`),e}}function k(e,t){if("/"===t)return e;if(!e.toLowerCase().startsWith(t.toLowerCase()))return null;let n=t.endsWith("/")?t.length-1:t.length,r=e.charAt(n);return r&&"/"!==r?null:e.slice(n)||"/"}function B(e,t,n,r){return`Cannot include a '${e}' character in a manually specified \`to.${t}\` field [${JSON.stringify(r)}].  Please separate it out to the \`to.${n}\` field. Alternatively you may provide the full path as a string in <Link to="..."> and the router will parse it for you.`}function N(e){let t=function(e){return e.filter(((e,t)=>0===t||e.route.path&&e.route.path.length>0))}(e);return t.map(((e,n)=>n===t.length-1?e.pathname:e.pathnameBase))}function S(e,t,n,r=!1){let a;"string"==typeof e?a=u(e):(a={...e},l(!a.pathname||!a.pathname.includes("?"),B("?","pathname","search",a)),l(!a.pathname||!a.pathname.includes("#"),B("#","pathname","hash",a)),l(!a.search||!a.search.includes("#"),B("#","search","hash",a)));let i,o=""===e||""===a.pathname,s=o?"/":a.pathname;if(null==s)i=n;else{let e=t.length-1;if(!r&&s.startsWith("..")){let t=s.split("/");for(;".."===t[0];)t.shift(),e-=1;a.pathname=t.join("/")}i=e>=0?t[e]:"/"}let c=function(e,t="/"){let{pathname:n,search:r="",hash:a=""}="string"==typeof e?u(e):e,l=n?n.startsWith("/")?n:function(e,t){let n=t.replace(/\/+$/,"").split("/");return e.split("/").forEach((e=>{".."===e?n.length>1&&n.pop():"."!==e&&n.push(e)})),n.length>1?n.join("/"):"/"}(n,t):t;return{pathname:l,search:L(r),hash:T(a)}}(a,i),m=s&&"/"!==s&&s.endsWith("/"),d=(o||"."===s)&&n.endsWith("/");return c.pathname.endsWith("/")||!m&&!d||(c.pathname+="/"),c}var F=e=>e.join("/").replace(/\/\/+/g,"/"),R=e=>e.replace(/\/+$/,"").replace(/^\/*/,"/"),L=e=>e&&"?"!==e?e.startsWith("?")?e:"?"+e:"",T=e=>e&&"#"!==e?e.startsWith("#")?e:"#"+e:"";function D(e){return null!=e&&"number"==typeof e.status&&"string"==typeof e.statusText&&"boolean"==typeof e.internal&&"data"in e}var I=["POST","PUT","PATCH","DELETE"],z=(new Set(I),["GET",...I]);new Set(z),Symbol("ResetLoaderData");var P=e.createContext(null);P.displayName="DataRouter";var U=e.createContext(null);U.displayName="DataRouterState";var _=e.createContext({isTransitioning:!1});_.displayName="ViewTransition",e.createContext(new Map).displayName="Fetchers",e.createContext(null).displayName="Await";var $=e.createContext(null);$.displayName="Navigation";var M=e.createContext(null);M.displayName="Location";var O=e.createContext({outlet:null,matches:[],isDataRoute:!1});O.displayName="Route";var j=e.createContext(null);j.displayName="RouteError";var G=!0;function H(){return null!=e.useContext(M)}function W(){return l(H(),"useLocation() may be used only in the context of a <Router> component."),e.useContext(M).location}var K="You should call navigate() in a React.useEffect(), not when your component is first rendered.";function Q(t){e.useContext($).static||e.useLayoutEffect(t)}function Y(){let{isDataRoute:t}=e.useContext(O);return t?function(){let{router:t}=function(t){let n=e.useContext(P);return l(n,ne(t)),n}("useNavigate"),n=re("useNavigate"),r=e.useRef(!1);return Q((()=>{r.current=!0})),e.useCallback((async(e,a={})=>{i(r.current,K),r.current&&("number"==typeof e?t.navigate(e):await t.navigate(e,{fromRouteId:n,...a}))}),[t,n])}():function(){l(H(),"useNavigate() may be used only in the context of a <Router> component.");let t=e.useContext(P),{basename:n,navigator:r}=e.useContext($),{matches:a}=e.useContext(O),{pathname:o}=W(),s=JSON.stringify(N(a)),c=e.useRef(!1);return Q((()=>{c.current=!0})),e.useCallback(((e,a={})=>{if(i(c.current,K),!c.current)return;if("number"==typeof e)return void r.go(e);let l=S(e,JSON.parse(s),o,"path"===a.relative);null==t&&"/"!==n&&(l.pathname="/"===l.pathname?n:F([n,l.pathname])),(a.replace?r.replace:r.push)(l,a.state,a)}),[n,r,s,o,t])}()}var V=e.createContext(null);function q(t,{relative:n}={}){let{matches:r}=e.useContext(O),{pathname:a}=W(),l=JSON.stringify(N(r));return e.useMemo((()=>S(t,JSON.parse(l),a,"path"===n)),[t,l,a,n])}function X(t,n,r,a){l(H(),"useRoutes() may be used only in the context of a <Router> component.");let{navigator:o,static:s}=e.useContext($),{matches:c}=e.useContext(O),d=c[c.length-1],p=d?d.params:{},f=d?d.pathname:"/",A=d?d.pathnameBase:"/",g=d&&d.route;if(G){let e=g&&g.path||"";le(f,!g||e.endsWith("*")||e.endsWith("*?"),`You rendered descendant <Routes> (or called \`useRoutes()\`) at "${f}" (under <Route path="${e}">) but the parent route path has no trailing "*". This means if you navigate deeper, the parent won't match anymore and therefore the child routes will never render.\n\nPlease change the parent <Route path="${e}"> to <Route path="${"/"===e?"*":`${e}/*`}">.`)}let h,y=W();if(n){let e="string"==typeof n?u(n):n;l("/"===A||e.pathname?.startsWith(A),`When overriding the location using \`<Routes location>\` or \`useRoutes(routes, location)\`, the location pathname must begin with the portion of the URL pathname that was matched by all parent routes. The current pathname base is "${A}" but pathname "${e.pathname}" was given in the \`location\` prop.`),h=e}else h=y;let v=h.pathname||"/",E=v;if("/"!==A){let e=A.replace(/^\//,"").split("/");E="/"+v.replace(/^\//,"").split("/").slice(e.length).join("/")}let C=!s&&r&&r.matches&&r.matches.length>0?r.matches:m(t,{pathname:E});G&&(i(g||null!=C,`No routes matched location "${h.pathname}${h.search}${h.hash}" `),i(null==C||void 0!==C[C.length-1].route.element||void 0!==C[C.length-1].route.Component||void 0!==C[C.length-1].route.lazy,`Matched leaf route at location "${h.pathname}${h.search}${h.hash}" does not have an element or Component. This means it will render an <Outlet /> with a null value by default resulting in an "empty" page.`));let b=function(t,n=[],r=null){if(null==t){if(!r)return null;if(r.errors)t=r.matches;else{if(0!==n.length||r.initialized||!(r.matches.length>0))return null;t=r.matches}}let a=t,i=r?.errors;if(null!=i){let e=a.findIndex((e=>e.route.id&&void 0!==i?.[e.route.id]));l(e>=0,`Could not find a matching route for errors on route IDs: ${Object.keys(i).join(",")}`),a=a.slice(0,Math.min(a.length,e+1))}let o=!1,s=-1;if(r)for(let e=0;e<a.length;e++){let t=a[e];if((t.route.HydrateFallback||t.route.hydrateFallbackElement)&&(s=e),t.route.id){let{loaderData:e,errors:n}=r,l=t.route.loader&&!e.hasOwnProperty(t.route.id)&&(!n||void 0===n[t.route.id]);if(t.route.lazy||l){o=!0,a=s>=0?a.slice(0,s+1):[a[0]];break}}}return a.reduceRight(((t,l,c)=>{let u,m=!1,d=null,p=null;r&&(u=i&&l.route.id?i[l.route.id]:void 0,d=l.route.errorElement||Z,o&&(s<0&&0===c?(le("route-fallback",!1,"No `HydrateFallback` element provided to render during initial hydration"),m=!0,p=null):s===c&&(m=!0,p=l.route.hydrateFallbackElement||null)));let f=n.concat(a.slice(0,c+1)),A=()=>{let n;return n=u?d:m?p:l.route.Component?e.createElement(l.route.Component,null):l.route.element?l.route.element:t,e.createElement(te,{match:l,routeContext:{outlet:t,matches:f,isDataRoute:null!=r},children:n})};return r&&(l.route.ErrorBoundary||l.route.errorElement||0===c)?e.createElement(ee,{location:r.location,revalidation:r.revalidation,component:d,error:u,children:A(),routeContext:{outlet:null,matches:f,isDataRoute:!0}}):A()}),null)}(C&&C.map((e=>Object.assign({},e,{params:Object.assign({},p,e.params),pathname:F([A,o.encodeLocation?o.encodeLocation(e.pathname).pathname:e.pathname]),pathnameBase:"/"===e.pathnameBase?A:F([A,o.encodeLocation?o.encodeLocation(e.pathnameBase).pathname:e.pathnameBase])}))),c,r,a);return n&&b?e.createElement(M.Provider,{value:{location:{pathname:"/",search:"",hash:"",state:null,key:"default",...h},navigationType:"POP"}},b):b}function J(){let t=function(){let t=e.useContext(j),n=function(t){let n=e.useContext(U);return l(n,ne(t)),n}("useRouteError"),r=re("useRouteError");return void 0!==t?t:n.errors?.[r]}(),n=D(t)?`${t.status} ${t.statusText}`:t instanceof Error?t.message:JSON.stringify(t),r=t instanceof Error?t.stack:null,a="rgba(200,200,200, 0.5)",i={padding:"0.5rem",backgroundColor:a},o={padding:"2px 4px",backgroundColor:a},s=null;return G&&(console.error("Error handled by React Router default ErrorBoundary:",t),s=e.createElement(e.Fragment,null,e.createElement("p",null,"💿 Hey developer 👋"),e.createElement("p",null,"You can provide a way better UX than this when your app throws errors by providing your own ",e.createElement("code",{style:o},"ErrorBoundary")," or"," ",e.createElement("code",{style:o},"errorElement")," prop on your route."))),e.createElement(e.Fragment,null,e.createElement("h2",null,"Unexpected Application Error!"),e.createElement("h3",{style:{fontStyle:"italic"}},n),r?e.createElement("pre",{style:i},r):null,s)}var Z=e.createElement(J,null),ee=class extends e.Component{constructor(e){super(e),this.state={location:e.location,revalidation:e.revalidation,error:e.error}}static getDerivedStateFromError(e){return{error:e}}static getDerivedStateFromProps(e,t){return t.location!==e.location||"idle"!==t.revalidation&&"idle"===e.revalidation?{error:e.error,location:e.location,revalidation:e.revalidation}:{error:void 0!==e.error?e.error:t.error,location:t.location,revalidation:e.revalidation||t.revalidation}}componentDidCatch(e,t){console.error("React Router caught the following error during render",e,t)}render(){return void 0!==this.state.error?e.createElement(O.Provider,{value:this.props.routeContext},e.createElement(j.Provider,{value:this.state.error,children:this.props.component})):this.props.children}};function te({routeContext:t,match:n,children:r}){let a=e.useContext(P);return a&&a.static&&a.staticContext&&(n.route.errorElement||n.route.ErrorBoundary)&&(a.staticContext._deepestRenderedBoundaryId=n.route.id),e.createElement(O.Provider,{value:t},r)}function ne(e){return`${e} must be used within a data router.  See https://reactrouter.com/en/main/routers/picking-a-router.`}function re(t){let n=function(t){let n=e.useContext(O);return l(n,ne(t)),n}(t),r=n.matches[n.matches.length-1];return l(r.route.id,`${t} can only be used on routes that contain a unique "id"`),r.route.id}var ae={};function le(e,t,n){t||ae[e]||(ae[e]=!0,i(!1,n))}function ie(t){return function(t){let n=e.useContext(O).outlet;return n?e.createElement(V.Provider,{value:t},n):n}(t.context)}function oe(e){l(!1,"A <Route> is only ever to be used as the child of <Routes> element, never rendered directly. Please wrap your <Route> in a <Routes>.")}function se({basename:t="/",children:n=null,location:r,navigationType:a="POP",navigator:o,static:s=!1}){l(!H(),"You cannot render a <Router> inside another <Router>. You should never have more than one in your app.");let c=t.replace(/^\/*/,"/"),m=e.useMemo((()=>({basename:c,navigator:o,static:s,future:{}})),[c,o,s]);"string"==typeof r&&(r=u(r));let{pathname:d="/",search:p="",hash:f="",state:A=null,key:g="default"}=r,h=e.useMemo((()=>{let e=k(d,c);return null==e?null:{location:{pathname:e,search:p,hash:f,state:A,key:g},navigationType:a}}),[c,d,p,f,A,g,a]);return i(null!=h,`<Router basename="${c}"> is not able to match the URL "${d}${p}${f}" because it does not start with the basename, so the <Router> won't render anything.`),null==h?null:e.createElement($.Provider,{value:m},e.createElement(M.Provider,{children:n,value:h}))}function ce({children:e,location:t}){return X(ue(e),t)}function ue(t,n=[]){let r=[];return e.Children.forEach(t,((t,a)=>{if(!e.isValidElement(t))return;let i=[...n,a];if(t.type===e.Fragment)return void r.push.apply(r,ue(t.props.children,i));l(t.type===oe,`[${"string"==typeof t.type?t.type:t.type.name}] is not a <Route> component. All component children of <Routes> must be a <Route> or <React.Fragment>`),l(!t.props.index||!t.props.children,"An index route cannot have child routes.");let o={id:t.props.id||i.join("-"),caseSensitive:t.props.caseSensitive,element:t.props.element,Component:t.props.Component,index:t.props.index,path:t.props.path,loader:t.props.loader,action:t.props.action,hydrateFallbackElement:t.props.hydrateFallbackElement,HydrateFallback:t.props.HydrateFallback,errorElement:t.props.errorElement,ErrorBoundary:t.props.ErrorBoundary,hasErrorBoundary:!0===t.props.hasErrorBoundary||null!=t.props.ErrorBoundary||null!=t.props.errorElement,shouldRevalidate:t.props.shouldRevalidate,handle:t.props.handle,lazy:t.props.lazy};t.props.children&&(o.children=ue(t.props.children,i)),r.push(o)})),r}e.memo((function({routes:e,future:t,state:n}){return X(e,void 0,n,t)})),e.Component;var me="get",de="application/x-www-form-urlencoded";function pe(e){return null!=e&&"string"==typeof e.tagName}var fe=null,Ae=new Set(["application/x-www-form-urlencoded","multipart/form-data","text/plain"]);function ge(e){return null==e||Ae.has(e)?e:(i(!1,`"${e}" is not a valid \`encType\` for \`<Form>\`/\`<fetcher.Form>\` and will default to "${de}"`),null)}function he(e,t){if(!1===e||null==e)throw new Error(t)}function ye(e){return null!=e&&(null==e.href?"preload"===e.rel&&"string"==typeof e.imageSrcSet&&"string"==typeof e.imageSizes:"string"==typeof e.rel&&"string"==typeof e.href)}function ve(e,t,n,r,a,l){let i=(e,t)=>!n[t]||e.route.id!==n[t].route.id,o=(e,t)=>n[t].pathname!==e.pathname||n[t].route.path?.endsWith("*")&&n[t].params["*"]!==e.params["*"];return"assets"===l?t.filter(((e,t)=>i(e,t)||o(e,t))):"data"===l?t.filter(((t,l)=>{let s=r.routes[t.route.id];if(!s||!s.hasLoader)return!1;if(i(t,l)||o(t,l))return!0;if(t.route.shouldRevalidate){let r=t.route.shouldRevalidate({currentUrl:new URL(a.pathname+a.search+a.hash,window.origin),currentParams:n[0]?.params||{},nextUrl:new URL(e,window.origin),nextParams:t.params,defaultShouldRevalidate:!0});if("boolean"==typeof r)return r}return!0})):[]}function Ee(e,t,{includeHydrateFallback:n}={}){return r=e.map((e=>{let r=t.routes[e.route.id];if(!r)return[];let a=[r.module];return r.clientActionModule&&(a=a.concat(r.clientActionModule)),r.clientLoaderModule&&(a=a.concat(r.clientLoaderModule)),n&&r.hydrateFallbackModule&&(a=a.concat(r.hydrateFallbackModule)),r.imports&&(a=a.concat(r.imports)),a})).flat(1),[...new Set(r)];var r}function Ce(){let t=e.useContext(P);return he(t,"You must render this element inside a <DataRouterContext.Provider> element"),t}function be(){let t=e.useContext(U);return he(t,"You must render this element inside a <DataRouterStateContext.Provider> element"),t}Symbol("SingleFetchRedirect"),e.Component;var xe=e.createContext(void 0);function we(){let t=e.useContext(xe);return he(t,"You must render this element inside a <HydratedRouter> element"),t}function ke(e,t){return n=>{e&&e(n),n.defaultPrevented||t(n)}}function Be({page:t,...n}){let{router:r}=Ce(),a=e.useMemo((()=>m(r.routes,t,r.basename)),[r.routes,t,r.basename]);return a?e.createElement(Se,{page:t,matches:a,...n}):null}function Ne(t){let{manifest:n,routeModules:r}=we(),[a,l]=e.useState([]);return e.useEffect((()=>{let e=!1;return async function(e,t,n){return function(e,t){let n=new Set,r=new Set(t);return e.reduce(((e,a)=>{if(t&&(null==(l=a)||"string"!=typeof l.page)&&"script"===a.as&&a.href&&r.has(a.href))return e;var l;let i=JSON.stringify(function(e){let t={},n=Object.keys(e).sort();for(let r of n)t[r]=e[r];return t}(a));return n.has(i)||(n.add(i),e.push({key:i,link:a})),e}),[])}((await Promise.all(e.map((async e=>{let r=t.routes[e.route.id];if(r){let e=await async function(e,t){if(e.id in t)return t[e.id];try{let n=await import(e.module);return t[e.id]=n,n}catch(t){return console.error(`Error loading route module \`${e.module}\`, reloading page...`),console.error(t),window.__reactRouterContext&&window.__reactRouterContext.isSpaMode,window.location.reload(),new Promise((()=>{}))}}(r,n);return e.links?e.links():[]}return[]})))).flat(1).filter(ye).filter((e=>"stylesheet"===e.rel||"preload"===e.rel)).map((e=>"stylesheet"===e.rel?{...e,rel:"prefetch",as:"style"}:{...e,rel:"prefetch"})))}(t,n,r).then((t=>{e||l(t)})),()=>{e=!0}}),[t,n,r]),a}function Se({page:t,matches:n,...r}){let a=W(),{manifest:l,routeModules:i}=we(),{loaderData:o,matches:s}=be(),c=e.useMemo((()=>ve(t,n,s,l,a,"data")),[t,n,s,l,a]),u=e.useMemo((()=>ve(t,n,s,l,a,"assets")),[t,n,s,l,a]),m=e.useMemo((()=>{if(t===a.pathname+a.search+a.hash)return[];let e=new Set,r=!1;if(n.forEach((t=>{let n=l.routes[t.route.id];n&&n.hasLoader&&(!c.some((e=>e.route.id===t.route.id))&&t.route.id in o&&i[t.route.id]?.shouldRevalidate||n.hasClientLoader?r=!0:e.add(t.route.id))})),0===e.size)return[];let s=function(e){let t="string"==typeof e?new URL(e,"undefined"==typeof window?"server://singlefetch/":window.location.origin):e;return"/"===t.pathname?t.pathname="_root.data":t.pathname=`${t.pathname.replace(/\/$/,"")}.data`,t}(t);return r&&e.size>0&&s.searchParams.set("_routes",n.filter((t=>e.has(t.route.id))).map((e=>e.route.id)).join(",")),[s.pathname+s.search]}),[o,a,l,c,n,t,i]),d=e.useMemo((()=>Ee(u,l)),[u,l]),p=Ne(u);return e.createElement(e.Fragment,null,m.map((t=>e.createElement("link",{key:t,rel:"prefetch",as:"fetch",href:t,...r}))),d.map((t=>e.createElement("link",{key:t,rel:"modulepreload",href:t,...r}))),p.map((({key:t,link:n})=>e.createElement("link",{key:t,...n}))))}xe.displayName="FrameworkContext";function Fe(...e){return t=>{e.forEach((e=>{"function"==typeof e?e(t):null!=e&&(e.current=t)}))}}var Re="undefined"!=typeof window&&void 0!==window.document&&void 0!==window.document.createElement;try{Re&&(window.__reactRouterVersion="7.2.0")}catch(e){}function Le({basename:t,children:n,window:r}){let l=e.useRef();null==l.current&&(l.current=a({window:r,v5Compat:!0}));let i=l.current,[o,s]=e.useState({action:i.action,location:i.location}),c=e.useCallback((t=>{e.startTransition((()=>s(t)))}),[s]);return e.useLayoutEffect((()=>i.listen(c)),[i,c]),e.createElement(se,{basename:t,children:n,location:o.location,navigationType:o.action,navigator:i})}var Te=/^(?:[a-z][a-z0-9+.-]*:|\/\/)/i,De=e.forwardRef((function({onClick:t,discover:n="render",prefetch:r="none",relative:a,reloadDocument:o,replace:s,state:u,target:m,to:d,preventScrollReset:p,viewTransition:f,...A},g){let h,{basename:y}=e.useContext($),v="string"==typeof d&&Te.test(d),E=!1;if("string"==typeof d&&v&&(h=d,Re))try{let e=new URL(window.location.href),t=d.startsWith("//")?new URL(e.protocol+d):new URL(d),n=k(t.pathname,y);t.origin===e.origin&&null!=n?d=n+t.search+t.hash:E=!0}catch(e){i(!1,`<Link to="${d}"> contains an invalid URL which will probably break when clicked - please update to a valid URL path.`)}let C=function(t,{relative:n}={}){l(H(),"useHref() may be used only in the context of a <Router> component.");let{basename:r,navigator:a}=e.useContext($),{hash:i,pathname:o,search:s}=q(t,{relative:n}),c=o;return"/"!==r&&(c="/"===o?r:F([r,o])),a.createHref({pathname:c,search:s,hash:i})}(d,{relative:a}),[b,x,w]=function(t,n){let r=e.useContext(xe),[a,l]=e.useState(!1),[i,o]=e.useState(!1),{onFocus:s,onBlur:c,onMouseEnter:u,onMouseLeave:m,onTouchStart:d}=n,p=e.useRef(null);e.useEffect((()=>{if("render"===t&&o(!0),"viewport"===t){let e=new IntersectionObserver((e=>{e.forEach((e=>{o(e.isIntersecting)}))}),{threshold:.5});return p.current&&e.observe(p.current),()=>{e.disconnect()}}}),[t]),e.useEffect((()=>{if(a){let e=setTimeout((()=>{o(!0)}),100);return()=>{clearTimeout(e)}}}),[a]);let f=()=>{l(!0)},A=()=>{l(!1),o(!1)};return r?"intent"!==t?[i,p,{}]:[i,p,{onFocus:ke(s,f),onBlur:ke(c,A),onMouseEnter:ke(u,f),onMouseLeave:ke(m,A),onTouchStart:ke(d,f)}]:[!1,p,{}]}(r,A),B=function(t,{target:n,replace:r,state:a,preventScrollReset:l,relative:i,viewTransition:o}={}){let s=Y(),u=W(),m=q(t,{relative:i});return e.useCallback((e=>{if(function(e,t){return!(0!==e.button||t&&"_self"!==t||function(e){return!!(e.metaKey||e.altKey||e.ctrlKey||e.shiftKey)}(e))}(e,n)){e.preventDefault();let n=void 0!==r?r:c(u)===c(m);s(t,{replace:n,state:a,preventScrollReset:l,relative:i,viewTransition:o})}}),[u,s,m,r,a,n,t,l,i,o])}(d,{replace:s,state:u,target:m,preventScrollReset:p,relative:a,viewTransition:f}),N=e.createElement("a",{...A,...w,href:h||C,onClick:E||o?t:function(e){t&&t(e),e.defaultPrevented||B(e)},ref:Fe(g,x),target:m,"data-discover":v||"render"!==n?void 0:"true"});return b&&!v?e.createElement(e.Fragment,null,N,e.createElement(Be,{page:C})):N}));function Ie(t){let n=e.useContext(P);return l(n,function(e){return`${e} must be used within a data router.  See https://reactrouter.com/en/main/routers/picking-a-router.`}(t)),n}De.displayName="Link",e.forwardRef((function({"aria-current":t="page",caseSensitive:n=!1,className:r="",end:a=!1,style:i,to:o,viewTransition:s,children:c,...u},m){let d=q(o,{relative:u.relative}),p=W(),f=e.useContext(U),{navigator:A,basename:g}=e.useContext($),h=null!=f&&function(t,n={}){let r=e.useContext(_);l(null!=r,"`useViewTransitionState` must be used within `react-router-dom`'s `RouterProvider`.  Did you accidentally import `RouterProvider` from `react-router`?");let{basename:a}=Ie("useViewTransitionState"),i=q(t,{relative:n.relative});if(!r.isTransitioning)return!1;let o=k(r.currentLocation.pathname,a)||r.currentLocation.pathname,s=k(r.nextLocation.pathname,a)||r.nextLocation.pathname;return null!=x(i.pathname,s)||null!=x(i.pathname,o)}(d)&&!0===s,y=A.encodeLocation?A.encodeLocation(d).pathname:d.pathname,v=p.pathname,E=f&&f.navigation&&f.navigation.location?f.navigation.location.pathname:null;n||(v=v.toLowerCase(),E=E?E.toLowerCase():null,y=y.toLowerCase()),E&&g&&(E=k(E,g)||E);const C="/"!==y&&y.endsWith("/")?y.length-1:y.length;let b,w=v===y||!a&&v.startsWith(y)&&"/"===v.charAt(C),B=null!=E&&(E===y||!a&&E.startsWith(y)&&"/"===E.charAt(y.length)),N={isActive:w,isPending:B,isTransitioning:h},S=w?t:void 0;b="function"==typeof r?r(N):[r,w?"active":null,B?"pending":null,h?"transitioning":null].filter(Boolean).join(" ");let F="function"==typeof i?i(N):i;return e.createElement(De,{...u,"aria-current":S,className:b,ref:m,style:F,to:o,viewTransition:s},"function"==typeof c?c(N):c)})).displayName="NavLink",e.forwardRef((({discover:t="render",fetcherKey:n,navigate:r,reloadDocument:a,replace:i,state:o,method:s=me,action:u,onSubmit:m,relative:d,preventScrollReset:p,viewTransition:f,...A},g)=>{let h=function(){let{router:t}=Ie("useSubmit"),{basename:n}=e.useContext($),r=re("useRouteId");return e.useCallback((async(e,a={})=>{let{action:l,method:i,encType:o,formData:s,body:c}=function(e,t){let n,r,a,l,i;if(pe(o=e)&&"form"===o.tagName.toLowerCase()){let i=e.getAttribute("action");r=i?k(i,t):null,n=e.getAttribute("method")||me,a=ge(e.getAttribute("enctype"))||de,l=new FormData(e)}else if(function(e){return pe(e)&&"button"===e.tagName.toLowerCase()}(e)||function(e){return pe(e)&&"input"===e.tagName.toLowerCase()}(e)&&("submit"===e.type||"image"===e.type)){let i=e.form;if(null==i)throw new Error('Cannot submit a <button> or <input type="submit"> without a <form>');let o=e.getAttribute("formaction")||i.getAttribute("action");if(r=o?k(o,t):null,n=e.getAttribute("formmethod")||i.getAttribute("method")||me,a=ge(e.getAttribute("formenctype"))||ge(i.getAttribute("enctype"))||de,l=new FormData(i,e),!function(){if(null===fe)try{new FormData(document.createElement("form"),0),fe=!1}catch(e){fe=!0}return fe}()){let{name:t,type:n,value:r}=e;if("image"===n){let e=t?`${t}.`:"";l.append(`${e}x`,"0"),l.append(`${e}y`,"0")}else t&&l.append(t,r)}}else{if(pe(e))throw new Error('Cannot submit element that is not <form>, <button>, or <input type="submit|image">');n=me,r=null,a=de,i=e}var o;return l&&"text/plain"===a&&(i=l,l=void 0),{action:r,method:n.toLowerCase(),encType:a,formData:l,body:i}}(e,n);if(!1===a.navigate){let e=a.fetcherKey||Pe();await t.fetch(e,r,a.action||l,{preventScrollReset:a.preventScrollReset,formData:s,body:c,formMethod:a.method||i,formEncType:a.encType||o,flushSync:a.flushSync})}else await t.navigate(a.action||l,{preventScrollReset:a.preventScrollReset,formData:s,body:c,formMethod:a.method||i,formEncType:a.encType||o,replace:a.replace,state:a.state,fromRouteId:r,flushSync:a.flushSync,viewTransition:a.viewTransition})}),[t,n,r])}(),y=function(t,{relative:n}={}){let{basename:r}=e.useContext($),a=e.useContext(O);l(a,"useFormAction must be used inside a RouteContext");let[i]=a.matches.slice(-1),o={...q(t||".",{relative:n})},s=W();if(null==t){o.search=s.search;let e=new URLSearchParams(o.search),t=e.getAll("index");if(t.some((e=>""===e))){e.delete("index"),t.filter((e=>e)).forEach((t=>e.append("index",t)));let n=e.toString();o.search=n?`?${n}`:""}}return t&&"."!==t||!i.route.index||(o.search=o.search?o.search.replace(/^\?/,"?index&"):"?index"),"/"!==r&&(o.pathname="/"===o.pathname?r:F([r,o.pathname])),c(o)}(u,{relative:d}),v="get"===s.toLowerCase()?"get":"post",E="string"==typeof u&&Te.test(u);return e.createElement("form",{ref:g,method:v,action:y,onSubmit:a?m:e=>{if(m&&m(e),e.defaultPrevented)return;e.preventDefault();let t=e.nativeEvent.submitter,a=t?.getAttribute("formmethod")||s;h(t||e.currentTarget,{fetcherKey:n,method:a,navigate:r,replace:i,state:o,relative:d,preventScrollReset:p,viewTransition:f})},...A,"data-discover":E||"render"!==t?void 0:"true"})})).displayName="Form";var ze=0,Pe=()=>`__${String(++ze)}__`;new TextEncoder;const Ue=function(t){var n=t.btnInfo,r=n.path,a=void 0!==r&&r,l=n.name,i=n.style,o=n.onClick;return e.createElement(e.Fragment,null,a?e.createElement(De,{to:a},e.createElement("button",{id:l.toLowerCase(),className:"show-btn ".concat(i),type:"button",onClick:o},l)):e.createElement("button",{id:l.toLowerCase(),className:"show-btn ".concat(i),type:"button",onClick:o},l))},_e=function(t){var n=t.btnArr,r=t.isSolution,a=t.stack,l=void 0!==a&&a,i=n.map((function(t,n){return e.createElement(Ue,{key:n,btnInfo:t})}));return e.createElement("div",{className:"button-container".concat(l?" stack":"").concat(r?" solution":"")},i)},$e=n.p+"970ad381a59d13c46205a044d5363190.png",Me=function(t){var n,r=t.setMode,a=t.clues,l=t.setclueId,i=t.completedClues,o=!!(i&&i.length>0),s=(i.reduce((function(e,t){return e+t.guesses}),0)/i.length).toFixed(0),c=(i.reduce((function(e,t){return e+t.hints}),0)/i.length).toFixed(0),u=e.createElement("div",{className:"title-stats"},e.createElement("p",{className:"stats-clues"},"Clues solved: ",e.createElement("span",null,i.length)),e.createElement("p",{className:"stats-hints"},"Average hints: ",e.createElement("span",null,c)),e.createElement("p",{className:"stats-guesses"},"Average guesses: ",e.createElement("span",null,s))),m=e.createElement("div",{className:"title-intro"},e.createElement("p",null,"Learn Cryptic is a tool to help you learn about, practice, and solve cryptic crossword clues."),e.createElement("p",null,"This is for both beginners who are wanting to learn about cryptic crosswords and those already familiar with this wonderful form of wordplay.")),d=(new Date,a.find((function(e){var t=new Date(e.release),n=new Date,r=new Date(t.getFullYear(),t.getMonth(),t.getDate()),a=new Date(n.getFullYear(),n.getMonth(),n.getDate());return r.getTime()===a.getTime()}))),p={learn:{path:"/learn",name:"Learn about cryptics",style:"alt",onClick:function(){r("learn")}},todayClue:{path:"/clues/clue",name:"Play today's clue",style:"primary",onClick:function(){l(d.id),r("playing")}},allClues:{path:"/clues",name:"See all clues",style:"secondary",onClick:function(){r("archive")}},viewClues:{path:"/clues",name:"View clues",style:"primary",onClick:function(){r("archive")}}};return n=o?d?[p.learn,p.todayClue,p.allClues]:[p.learn,p.viewClues]:d?[p.learn,p.todayClue]:[p.learn,p.viewClues],e.createElement("div",{className:"title container"},e.createElement("img",{className:"title-gif",src:$e}),o?u:m,e.createElement("div",{className:"title-actions"},e.createElement(_e,{btnArr:n,stack:!0})))},Oe=n.p+"1bc27782bd51e8a2c1a14d4b9578bf31.png",je=function(t){var n=t.setMode,r=t.setNextHint,a=t.setShowMessage,l=t.setclueId,i=t.setInput,o=t.setReturnLearn,s=t.setStats;return e.createElement(e.Fragment,null,e.createElement("div",{className:"top-bar"},e.createElement("div",{className:"container"},e.createElement(De,{to:"/"},e.createElement("img",{src:Oe,onClick:function(){a(!1),r(0),n("title"),l(),i([]),s({guesses:0,hints:0,how:""}),o(!1)}})))),e.createElement(ie,null))},Ge=n.p+"bd952b21bad1f05324a3ecbfc841d796.png",He=n.p+"3275a8810949695da6686e0735a704a0.png",We=n.p+"e777dfa694b93f88a5dbedd47ea1270b.jpg";function Ke(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=Array(t);n<t;n++)r[n]=e[n];return r}const Qe=function(t){var n,r,a=t.setMode,l=t.setclueId,i=t.setInput,o=t.setCheckAns,s=t.typeViewed,c=t.setTypeViewed,u=[{path:"/clues/clue",name:"Try a clue",style:"primary",onClick:function(){l(208),i([]),o(!1),a("playing")}}],m=(n=(0,e.useState)("learn"),r=2,function(e){if(Array.isArray(e))return e}(n)||function(e,t){var n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=n){var r,a,l,i,o=[],s=!0,c=!1;try{if(l=(n=n.call(e)).next,0===t){if(Object(n)!==n)return;s=!1}else for(;!(s=(r=l.call(n)).done)&&(o.push(r.value),o.length!==t);s=!0);}catch(e){c=!0,a=e}finally{try{if(!s&&null!=n.return&&(i=n.return(),Object(i)!==i))return}finally{if(c)throw a}}return o}}(n,r)||function(e,t){if(e){if("string"==typeof e)return Ke(e,t);var n={}.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?Ke(e,t):void 0}}(n,r)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),d=m[0],p=(m[1],(0,e.useRef)(null));(0,e.useEffect)((function(){}),[d]);var f=[{name:"Anagram",id:"anagram"},{name:"Charade",id:"charade"},{name:"Container",id:"container"},{name:"Deletion",id:"deletion"},{name:"Double Definition",id:"double-definition"},{name:"Hidden Word",id:"hidden-word"},{name:"Homophone",id:"homophone"},{name:"Initialism",id:"initialism"},{name:"Letter Bank",id:"letter-bank"},{name:"Reversal",id:"reversal"},{name:"Spoonerism",id:"spoonerism"},{name:"& Lit.",id:"lit"},{name:"Combination",id:"combination"}].map((function(t){var n=s.find((function(e){return e==t.name}));return e.createElement("li",{className:n?"viewed":"",onClick:function(){return function(e){c(e.name)}(t)}},e.createElement(De,{to:t.id},t.name))}));return e.createElement(e.Fragment,null,e.createElement("div",{className:"learn container"},e.createElement("div",{className:"learn-section"},e.createElement("h2",{className:"learn-question"},"What is a cryptic crossword?"),e.createElement("p",{className:"learn-answer"},"A cryptic crossword is a type of crossword in which each clue is a puzzle in itself, often involving wordplay, anagrams, homophones, hidden words, or other linguistic tricks. Unlike standard crosswords, where clues are straightforward definitions, cryptic clues typically have two parts:"),e.createElement("ul",{className:"no-dec"},e.createElement("li",{className:"mt-3"},e.createElement("p",null,e.createElement("strong",null,"Definition")),e.createElement("p",null,"A straight or slightly disguised definition of the answer. This will ",e.createElement("span",{className:"underline"},"always")," be at the start or end of the clue.")),e.createElement("li",{className:"mt-3"},e.createElement("p",null,e.createElement("strong",null,"Wordplay")),e.createElement("p",null,"A cryptic hint involving anagrams, reversals, hidden words, homophones, or other forms of word manipulation."))),e.createElement("p",null,e.createElement("strong",null,"Example")),e.createElement("div",{className:"example-container"},e.createElement("div",{className:"example"},e.createElement("img",{src:We})),e.createElement("div",{className:"explanation"},e.createElement("ul",{className:"mt-0"},e.createElement("li",null,e.createElement("strong",null,"Frogs")," can be ",e.createElement("strong",null,"toads")),e.createElement("li",null,e.createElement("strong",null,"saw")," can be ",e.createElement("strong",null,"tool"))),e.createElement("p",{className:"text-center"},e.createElement("strong",null,"toads")," + ",e.createElement("strong",null,"tool")," = ",e.createElement("strong",null,"toadstool")),e.createElement("div",{className:"solution"},e.createElement("span",{className:"letter"},"t"),e.createElement("span",{className:"letter"},"o"),e.createElement("span",{className:"letter"},"a"),e.createElement("span",{className:"letter"},"d"),e.createElement("span",{className:"letter"},"s"),e.createElement("span",{className:"letter"},"t"),e.createElement("span",{className:"letter"},"o"),e.createElement("span",{className:"letter"},"o"),e.createElement("span",{className:"letter"},"l"))))),e.createElement("div",{className:"learn-section"},e.createElement("h2",{className:"learn-question"},"What is Learn Cryptic?"),e.createElement("p",{className:"learn-answer"},"Learn Cryptic is a game to help you learn about and practice cryptic clues. There are two ways you can get help with solving clues:"),e.createElement("ul",{className:"no-dec"},e.createElement("li",{className:"mt-3"},e.createElement("p",null,e.createElement("strong",null,"Wordplay used")),e.createElement("p",null,"At the top of each clue you will see purple pills indicating the type(s) of wordplay used in this clue. Tapping on these will reveal more information about that type."),e.createElement("img",{className:"border",src:Ge})),e.createElement("li",{className:"mt-3"},e.createElement("p",null,e.createElement("strong",null,"Hints")),e.createElement("p",null,'The "Show hint" and "Reveal solution" buttons in the clue provide direct guidance as to what steps you will need to take to find the solution.'),e.createElement("img",{className:"border",src:He})))),e.createElement("div",{ref:p,className:"learn-section"},e.createElement("h2",{className:"learn-question"},"What differnt types of wordplay will I find?"),e.createElement("p",{className:"learn-answer"},"Tap a type below to learn more:"),e.createElement("ul",{className:"learn-types no-dec"},f)),e.createElement("div",{className:"learn-section"},e.createElement("h2",{className:"learn-question"},"Anything else I need to know?"),e.createElement("p",{className:"learn-answer"},"Now that you understand the basics of how cryptic clues are constructed and are familiar with some of the different types of hints, dive in and try a few!")),e.createElement("div",{className:"learn-section"},e.createElement(_e,{btnArr:u,stack:!0}))))},Ye=n.p+"1cde9b2085e0e3cfec878a7b5d450ec6.svg",Ve=n.p+"59e1dc9e88a9b17f4bc3c2f01e24e4a9.svg",qe=n.p+"16d26d2157093276c85bb421a3b80f17.svg",Xe=n.p+"6da8c4979ed49be661bebe3423246ec2.svg",Je=function(t){var n=t.clues,r=t.setclueId,a=t.setMode,l=t.completedClues,i=t.setInput,o=t.setCheckAns,s=(0,e.useRef)(n.map((function(){return(0,e.createRef)()}))),c=n.filter((function(e){return t=e.release,n=new Date(t),r=new Date,a=new Date(n.getFullYear(),n.getMonth(),n.getDate()),l=new Date(r.getFullYear(),r.getMonth(),r.getDate()),a.getTime()===l.getTime()||a.getTime()<l.getTime();var t,n,r,a,l}));return c=c.map((function(t,n){var c=function(e){return new Date(e)},u=l.find((function(e){return e.id==t.id})),m=u&&e.createElement(e.Fragment,null,e.createElement("div",{className:"tile-stats"},e.createElement("span",{className:"stat-hints"},e.createElement("span",{className:"stat"},u.hints)," h"),e.createElement("span",{className:"stat-guesses"},e.createElement("span",{className:"stat"},u.guesses)," g")));return e.createElement("div",{className:"archive-clue".concat(u?" completed":""," ").concat(u&&u.how),key:t.id},e.createElement("div",{className:"archive-release"},e.createElement("span",null,e.createElement("span",null,c(t.release).toLocaleString("en-us",{month:"short"}))," ",e.createElement("span",null,c(t.release).getDate())),e.createElement("br",null),e.createElement("span",null,c(t.release).getFullYear())),e.createElement("div",{id:t.id,className:"archive-tile",ref:s.current[n],onClick:function(){return e=s.current[n],r(e.current.id),i([]),o(!1),void a("playing");var e}},e.createElement("div",{className:"tile-img-stats"},m,e.createElement("img",{className:"tile-difficulty",src:function(e){switch(Number(e)){case 1:default:return Ye;case 2:return Ve;case 3:return qe;case 4:return Xe}}(t.difficulty),title:t.difficulty,"aria-label":"difficulty"})),e.createElement("span",{className:"tile-name"},t.clue.value)))})),e.createElement("div",{className:"archive container"},c)},Ze=JSON.parse('[{"type":"& Lit.","description":"Entire clue serves as definition.","example":"I only appear manipulated! → player piano"},{"type":"Anagram","description":"Scramble letters in one or more words.","example":"triangle → relating"},{"type":"Charade","description":"Arrange clued parts of word(s) in order.","example":"fri + ends + hip → friendship"},{"type":"Container","description":"Place word or letter(s) inside another word or set of letters.","example":"a + reminder → remainder"},{"type":"Deletion","description":"Delete letter or set of letters from beginning, middle, or end of word.","example":"excited - c → exited"},{"type":"Double Definition","description":"Two definitions apply to one word, or two different words are spelled the same.","example":"drop season → fall"},{"type":"Hidden Word","description":"Answer is embedded in clue.","example":"...science lab, or a test... → elaborate"},{"type":"Homophone","description":"Words and/or letter(s), when spoken aloud, sound like answer.","example":"to wield → two-wheeled"},{"type":"Initialism","description":"Use first (or last, or even middle) letters of series of words.","example":"sights that astronomers really savor → stars"},{"type":"Letter Bank","description":"Similar to anagram, but letters from source word can be repeated.","example":"retain → entertainer"},{"type":"Reversal","description":"Reverse letters to make new word(s).","example":"rail → liar"},{"type":"Spoonerism","description":"Swap sounds at beginnings of two words.","example":"shoving leopard → loving shepherd"}]'),et=function(t){var n=t.text,r=Ze.find((function(e){return e.type.toUpperCase()==n.toUpperCase()}));return e.createElement("div",{role:"tooltip",className:"tooltip",id:n},e.createElement("p",{className:"tooltip-description"},r.description),e.createElement("p",{className:"tooltip-example"},r.example))};function tt(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=Array(t);n<t;n++)r[n]=e[n];return r}const nt=function(e,t,n){var r;if(!Array.isArray(e))return r="direct"==n.category?t.clue.value.indexOf(" ".concat(e))+1:t.clue.value.indexOf(e),t.clue.ref.current.slice(r,r+e.length);var a=e.map((function(e){return t.clue.value.indexOf(e)}));if("particle"!=n.category&&"container"!=n.category&&"anagram"!=n.category&&"letter bank"!=n.category||!Array.isArray(a)||-1!=a[0]){var l=[];return a.forEach((function(n,r){var a;l.push.apply(l,function(e){if(Array.isArray(e))return tt(e)}(a=t.clue.ref.current.slice(n,n+e[r].length))||function(e){if("undefined"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}(a)||function(e,t){if(e){if("string"==typeof e)return tt(e,t);var n={}.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?tt(e,t):void 0}}(a)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}())})),l}t.hints.find((function(t){if(t.end&&t.end.value[0]===e[0])return t.addLetters.ref.current}))},rt=function(e){var t=[" ",",","-","_",":",":",'"',"'"];return"string"==typeof e?(e=e.split("")).filter((function(e){return!t.includes(e)})).join(""):e.filter((function(e){return!t.includes(e.current.textContent)}))};function at(e){return function(e){if(Array.isArray(e))return lt(e)}(e)||function(e){if("undefined"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}(e)||function(e,t){if(e){if("string"==typeof e)return lt(e,t);var n={}.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?lt(e,t):void 0}}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function lt(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=Array(t);n<t;n++)r[n]=e[n];return r}function it(e){return function(e){if(Array.isArray(e))return ot(e)}(e)||function(e){if("undefined"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}(e)||function(e,t){if(e){if("string"==typeof e)return ot(e,t);var n={}.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?ot(e,t):void 0}}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function ot(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=Array(t);n<t;n++)r[n]=e[n];return r}const st=function(e){var t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2?arguments[2]:void 0;e.forEach((function(e){n?"rgb(225, 216, 255)"==e.current.style.backgroundColor&&(e.current.style.backgroundColor="#E2E2E2"):e.current.style.backgroundColor=t||"#E1D8FF"}))},ct=function(e){var t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2&&void 0!==arguments[2]&&arguments[2],r=function(){return t||"#7457D6"};Array.isArray(e)?e.forEach((function(e){n?"rgb(116, 87, 214)"==e.current.style.color&&(e.current.style.color="#0B0B0B"):(e.current.style.color=r(),e.current.style.opacity=1)})):n?"rgb(116, 87, 214)"==e.current.style.color&&(e.current.style.color="#0B0B0B"):(e.current.style.color=r(),e.current.style.opacity=1)},ut=function(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"shuffle",r=arguments.length>3&&void 0!==arguments[3]&&arguments[3];e=rt(e),r&&(e=e.reverse()),e.forEach((function(e,r){var a=t.find((function(t){return t.current.textContent.toUpperCase()==e.current.textContent.toUpperCase()})),l=t.findIndex((function(t){return t.current.textContent.toUpperCase()==e.current.textContent.toUpperCase()}));switch(t.splice(l,1),e.current.style.textTransform="uppercase",e.current.style.top="".concat(Number(a.current.style.top.slice(0,-2)),"px"),e.current.style.left="".concat(Number(a.current.style.left.slice(0,-2)),"px"),n){case"shuffle":e.current.style.transition="top 2.5s ease ".concat(750*Math.random()+250,"ms, left 2.5s ease ").concat(750*Math.random()+250,"ms");break;case"sequence":e.current.style.transition="top 1.5s ease ".concat(200*r,"ms, left 1.5s ease ").concat(200*r,"ms");break;default:e.current.style.transition="top 2.5s ease, left 2.5s ease"}}))};function mt(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=Array(t);n<t;n++)r[n]=e[n];return r}const dt=function(e,t,n,r){if(n&&!r){var a=e.hints[t];if(0==t)a.ref.forEach((function(e){e.current.classList.add("underline")}));else{var l=e.hints[t-1];switch(a.category){case"anagram":case"letter bank":case"hidden word":st(a.ref),ct(a.end.ref,"#ccc"),ct(a.addLetters.ref.current);break;case"ag-2":ct(l.addLetters.ref.current,"#ccc"),ct(a.addLetters.ref.current.slice(0,a.end.value[0].length),"#0b0b0b"),ut(a.addLetters.ref.current.slice(0,a.end.value[0].length),a.addLetters.ref.current.slice(a.end.value[0].length));break;case"lb-2":ct(l.addLetters.ref.current,"#ccc"),ct(a.addLetters.ref.current.slice(0,a.end.value[1].length),"#0b0b0b"),ut(a.addLetters.ref.current.slice(0,a.end.value[1].length),a.addLetters.ref.current.slice(a.end.value[1].length));break;case"charade":case"symbol":case"synonym":case"direct":case"particle":st(a.ref),ct(a.addLetters.ref.current);break;case"container":st(a.ref),e.hints.some((function(e){return"container"==e.category||(e.addLetters&&ct(e.addLetters.ref.current,"#ccc"),!1)})),ct(a.addLetters.ref.current.slice(0,a.end.value.join("").split("").length),"#222"),ut(a.addLetters.ref.current.slice(0,a.end.value.join("").split("").length),a.addLetters.ref.current.slice(a.end.value.join("").split("").length),!1);break;case"dd-2":break;case"deletion":st(a.ref),ct(l.addLetters.ref.current,"#ccc");var i=l.addLetters.value.join("").toUpperCase().indexOf(a.end.value[1].toUpperCase());a.end.value.length>2?(ct(l.addLetters.ref.current.slice(0,a.end.value[1].length),"#0b0b0b"),ct(l.addLetters.ref.current.slice(-a.end.value[2].length),"#0b0b0b")):i>=0&&ct(l.addLetters.ref.current.slice(i,i+a.end.value[1].length),"#0b0b0b");break;case"delete even":st(a.ref);var o=l.addLetters.ref.current.filter((function(e,t){return t%2!=0}));console.log(o),ct(o,"#ccc");break;case"delete odd":st(a.ref);var s=l.addLetters.ref.current.filter((function(e,t){return t%2==0}));console.log(s),ct(s,"#ccc");break;case"hw-2":ct(l.addLetters.ref.current,"#ccc"),ct(a.addLetters.ref.current);break;case"homophone":st(a.ref),ct(a.addLetters.ref.current[0]);break;case"hp-2":ct(l.addLetters.ref.current[1]);break;case"initialism":default:st(a.ref),ct(a.end.ref);break;case"in-2":ct(l.end.ref,"#ccc");var c=l.end.value[0].split(" ").map((function(e){return e.length+1}));c.pop(),(c=[0].concat((f=c,function(e){if(Array.isArray(e))return mt(e)}(f)||function(e){if("undefined"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}(f)||function(e,t){if(e){if("string"==typeof e)return mt(e,t);var n={}.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?mt(e,t):void 0}}(f)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()))).forEach((function(e){ct(l.end.ref[e]),l.end.ref.splice(0,e)}));break;case"reversal":st(a.ref),ct(l.addLetters.ref.current,"#ccc");var u=[],m=[];e.hints.some((function(e){return"reversal"==e.category||(e.addLetters&&m.push(e),!1)})),m=m.map((function(e){return e.addLetters.ref.current})).flat().reverse();var d=a.addLetters.ref.current.slice(0,a.end.value[0].length);(d=d.filter((function(e){return" "!==e.current.textContent})).reverse()).forEach((function(e){var t=m.findIndex((function(t){return t.current.textContent==e.current.textContent}));u.push(m[t]),m.splice(t,1)})),ct(u,"#ccc"),ct(a.addLetters.ref.current.slice(0,a.end.value[0].length),"#222"),ut(a.addLetters.ref.current.slice(0,a.end.value[0].length),a.addLetters.ref.current.slice(a.end.value[0].length),"sequence",!0);break;case"spoonerism":st(a.ref),ct(a.addLetters.ref.current),ct(e.spoon)}}a.reveals&&(setTimeout((function(){return e.solution.sectionRef.current.classList.add("hide-input")}),2500),setTimeout((function(){return e.solution.sectionRef.current.classList.add("reveal-solution")}),2500),setTimeout((function(){return e.source.ref.current.classList.add("show")}),3e3))}else if(!n&&!r&&t>1){var p=e.hints[t-1];try{st(p.ref,!1,!0),p.end?ct(p.end.ref,!1,!0):ct(p.ref,!1,!0),"deletion"!==p.category?ct(p.addLetters.ref.current,!1,!0):ct(e.hints[t-2].addLetters.ref.current,!1,!0)}catch(e){console.log(e)}}var f},pt=function(t,n,r,a){t.clue.ref=(0,e.useRef)(t.clue.arr.map((function(){return(0,e.createRef)()}))),t.clue.sectionRef=(0,e.useRef)(),t.solution.ref=(0,e.useRef)(t.solution.arr.map((function(){return(0,e.createRef)()}))),t.solution.sectionRef=(0,e.useRef)(),t.solution.length.ref=(0,e.useRef)(),t.source.ref=(0,e.useRef)(),t.spoon=(0,e.useRef)(),t.hints.forEach((function(n){(function(t,n){if(n&&"indicator"==n.type){switch(n.addLetters={},n.category){case"anagram":case"hidden word":case"letter bank":case"particle":case"synonym":case"symbol":n.addLetters.value=n.end.value[0].split("");break;case"container":n.addLetters.value=[].concat(it(n.end.value.join("").split("")),it(n.end.value.join(" ").split("")));break;case"lb-2":n.addLetters.value=[].concat(it(n.end.value[1]),it(n.end.value[1]));break;case"direct":n.addLetters.value=n.value.split("");break;case"homophone":n.addLetters.value=["= ",t.solution.value];break;case"hw-2":n.addLetters.value=rt(n.end.value[1]).split("");break;case"initialism":n.addLetters.value=n.end.value.map((function(e){return e.split(" ").map((function(e){return e.split("")[0]})).flat()})).flat();break;case"ag-2":case"reversal":n.addLetters.value=n.end.value.map((function(e){return e.split("")})).flat();break;case"spoonerism":n.addLetters.value=n.end.value[1].split("")}n.addLetters.value&&(n.addLetters.ref=(0,e.useRef)(n.addLetters.value.map((function(){return(0,e.createRef)()}))),n.addLetters.wordRef=(0,e.useRef)())}})(t,n),n.ref=nt(n.value,t,n),n.end&&(n.end.ref=nt(n.end.value,t,n))})),(0,e.useEffect)((function(){var e=["ag-2","hw-2","lb-2","container","reversal"];t.hints.forEach((function(n,r){n&&n.category&&e.includes(n.category)&&function(e,t,n){var r=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:e.fix.anchor,n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:e.fix.moving,r=[];n.forEach((function(n){var a=t.find((function(t,a){return e.fix.removeAnchor?t.current.textContent.toUpperCase()==n.current.textContent.toUpperCase()&&!r.includes(a)&&(r.push(a),t.current.textContent.toUpperCase()==n.current.textContent.toUpperCase()):t.current.textContent.toUpperCase()==n.current.textContent.toUpperCase()}));n.current.style.top=a.current.style.top?a.current.style.top:"".concat(a.current.getBoundingClientRect().top,"px"),n.current.style.left=a.current.style.left?a.current.style.left:"".concat(a.current.getBoundingClientRect().left,"px")})),n.forEach((function(e){e.current.style.position="fixed"})),e.fix.endPt.forEach((function(e){var t=e.current.getBoundingClientRect().left,n=e.current.getBoundingClientRect().top;return e.current.style.left="".concat(t,"px"),e.current.style.top="".concat(n,"px"),[t,n]}))};t.fix={removeAnchor:!0};var a=e.hints[n-1];switch(t.category){case"ag-2":t.fix.anchor=a.addLetters.ref.current,t.fix.moving=t.addLetters.ref.current.slice(0,t.end.value[0].length),t.fix.endPt=t.addLetters.ref.current.slice(t.end.value[0].length),r(t);break;case"lb-2":t.fix.anchor=a.addLetters.ref.current,t.fix.moving=t.addLetters.ref.current.slice(0,t.end.value[1].length),t.fix.endPt=t.addLetters.ref.current.slice(t.end.value[1].length),t.fix.removeAnchor=!1,r(t);break;case"hw-2":var l=rt(a.end.value[0].toUpperCase()).indexOf(rt(t.end.value[1].toUpperCase()));t.fix.anchor=rt(a.addLetters.ref.current).slice(l,l+rt(e.solution.value).length),t.fix.moving=rt(t.addLetters.ref.current),t.fix.endPt=[],r(t);break;case"container":var i=e.hints.slice(1,n),o=["anagram","hidden word","letter bank","homophone"];i=i.filter((function(e){return!o.includes(e.category)})),i.forEach((function(e){switch(e.category){case"direct":e.rightValue=e.value.toUpperCase();break;case"reversal":case"ag-2":e.rightValue=e.end.value[1].toUpperCase();break;default:e.rightValue=e.end.value[0].toUpperCase()}})),t.fix.anchorSplit=i.find((function(e,n){return 3==t.end.value.length||e.rightValue==[t.end.value[0],t.end.value[2]].join("").toUpperCase()?(t.fix.joinIndex=[0,2],t.fix.indicatorMatch=n,e.rightValue==[t.end.value[0],t.end.value[2]].join("").toUpperCase()):e.rightValue==[t.end.value[0],t.end.value[3]].join("").toUpperCase()?(t.fix.joinIndex=[0,3],t.fix.indicatorMatch=n,e.rightValue==[t.end.value[0],t.end.value[3]].join("").toUpperCase()):e.rightValue==[t.end.value[1],t.end.value[3]].join("").toUpperCase()&&(t.fix.joinIndex=[1,3],t.fix.indicatorMatch=n,e.rightValue==[t.end.value[1],t.end.value[3]].join("").toUpperCase())}));var s=["ag-2","lb-2","reversal"];s.includes(t.fix.anchorSplit.category)?t.fix.anchorSplit=t.fix.anchorSplit.addLetters.ref.current.slice(t.fix.anchorSplit.end.value[0].length):t.fix.anchorSplit=t.fix.anchorSplit.addLetters.ref.current,i.splice(t.fix.indicatorMatch,1),t.fix.anchorOther=[],t.end.value.forEach((function(e,n){if(!t.fix.joinIndex.includes(n)){var r,a=i.find((function(t,n){return t.rightValue.toUpperCase()==e.toUpperCase()}));if(a&&s.includes(a.category))(r=t.fix.anchorOther).push.apply(r,at(a.addLetters.ref.current.slice(a.end.value[0].length)));else if(a){var l;(l=t.fix.anchorOther).push.apply(l,at(a.addLetters.ref.current))}}}));var c=t.end.value.slice(0,t.fix.joinIndex[0]).join("").length,u=t.end.value[t.fix.joinIndex[0]].length,m=t.end.value.slice(0,t.fix.joinIndex[1]).join("").length,d=t.end.value[t.fix.joinIndex[1]].length;t.fix.movingSplit=[].concat(at(t.addLetters.ref.current.slice(c,c+u)),at(t.addLetters.ref.current.slice(m,m+d))),t.fix.movingOther=t.addLetters.ref.current.slice(0,t.end.value.join("").split("").length).filter((function(e){return!t.fix.movingSplit.includes(e)})),t.fix.endPt=t.addLetters.ref.current.slice(t.end.value.join("").split("").length),r(t,t.fix.anchorSplit,t.fix.movingSplit),r(t,t.fix.anchorOther,t.fix.movingOther);break;case"reversal":t.fix.anchor=[],e.hints.some((function(e){return"reversal"==e.category||(e.addLetters&&t.fix.anchor.push(e),!1)})),t.fix.anchor=t.fix.anchor.map((function(e){return e.addLetters.ref.current})).flat().reverse(),t.fix.moving=t.addLetters.ref.current.slice(0,t.end.value[0].length),t.fix.moving=t.fix.moving.filter((function(e){return" "!==e.current.textContent})).reverse(),t.fix.wordWidth=t.fix.moving.reduce((function(e,t){return e+t.current.getBoundingClientRect().width}),0),t.fix.endPt=t.addLetters.ref.current.slice(t.end.value[0].length),r(t)}}(t,n,r)}))}),[]),(0,e.useEffect)((function(){dt(t,n,r,a)}),[r])},ft=n.p+"9aef0845253f144247665a2a40a95714.svg",At=n.p+"05b3cc3d2e933a32833b2cb5a5d9e60e.svg",gt=function(t){var n=t.activeClue,r=t.nextHint,a=t.showMessage,l=t.input,i=t.checkAns,o=t.showType,s=t.setShowType,c=t.stats;pt(n,r,a,i);var u=n.type.map((function(t,n){return e.createElement("li",{key:n,className:"type-pill tooltip-parent","aria-describedby":"tooltip-id"},t,e.createElement(et,{text:t}))})),m=o?e.createElement(e.Fragment,null,e.createElement("li",{onClick:function(){return s(!1)}},e.createElement("img",{src:At})),u):e.createElement(e.Fragment,null,e.createElement("li",{onClick:function(){return s(!0)}},e.createElement("img",{src:ft})),e.createElement("li",{className:"type-text",onClick:function(){return s(!0)}},"See type"));c=e.createElement(e.Fragment,null,e.createElement("div",{className:"clue-stats"},e.createElement("span",{className:"stat-hints"},e.createElement("span",{className:"stat"},c.hints)," h"),e.createElement("span",{className:"stat-guesses"},e.createElement("span",{className:"stat"},c.guesses)," g")));var d=n.clue.arr.map((function(t,r){return e.createElement("span",{key:r,ref:n.clue.ref.current[r],className:"letter"},t)})),p=n.hints.map((function(t,r){if("indicator"==t.type&&t.addLetters&&t.addLetters.value){var a=t.addLetters.value.map((function(n,a){return e.createElement("span",{key:"".concat(r,"_").concat(a),ref:t.addLetters.ref.current[a],className:"letter"},n)})),l=["container","reversal","ag-2","lb-2","hw-2","spoonerism"].includes(t.category),i="spoonerism"==t.category,o=e.createElement(e.Fragment,null,e.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 512 512",width:"20px",height:"20px",ref:n.spoon},e.createElement("path",{d:"M245.8 220.9c-14.5-17.6-21.8-39.2-21.8-60.8C224 80 320 0 416 0c53 0 96 43 96 96c0 96-80 192-160.2 192c-21.6 0-43.2-7.3-60.8-21.8L54.6 502.6c-12.5 12.5-32.8 12.5-45.3 0s-12.5-32.8 0-45.3L245.8 220.9z"})),e.createElement("span",{key:"br_".concat(r),style:{flexBasis:"100%"}}));return e.createElement(e.Fragment,null,l&&e.createElement("span",{key:"br_".concat(r),style:{flexBasis:"100%"}}),i&&o,e.createElement("span",{key:"word_".concat(r),ref:t.addLetters.wordRef,className:"word"},a," "))}})),f=n.solution.arr.map((function(t,r){return e.createElement("span",{key:r,id:"i".concat(r),className:"letter"},e.createElement("span",{id:"sl".concat(r),ref:n.solution.ref.current[r],className:"solLetter"},t),e.createElement("span",{className:"typeLetter"},l[r]))})),A=e.createElement("span",{id:"solLengthRef",ref:n.solution.length.ref,className:"solution-letters"}," ",n.solution.length.value),g=n.source.href?e.createElement("a",{target:"_blank",href:n.source.href},n.source.value):e.createElement("span",null,n.source.value);return e.createElement("div",{id:"clue-container",className:"clue container"},e.createElement("ul",{className:"type"},m),c,e.createElement("div",{id:"clueSectionRef",ref:n.clue.sectionRef,className:"clue"},e.createElement("div",null,d," ",A)),e.createElement("div",{className:"addLetters"},p),e.createElement("div",{style:{position:"relative"},className:"sol-section"},e.createElement("div",{id:"solSectionRef",ref:n.solution.sectionRef,className:"solution"},f),e.createElement("div",{id:"sourceRef",ref:n.source.ref,className:"source"},"by ",g)))},ht=function(t){var n=t.setclueId,r=t.setInput,a=t.setCheckAns,l=t.setReturnLearn,i=e.createElement(De,{to:"/learn"},e.createElement("svg",{className:"back-button",xmlns:"http://www.w3.org/2000/svg",width:"25px",height:"25px",viewBox:"0 0 448 512"},e.createElement("path",{d:"M9.4 233.4c-12.5 12.5-12.5 32.8 0 45.3l160 160c12.5 12.5 32.8 12.5 45.3 0s12.5-32.8 0-45.3L109.2 288 416 288c17.7 0 32-14.3 32-32s-14.3-32-32-32l-306.7 0L214.6 118.6c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0l-160 160z"}))),o={easyClue:{path:"/clues/clue",name:"Play an anagram clue",style:"primary",onClick:function(){n(97),r([]),a(!1),l(!0)}},return:{path:"/learn",name:"Return",style:"secondary"}},s=[o.return,o.easyClue],c=["new","broken","mad","crazy","wild","scrambled","mixed","shaken","rearranged","confused","odd","unusual","off","dancing","rocky","stirred"].map((function(t){return e.createElement("li",{className:"indicator"},t.toLowerCase())}));return e.createElement("div",{className:"learn container"},i,e.createElement("div",{className:"learn-section"},e.createElement("h1",null,"Anagram"),e.createElement("p",null,"In a clue with an anagram, a word or words are reordered to make a new word or words.")),e.createElement("div",{className:"learn-section"},e.createElement("h2",null,"Indicators"),e.createElement("p",null,"Clues with anagrams will always have an indicator word to let you know there will be an anagram. Common indicators include:"),e.createElement("ul",{className:"indicators mt-3"},c)),e.createElement("div",{className:"learn-section"},e.createElement("h2",null,"Examples"),e.createElement("div",{className:"example-container"},e.createElement("p",{className:"example"},'One unusual role in "The Matrix" (3)'),e.createElement("div",{className:"explanation"},e.createElement("ul",{className:"mt-0"},e.createElement("li",null,"The definition is ",e.createElement("strong",null,'role in "The Matrix"')),e.createElement("li",null,e.createElement("strong",null,"unusual")," indicates that ",e.createElement("strong",null,"One")," is an anagram")),e.createElement("p",{className:"text-center"},e.createElement("strong",null,"neo")," → ",e.createElement("strong",null,"one")),e.createElement("div",{className:"solution"},e.createElement("span",{className:"letter"},"n"),e.createElement("span",{className:"letter"},"e"),e.createElement("span",{className:"letter"},"o")))),e.createElement("div",{className:"example-container"},e.createElement("p",{className:"example"},"Altering odd three-sided figure (8)"),e.createElement("div",{className:"explanation"},e.createElement("ul",{className:"mt-0"},e.createElement("li",null,"The definition is ",e.createElement("strong",null,"three-sided figure")),e.createElement("li",null,e.createElement("strong",null,"odd")," indicates that ",e.createElement("strong",null,"Altering")," is an anagram")),e.createElement("p",{className:"text-center"},e.createElement("strong",null,"altering")," → ",e.createElement("strong",null,"triangle")),e.createElement("div",{className:"solution"},e.createElement("span",{className:"letter"},"t"),e.createElement("span",{className:"letter"},"r"),e.createElement("span",{className:"letter"},"i"),e.createElement("span",{className:"letter"},"a"),e.createElement("span",{className:"letter"},"n"),e.createElement("span",{className:"letter"},"g"),e.createElement("span",{className:"letter"},"l"),e.createElement("span",{className:"letter"},"e"))))),e.createElement("div",{className:"learn-section"},e.createElement(_e,{btnArr:s})))},yt=function(t){t.setLearnType;var n=t.setclueId,r=t.setInput,a=t.setCheckAns,l=(t.setMode,t.setReturnLearn),i=e.createElement(De,{to:"/learn"},e.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",width:"25px",height:"25px",viewBox:"0 0 448 512"},e.createElement("path",{d:"M9.4 233.4c-12.5 12.5-12.5 32.8 0 45.3l160 160c12.5 12.5 32.8 12.5 45.3 0s12.5-32.8 0-45.3L109.2 288 416 288c17.7 0 32-14.3 32-32s-14.3-32-32-32l-306.7 0L214.6 118.6c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0l-160 160z"}))),o={easyClue:{path:"/clues/clue",name:"Play a charade clue",style:"primary",onClick:function(){n(163),r([]),a(!1),l(!0)}},return:{path:"/learn",name:"Return",style:"secondary"}},s=[o.return,o.easyClue];return e.createElement("div",{className:"learn container"},i,e.createElement("div",{className:"learn-section"},e.createElement("h1",null,"Charade"),e.createElement("p",null,"In a clue with a charade, the solution is broken into parts that are clued separately and arranged in order.")),e.createElement("div",{className:"learn-section"},e.createElement("h2",null,"Examples"),e.createElement("div",{className:"example-container"},e.createElement("p",{className:"example"},"Come to AT&T objective (6)"),e.createElement("div",{className:"explanation"},e.createElement("ul",{className:"mt-0"},e.createElement("li",null,"The definition is ",e.createElement("strong",null,"Come to")),e.createElement("li",null,e.createElement("strong",null,"att")," is used"),e.createElement("li",null,e.createElement("strong",null,"objective")," can be ",e.createElement("strong",null,"end"))),e.createElement("p",{className:"text-center"},e.createElement("strong",null,"att")," + ",e.createElement("strong",null,"end")," = ",e.createElement("strong",null,"attend")),e.createElement("div",{className:"solution"},e.createElement("span",{className:"letter"},"a"),e.createElement("span",{className:"letter"},"t"),e.createElement("span",{className:"letter"},"t"),e.createElement("span",{className:"letter"},"e"),e.createElement("span",{className:"letter"},"n"),e.createElement("span",{className:"letter"},"d")))),e.createElement("div",{className:"example-container"},e.createElement("p",{className:"example"},"Digests runny cheese on Friday and Saturday (6)"),e.createElement("div",{className:"explanation"},e.createElement("ul",{className:"mt-0"},e.createElement("li",null,"The definition is ",e.createElement("strong",null,"Digests")),e.createElement("li",null,e.createElement("strong",null,"runny cheese")," can be ",e.createElement("strong",null,"brie")),e.createElement("li",null,e.createElement("strong",null,"Friday")," can be ",e.createElement("strong",null,"f")),e.createElement("li",null,e.createElement("strong",null,"Saturday")," can be ",e.createElement("strong",null,"s"))),e.createElement("p",{className:"text-center"},e.createElement("strong",null,"brie")," + ",e.createElement("strong",null,"f")," + ",e.createElement("strong",null,"s")," = ",e.createElement("strong",null,"briefs")),e.createElement("div",{className:"solution"},e.createElement("span",{className:"letter"},"b"),e.createElement("span",{className:"letter"},"r"),e.createElement("span",{className:"letter"},"i"),e.createElement("span",{className:"letter"},"e"),e.createElement("span",{className:"letter"},"f"),e.createElement("span",{className:"letter"},"s"))))),e.createElement("div",{className:"learn-section"},e.createElement(_e,{btnArr:s})))},vt=function(t){var n=t.setclueId,r=t.setInput,a=t.setCheckAns,l=t.setReturnLearn,i=e.createElement(De,{to:"/learn"},e.createElement("svg",{className:"back-button",xmlns:"http://www.w3.org/2000/svg",width:"25px",height:"25px",viewBox:"0 0 448 512"},e.createElement("path",{d:"M9.4 233.4c-12.5 12.5-12.5 32.8 0 45.3l160 160c12.5 12.5 32.8 12.5 45.3 0s12.5-32.8 0-45.3L109.2 288 416 288c17.7 0 32-14.3 32-32s-14.3-32-32-32l-306.7 0L214.6 118.6c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0l-160 160z"}))),o={easyClue:{path:"/clues/clue",name:"Play a container clue",style:"primary",onClick:function(){n(306),r([]),a(!1),l(!0)}},return:{path:"/learn",name:"Return",style:"secondary"}},s=[o.return,o.easyClue],c=["In","Inside","About","Around","Holding","Containing","Grasping","Covering","Enclosing","Wrapped in","Surrounding","Encasing","Embracing","Included in","Held by"].map((function(t){return e.createElement("li",{className:"indicator"},t.toLowerCase())}));return e.createElement("div",{className:"learn container"},i,e.createElement("div",{className:"learn-section"},e.createElement("h1",null,"Container"),e.createElement("p",null,"In a clue with a container, a word goes inside of another to make a new word.")),e.createElement("div",{className:"learn-section"},e.createElement("h2",null,"Indicators"),e.createElement("p",null,"Common container indicators include:"),e.createElement("ul",{className:"indicators"},c)),e.createElement("div",{className:"learn-section"},e.createElement("h2",null,"Examples"),e.createElement("div",{className:"example-container"},e.createElement("p",{className:"example"},"Don eats Ann's brand of yogurt (6)"),e.createElement("div",{className:"explanation"},e.createElement("ul",{className:"mt-0"},e.createElement("li",null,"The definition is ",e.createElement("strong",null,"brand of yogurt")),e.createElement("li",null,e.createElement("strong",null,"eats")," indicates a container")),e.createElement("p",{className:"text-center"},e.createElement("strong",null,"d"),"(",e.createElement("strong",null,"ann"),")",e.createElement("strong",null,"on")," = ",e.createElement("strong",null,"dannon")),e.createElement("div",{className:"solution"},e.createElement("span",{className:"letter"},"d"),e.createElement("span",{className:"letter"},"a"),e.createElement("span",{className:"letter"},"n"),e.createElement("span",{className:"letter"},"n"),e.createElement("span",{className:"letter"},"o"),e.createElement("span",{className:"letter"},"n")))),e.createElement("div",{className:"example-container"},e.createElement("p",{className:"example"},"Spanish gentlemen taking interest in old people (7)"),e.createElement("div",{className:"explanation"},e.createElement("ul",{className:"mt-0"},e.createElement("li",null,"The definition is ",e.createElement("strong",null,"old people")),e.createElement("li",null,e.createElement("strong",null,"Spanish gentlemen")," can be ",e.createElement("strong",null,"senors")),e.createElement("li",null,e.createElement("strong",null,"interest")," can be ",e.createElement("strong",null,"i")),e.createElement("li",null,e.createElement("strong",null,"taking")," indicates a container")),e.createElement("p",{className:"text-center"},e.createElement("strong",null,"sen"),"(",e.createElement("strong",null,"i"),")",e.createElement("strong",null,"ors")," = ",e.createElement("strong",null,"seniors")),e.createElement("div",{className:"solution"},e.createElement("span",{className:"letter"},"s"),e.createElement("span",{className:"letter"},"e"),e.createElement("span",{className:"letter"},"n"),e.createElement("span",{className:"letter"},"i"),e.createElement("span",{className:"letter"},"o"),e.createElement("span",{className:"letter"},"r"),e.createElement("span",{className:"letter"},"s"))))),e.createElement("div",{className:"learn-section"},e.createElement(_e,{btnArr:s})))},Et=function(t){var n=t.setclueId,r=t.setInput,a=t.setCheckAns,l=t.setReturnLearn,i=e.createElement(De,{to:"/learn"},e.createElement("svg",{className:"back-button",xmlns:"http://www.w3.org/2000/svg",width:"25px",height:"25px",viewBox:"0 0 448 512"},e.createElement("path",{d:"M9.4 233.4c-12.5 12.5-12.5 32.8 0 45.3l160 160c12.5 12.5 32.8 12.5 45.3 0s12.5-32.8 0-45.3L109.2 288 416 288c17.7 0 32-14.3 32-32s-14.3-32-32-32l-306.7 0L214.6 118.6c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0l-160 160z"}))),o={easyClue:{path:"/clues/clue",name:"Play a deletion clue",style:"primary",onClick:function(){n(104),r([]),a(!1),l(!0)}},return:{path:"/learn",name:"Return",style:"secondary"}},s=[o.return,o.easyClue],c=["missing","minus","without","even","odd","hollow","middle","endless","headless","short","empty","outskirts","outside","inside","a couple"].map((function(t){return e.createElement("li",{className:"indicator"},t.toLowerCase())}));return e.createElement("div",{className:"learn container"},i,e.createElement("div",{className:"learn-section"},e.createElement("h1",null,"Deletion"),e.createElement("p",null,"In a clue with a deletion, remove a letter or set of letters from the beginning, middle, or end of a word.")),e.createElement("div",{className:"learn-section"},e.createElement("h2",null,"Indicators"),e.createElement("p",null,"Common deletion indicators include:"),e.createElement("ul",{className:"indicators"},c)),e.createElement("div",{className:"learn-section"},e.createElement("h2",null,"Examples"),e.createElement("div",{className:"example-container"},e.createElement("p",{className:"example"},"Different parent starts late (6)"),e.createElement("div",{className:"explanation"},e.createElement("ul",{className:"mt-0"},e.createElement("li",null,"The definition is ",e.createElement("strong",null,"different")),e.createElement("li",null,e.createElement("strong",null,"parent")," can be ",e.createElement("strong",null,"mother")),e.createElement("li",null,e.createElement("strong",null,"starts late")," indicates a deletion")),e.createElement("p",{className:"text-center"},e.createElement("strong",null,"mother")," - ",e.createElement("strong",null,"m")," = ",e.createElement("strong",null,"other")),e.createElement("div",{className:"solution"},e.createElement("span",{className:"letter"},"o"),e.createElement("span",{className:"letter"},"t"),e.createElement("span",{className:"letter"},"h"),e.createElement("span",{className:"letter"},"e"),e.createElement("span",{className:"letter"},"r")))),e.createElement("div",{className:"example-container"},e.createElement("p",{className:"example"},"French city park is excluding kids, at first (5)"),e.createElement("div",{className:"explanation"},e.createElement("ul",{className:"mt-0"},e.createElement("li",null,"The definition is ",e.createElement("strong",null,"French city")),e.createElement("li",null,e.createElement("strong",null,"kids, at first")," gives us ",e.createElement("strong",null,"k")),e.createElement("li",null,e.createElement("strong",null,"excluding")," indicates a deletion")),e.createElement("p",{className:"text-center"},e.createElement("strong",null,"park is")," - ",e.createElement("strong",null,"k")," = ",e.createElement("strong",null,"paris")),e.createElement("div",{className:"solution"},e.createElement("span",{className:"letter"},"p"),e.createElement("span",{className:"letter"},"a"),e.createElement("span",{className:"letter"},"r"),e.createElement("span",{className:"letter"},"i"),e.createElement("span",{className:"letter"},"s"))))),e.createElement("div",{className:"learn-section"},e.createElement(_e,{btnArr:s})))},Ct=function(t){var n=t.setclueId,r=t.setInput,a=t.setCheckAns,l=t.setReturnLearn,i=e.createElement(De,{to:"/learn"},e.createElement("svg",{className:"back-button",xmlns:"http://www.w3.org/2000/svg",width:"25px",height:"25px",viewBox:"0 0 448 512"},e.createElement("path",{d:"M9.4 233.4c-12.5 12.5-12.5 32.8 0 45.3l160 160c12.5 12.5 32.8 12.5 45.3 0s12.5-32.8 0-45.3L109.2 288 416 288c17.7 0 32-14.3 32-32s-14.3-32-32-32l-306.7 0L214.6 118.6c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0l-160 160z"}))),o={easyClue:{path:"/clues/clue",name:"Play a double definition clue",style:"primary",onClick:function(){n(101),r([]),a(!1),l(!0)}},return:{path:"/learn",name:"Return",style:"secondary"}},s=[o.return,o.easyClue];return e.createElement("div",{className:"learn container"},i,e.createElement("div",{className:"learn-section"},e.createElement("h1",null,"Double Definition"),e.createElement("p",null,"In a clue with a double definition, the clue can be split into two parts that each define the solution.")),e.createElement("div",{className:"learn-section"},e.createElement("h2",null,"Examples"),e.createElement("div",{className:"example-container"},e.createElement("p",{className:"example"},"Tightens up verb forms (6)"),e.createElement("div",{className:"explanation"},e.createElement("ul",{className:"mt-0"},e.createElement("li",null,"Both ",e.createElement("strong",null,"Tightens up")," and ",e.createElement("strong",null,"verb forms")," are definitions"),e.createElement("li",null,e.createElement("strong",null,"Tightens up")," can be ",e.createElement("strong",null,"tenses")),e.createElement("li",null,e.createElement("strong",null,"verb forms")," can be ",e.createElement("strong",null,"tenses"))),e.createElement("div",{className:"solution"},e.createElement("span",{className:"letter"},"t"),e.createElement("span",{className:"letter"},"e"),e.createElement("span",{className:"letter"},"n"),e.createElement("span",{className:"letter"},"s"),e.createElement("span",{className:"letter"},"e"),e.createElement("span",{className:"letter"},"s")))),e.createElement("div",{className:"example-container"},e.createElement("p",{className:"example"},"Throw black goo (5)"),e.createElement("div",{className:"explanation"},e.createElement("ul",{className:"mt-0"},e.createElement("li",null,"Both ",e.createElement("strong",null,"Throw")," and ",e.createElement("strong",null,"black goo")," are definitions"),e.createElement("li",null,e.createElement("strong",null,"Throw")," can be ",e.createElement("strong",null,"pitch")),e.createElement("li",null,e.createElement("strong",null,"black goo")," can be ",e.createElement("strong",null,"pitch"))),e.createElement("div",{className:"solution"},e.createElement("span",{className:"letter"},"p"),e.createElement("span",{className:"letter"},"i"),e.createElement("span",{className:"letter"},"t"),e.createElement("span",{className:"letter"},"c"),e.createElement("span",{className:"letter"},"h"))))),e.createElement("div",{className:"learn-section"},e.createElement(_e,{btnArr:s})))},bt=function(t){var n=t.setclueId,r=t.setInput,a=t.setCheckAns,l=t.setReturnLearn,i=e.createElement(De,{to:"/learn"},e.createElement("svg",{className:"back-button",xmlns:"http://www.w3.org/2000/svg",width:"25px",height:"25px",viewBox:"0 0 448 512"},e.createElement("path",{d:"M9.4 233.4c-12.5 12.5-12.5 32.8 0 45.3l160 160c12.5 12.5 32.8 12.5 45.3 0s12.5-32.8 0-45.3L109.2 288 416 288c17.7 0 32-14.3 32-32s-14.3-32-32-32l-306.7 0L214.6 118.6c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0l-160 160z"}))),o={easyClue:{path:"/clues/clues/clue",name:"Play a hidden word clue",style:"primary",onClick:function(){n(2),r([]),a(!1),l(!0)}},return:{path:"/learn",name:"Return",style:"secondary"}},s=[o.return,o.easyClue],c=["concealed","within","member","held","inside","buried","featured","seen in","stocks","partly","smuggled","sheath"].map((function(t){return e.createElement("li",{className:"indicator"},t.toLowerCase())}));return e.createElement("div",{className:"learn container"},i,e.createElement("div",{className:"learn-section"},e.createElement("h1",null,"Hidden Word"),e.createElement("p",null,"In a clue with a hidden word, the answer is a string of letters embedded in the clue.")),e.createElement("div",{className:"learn-section"},e.createElement("h2",null,"Indicators"),e.createElement("p",null,"Common hidden word indicators include:"),e.createElement("ul",{className:"indicators"},c)),e.createElement("div",{className:"learn-section"},e.createElement("h2",null,"Examples"),e.createElement("div",{className:"example-container"},e.createElement("p",{className:"example"},"Field in Far East (4)"),e.createElement("div",{className:"explanation"},e.createElement("ul",{className:"mt-0"},e.createElement("li",null,"The definition is ",e.createElement("strong",null,"Field")),e.createElement("li",null,e.createElement("strong",null,"in")," indicates a hidden word")),e.createElement("p",{className:"text-center"},e.createElement("strong",null,"f"),"(",e.createElement("strong",null,"ar ea"),")",e.createElement("strong",null,"st")),e.createElement("div",{className:"solution"},e.createElement("span",{className:"letter"},"a"),e.createElement("span",{className:"letter"},"r"),e.createElement("span",{className:"letter"},"e"),e.createElement("span",{className:"letter"},"a")))),e.createElement("div",{className:"example-container"},e.createElement("p",{className:"example"},"Focus too much on portion of job session (6)"),e.createElement("div",{className:"explanation"},e.createElement("ul",{className:"mt-0"},e.createElement("li",null,"The definition is ",e.createElement("strong",null,"Focus too much on")),e.createElement("li",null,e.createElement("strong",null,"portion of")," indicates a hidden word")),e.createElement("p",{className:"text-center"},e.createElement("strong",null,"j"),"(",e.createElement("strong",null,"ob sess"),")",e.createElement("strong",null,"ion")),e.createElement("div",{className:"solution"},e.createElement("span",{className:"letter"},"o"),e.createElement("span",{className:"letter"},"b"),e.createElement("span",{className:"letter"},"s"),e.createElement("span",{className:"letter"},"e"),e.createElement("span",{className:"letter"},"s"),e.createElement("span",{className:"letter"},"s"))))),e.createElement("div",{className:"learn-section"},e.createElement(_e,{btnArr:s})))},xt=function(t){var n=t.setclueId,r=t.setInput,a=t.setCheckAns,l=t.setReturnLearn,i=e.createElement(De,{to:"/learn"},e.createElement("svg",{className:"back-button",xmlns:"http://www.w3.org/2000/svg",width:"25px",height:"25px",viewBox:"0 0 448 512"},e.createElement("path",{d:"M9.4 233.4c-12.5 12.5-12.5 32.8 0 45.3l160 160c12.5 12.5 32.8 12.5 45.3 0s12.5-32.8 0-45.3L109.2 288 416 288c17.7 0 32-14.3 32-32s-14.3-32-32-32l-306.7 0L214.6 118.6c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0l-160 160z"}))),o={easyClue:{path:"/clues/clue",name:"Play a homophone clue",style:"primary",onClick:function(){n(188),r([]),a(!1),l(!0)}},return:{path:"/learn",name:"Return",style:"secondary"}},s=[o.return,o.easyClue],c=["sounds like","we hear","say","said","speak"].map((function(t){return e.createElement("li",{className:"indicator"},t.toLowerCase())}));return e.createElement("div",{className:"learn container"},i,e.createElement("div",{className:"learn-section"},e.createElement("h1",null,"Homophone"),e.createElement("p",null,"In a clue with a homophone, clued words and/or letter(s) sound like the solution when spoken aloud.")),e.createElement("div",{className:"learn-section"},e.createElement("h2",null,"Indicators"),e.createElement("p",null,"Common homophone indicators include:"),e.createElement("ul",{className:"indicators"},c)),e.createElement("div",{className:"learn-section"},e.createElement("h2",null,"Examples"),e.createElement("div",{className:"example-container"},e.createElement("p",{className:"example"},"Group of lions was snoopy, we hear (5)"),e.createElement("div",{className:"explanation"},e.createElement("ul",{className:"mt-0"},e.createElement("li",null,"The definition is ",e.createElement("strong",null,"Group of lions")),e.createElement("li",null,e.createElement("strong",null,"we hear")," indicates a homophone"),e.createElement("li",null,e.createElement("strong",null,"was snoopy")," can be ",e.createElement("strong",null,"pried"))),e.createElement("p",{className:"text-center"},e.createElement("strong",null,"pried")," sounds like ",e.createElement("strong",null,"pride")),e.createElement("div",{className:"solution"},e.createElement("span",{className:"letter"},"p"),e.createElement("span",{className:"letter"},"r"),e.createElement("span",{className:"letter"},"i"),e.createElement("span",{className:"letter"},"d"),e.createElement("span",{className:"letter"},"e")))),e.createElement("div",{className:"example-container"},e.createElement("p",{className:"example"},"Produced blooms covered with white powder, say (8)"),e.createElement("div",{className:"explanation"},e.createElement("ul",{className:"mt-0"},e.createElement("li",null,"The definition is ",e.createElement("strong",null,"Produced blooms")),e.createElement("li",null,e.createElement("strong",null,"say")," indicates a homophone"),e.createElement("li",null,e.createElement("strong",null,"covered with white powder")," can be ",e.createElement("strong",null,"floured"))),e.createElement("p",{className:"text-center"},e.createElement("strong",null,"floured")," sounds like ",e.createElement("strong",null,"flowered")),e.createElement("div",{className:"solution"},e.createElement("span",{className:"letter"},"f"),e.createElement("span",{className:"letter"},"l"),e.createElement("span",{className:"letter"},"o"),e.createElement("span",{className:"letter"},"w"),e.createElement("span",{className:"letter"},"e"),e.createElement("span",{className:"letter"},"r"),e.createElement("span",{className:"letter"},"e"),e.createElement("span",{className:"letter"},"d"))))),e.createElement("div",{className:"learn-section"},e.createElement(_e,{btnArr:s})))},wt=function(t){var n=t.setclueId,r=t.setInput,a=t.setCheckAns,l=t.setReturnLearn,i=e.createElement(De,{to:"/learn"},e.createElement("svg",{className:"back-button",xmlns:"http://www.w3.org/2000/svg",width:"25px",height:"25px",viewBox:"0 0 448 512"},e.createElement("path",{d:"M9.4 233.4c-12.5 12.5-12.5 32.8 0 45.3l160 160c12.5 12.5 32.8 12.5 45.3 0s12.5-32.8 0-45.3L109.2 288 416 288c17.7 0 32-14.3 32-32s-14.3-32-32-32l-306.7 0L214.6 118.6c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0l-160 160z"}))),o={easyClue:{path:"/clues/clue",name:"Play an initialism clue",style:"primary",onClick:function(){n(324),r([]),a(!1),l(!0)}},return:{path:"/learn",name:"Return",style:"secondary"}},s=[o.return,o.easyClue],c=["starts","beginnings","first","early","middle","center","core","ends","final","last","ultimate"].map((function(t){return e.createElement("li",{className:"indicator"},t.toLowerCase())}));return e.createElement("div",{className:"learn container"},i,e.createElement("div",{className:"learn-section"},e.createElement("h1",null,"Initialism"),e.createElement("p",null,"In a clue with initialism, the first (or last, or even middle) letters of series of words form the answer.")),e.createElement("div",{className:"learn-section"},e.createElement("h2",null,"Indicators"),e.createElement("p",null,"Common initialism indicators include:"),e.createElement("ul",{className:"indicators"},c)),e.createElement("div",{className:"learn-section"},e.createElement("h2",null,"Examples"),e.createElement("div",{className:"example-container"},e.createElement("p",{className:"example"},"Starts to dream about living large amid suburban Texas metropolis (6)"),e.createElement("div",{className:"explanation"},e.createElement("ul",{className:"mt-0"},e.createElement("li",null,"The definition is ",e.createElement("strong",null,"Texas metropolis")),e.createElement("li",null,e.createElement("strong",null,"Starts to")," indicates initialism")),e.createElement("p",{className:"text-center"},e.createElement("strong",null,"d"),"ream ",e.createElement("strong",null,"a"),"bout ",e.createElement("strong",null,"l"),"iving ",e.createElement("strong",null,"l"),"arge ",e.createElement("strong",null,"a"),"mid ",e.createElement("strong",null,"s"),"uburban"),e.createElement("div",{className:"solution"},e.createElement("span",{className:"letter"},"d"),e.createElement("span",{className:"letter"},"a"),e.createElement("span",{className:"letter"},"l"),e.createElement("span",{className:"letter"},"l"),e.createElement("span",{className:"letter"},"a"),e.createElement("span",{className:"letter"},"s")))),e.createElement("div",{className:"example-container"},e.createElement("p",{className:"example"},"European capital starts to open some legislative offices (4)"),e.createElement("div",{className:"explanation"},e.createElement("ul",{className:"mt-0"},e.createElement("li",null,"The definition is ",e.createElement("strong",null,"European capital")),e.createElement("li",null,e.createElement("strong",null,"starts to")," indicates initialism")),e.createElement("p",{className:"text-center"},e.createElement("strong",null,"o"),"pen ",e.createElement("strong",null,"s"),"ome ",e.createElement("strong",null,"l"),"egislative ",e.createElement("strong",null,"o"),"ffices"),e.createElement("div",{className:"solution"},e.createElement("span",{className:"letter"},"o"),e.createElement("span",{className:"letter"},"s"),e.createElement("span",{className:"letter"},"l"),e.createElement("span",{className:"letter"},"o"))))),e.createElement("div",{className:"learn-section"},e.createElement(_e,{btnArr:s})))},kt=function(t){var n=t.setclueId,r=t.setInput,a=t.setCheckAns,l=t.setReturnLearn,i=e.createElement(De,{to:"/learn"},e.createElement("svg",{className:"back-button",xmlns:"http://www.w3.org/2000/svg",width:"25px",height:"25px",viewBox:"0 0 448 512"},e.createElement("path",{d:"M9.4 233.4c-12.5 12.5-12.5 32.8 0 45.3l160 160c12.5 12.5 32.8 12.5 45.3 0s12.5-32.8 0-45.3L109.2 288 416 288c17.7 0 32-14.3 32-32s-14.3-32-32-32l-306.7 0L214.6 118.6c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0l-160 160z"}))),o={easyClue:{path:"/clues/clue",name:"Play a letter bank clue",style:"primary",onClick:function(){n(50),r([]),a(!1),l(!0)}},return:{path:"/learn",name:"Return",style:"secondary"}},s=[o.return,o.easyClue],c=["repeatedly","often","recurring","looping","cyclical","over and over"].map((function(t){return e.createElement("li",{className:"indicator"},t.toLowerCase())}));return e.createElement("div",{className:"learn container"},i,e.createElement("div",{className:"learn-section"},e.createElement("h1",null,"Letter Bank"),e.createElement("p",null,"In a clue with a letter bank, letters are rearranged like in an anagram, but the letters in the source word(s) can be repeated.")),e.createElement("div",{className:"learn-section"},e.createElement("h2",null,"Indicators"),e.createElement("p",null,"Common letter bank indicators include:"),e.createElement("ul",{className:"indicators"},c)),e.createElement("div",{className:"learn-section"},e.createElement("h2",null,"Examples"),e.createElement("div",{className:"example-container"},e.createElement("p",{className:"example"},"Repeatedly retain host (11)"),e.createElement("div",{className:"explanation"},e.createElement("ul",{className:"mt-0"},e.createElement("li",null,"The definition is ",e.createElement("strong",null,"host")),e.createElement("li",null,e.createElement("strong",null,"Repeatedly")," indicates a letter bank")),e.createElement("p",{className:"text-center"},e.createElement("strong",null,"retain")," → ",e.createElement("strong",null,"entertainer")),e.createElement("div",{className:"solution"},e.createElement("span",{className:"letter"},"e"),e.createElement("span",{className:"letter"},"n"),e.createElement("span",{className:"letter"},"t"),e.createElement("span",{className:"letter"},"e"),e.createElement("span",{className:"letter"},"r"),e.createElement("span",{className:"letter"},"t"),e.createElement("span",{className:"letter"},"a"),e.createElement("span",{className:"letter"},"i"),e.createElement("span",{className:"letter"},"n"),e.createElement("span",{className:"letter"},"e"),e.createElement("span",{className:"letter"},"r"))))),e.createElement("div",{className:"learn-section"},e.createElement(_e,{btnArr:s})))},Bt=function(t){var n=t.setclueId,r=t.setInput,a=t.setCheckAns,l=t.setReturnLearn,i=e.createElement(De,{to:"/learn"},e.createElement("svg",{className:"back-button",xmlns:"http://www.w3.org/2000/svg",width:"25px",height:"25px",viewBox:"0 0 448 512"},e.createElement("path",{d:"M9.4 233.4c-12.5 12.5-12.5 32.8 0 45.3l160 160c12.5 12.5 32.8 12.5 45.3 0s12.5-32.8 0-45.3L109.2 288 416 288c17.7 0 32-14.3 32-32s-14.3-32-32-32l-306.7 0L214.6 118.6c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0l-160 160z"}))),o={easyClue:{path:"/clues/clue",name:"Play a reversal clue",style:"primary",onClick:function(){n(208),r([]),a(!1),l(!0)}},return:{path:"/learn",name:"Return",style:"secondary"}},s=[o.return,o.easyClue],c=["returning","back","backwards","retrace","retreat","reverse","upon reflection","up","inverted"].map((function(t){return e.createElement("li",{className:"indicator"},t.toLowerCase())}));return e.createElement("div",{className:"learn container"},i,e.createElement("div",{className:"learn-section"},e.createElement("h1",null,"Reversal"),e.createElement("p",null,"In a clue with a reversal, reverse the letters to make a new word or words.")),e.createElement("div",{className:"learn-section"},e.createElement("h2",null,"Indicators"),e.createElement("p",null,"Common reversal indicators include:"),e.createElement("ul",{className:"indicators"},c)),e.createElement("div",{className:"learn-section"},e.createElement("h2",null,"Examples"),e.createElement("div",{className:"example-container"},e.createElement("p",{className:"example"},"King with a golden touch is unhappy I'm returning (5)"),e.createElement("div",{className:"explanation"},e.createElement("ul",{className:"mt-0"},e.createElement("li",null,"The definition is ",e.createElement("strong",null,"King with a golden touch")),e.createElement("li",null,e.createElement("strong",null,"unhappy")," can be ",e.createElement("strong",null,"sad")),e.createElement("li",null,e.createElement("strong",null,"I'm")," is used directly"),e.createElement("li",null,e.createElement("strong",null,"returning")," indicates a reversal")),e.createElement("p",{className:"text-center"},e.createElement("strong",null,"sad Im")," → ",e.createElement("strong",null,"midas")),e.createElement("div",{className:"solution"},e.createElement("span",{className:"letter"},"m"),e.createElement("span",{className:"letter"},"i"),e.createElement("span",{className:"letter"},"d"),e.createElement("span",{className:"letter"},"a"),e.createElement("span",{className:"letter"},"s")))),e.createElement("div",{className:"example-container"},e.createElement("p",{className:"example"},"Idly chat with actor Neeson, returning post office worker's sack (7)"),e.createElement("div",{className:"explanation"},e.createElement("ul",{className:"mt-0"},e.createElement("li",null,"The definition is ",e.createElement("strong",null,"post office worker's sack")),e.createElement("li",null,e.createElement("strong",null,"Idly chat")," can be ",e.createElement("strong",null,"gab")),e.createElement("li",null,e.createElement("strong",null,"actor Neeson")," can be ",e.createElement("strong",null,"Liam")),e.createElement("li",null,e.createElement("strong",null,"returning")," indicates a reversal")),e.createElement("p",{className:"text-center"},e.createElement("strong",null,"gab liam")," → ",e.createElement("strong",null,"mailbag")),e.createElement("div",{className:"solution"},e.createElement("span",{className:"letter"},"m"),e.createElement("span",{className:"letter"},"a"),e.createElement("span",{className:"letter"},"i"),e.createElement("span",{className:"letter"},"l"),e.createElement("span",{className:"letter"},"b"),e.createElement("span",{className:"letter"},"a"),e.createElement("span",{className:"letter"},"g"))))),e.createElement("div",{className:"learn-section"},e.createElement(_e,{btnArr:s})))},Nt=function(t){var n=t.setclueId,r=t.setInput,a=t.setCheckAns,l=t.setReturnLearn,i=e.createElement(De,{to:"/learn"},e.createElement("svg",{className:"back-button",xmlns:"http://www.w3.org/2000/svg",width:"25px",height:"25px",viewBox:"0 0 448 512"},e.createElement("path",{d:"M9.4 233.4c-12.5 12.5-12.5 32.8 0 45.3l160 160c12.5 12.5 32.8 12.5 45.3 0s12.5-32.8 0-45.3L109.2 288 416 288c17.7 0 32-14.3 32-32s-14.3-32-32-32l-306.7 0L214.6 118.6c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0l-160 160z"}))),o={easyClue:{path:"/clues/clue",name:"Play a spoonerism clue",style:"primary",onClick:function(){n(192),r([]),a(!1),l(!0)}},return:{path:"/learn",name:"Return",style:"secondary"}},s=[o.return,o.easyClue];return e.createElement("div",{className:"learn container"},i,e.createElement("div",{className:"learn-section"},e.createElement("h1",null,"Spoonerism"),e.createElement("p",null,"In a clue with a spoonerism, swap the sounds at beginnings of two words.")),e.createElement("div",{className:"learn-section"},e.createElement("h2",null,"Indicators"),e.createElement("p",null,"Spoonerisms will include some reference to a spoon or Reverand Spooner (the person who invented spoonerisms)")),e.createElement("div",{className:"learn-section"},e.createElement("h2",null,"Examples"),e.createElement("div",{className:"example-container"},e.createElement("p",{className:"example"},"Clean up, shake a tower, then spoon (4,1,6)"),e.createElement("div",{className:"explanation"},e.createElement("ul",{className:"mt-0"},e.createElement("li",null,"The definition is ",e.createElement("strong",null,"Clean up")),e.createElement("li",null,e.createElement("strong",null,"then spoon")," indicates a spoonerism")),e.createElement("p",{className:"text-center"},e.createElement("strong",null,"shake a tower")," → ",e.createElement("strong",null,"take a shower")),e.createElement("div",{className:"solution"},e.createElement("span",{className:"letter"},"t"),e.createElement("span",{className:"letter"},"a"),e.createElement("span",{className:"letter"},"k"),e.createElement("span",{className:"letter"},"e"),e.createElement("span",{className:"letter"},"a"),e.createElement("span",{className:"letter"},"s"),e.createElement("span",{className:"letter"},"h"),e.createElement("span",{className:"letter"},"o"),e.createElement("span",{className:"letter"},"w"),e.createElement("span",{className:"letter"},"e"),e.createElement("span",{className:"letter"},"r")))),e.createElement("div",{className:"example-container"},e.createElement("p",{className:"example"},"Restaurant supervisors marry bigots, per Rev. Spooner (4,7)"),e.createElement("div",{className:"explanation"},e.createElement("ul",{className:"mt-0"},e.createElement("li",null,"The definition is ",e.createElement("strong",null,"Restaurant supervisors")),e.createElement("li",null,e.createElement("strong",null,"marry")," can be ",e.createElement("strong",null,"wed")),e.createElement("li",null,e.createElement("strong",null,"bigots")," can be ",e.createElement("strong",null,"haters")),e.createElement("li",null,e.createElement("strong",null,"per Rev. Spooner")," indicates a spoonerism")),e.createElement("p",{className:"text-center"},e.createElement("strong",null,"wed haters")," → ",e.createElement("strong",null,"head waiters")),e.createElement("div",{className:"solution"},e.createElement("span",{className:"letter"},"h"),e.createElement("span",{className:"letter"},"e"),e.createElement("span",{className:"letter"},"a"),e.createElement("span",{className:"letter"},"d"),e.createElement("span",{className:"letter"},"w"),e.createElement("span",{className:"letter"},"a"),e.createElement("span",{className:"letter"},"i"),e.createElement("span",{className:"letter"},"t"),e.createElement("span",{className:"letter"},"e"),e.createElement("span",{className:"letter"},"r"),e.createElement("span",{className:"letter"},"s"))))),e.createElement("div",{className:"learn-section"},e.createElement(_e,{btnArr:s})))},St=function(t){var n=t.setclueId,r=t.setInput,a=t.setCheckAns,l=t.setReturnLearn,i=e.createElement(De,{to:"/learn"},e.createElement("svg",{className:"back-button",xmlns:"http://www.w3.org/2000/svg",width:"25px",height:"25px",viewBox:"0 0 448 512"},e.createElement("path",{d:"M9.4 233.4c-12.5 12.5-12.5 32.8 0 45.3l160 160c12.5 12.5 32.8 12.5 45.3 0s12.5-32.8 0-45.3L109.2 288 416 288c17.7 0 32-14.3 32-32s-14.3-32-32-32l-306.7 0L214.6 118.6c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0l-160 160z"}))),o={easyClue:{path:"/clues/clue",name:"Play an & Lit. clue",style:"primary",onClick:function(){n(232),r([]),a(!1),l(!0)}},return:{path:"/learn",name:"Return",style:"secondary"}},s=[o.return,o.easyClue];return e.createElement("div",{className:"learn container"},i,e.createElement("div",{className:"learn-section"},e.createElement("h1",null,"& Lit."),e.createElement("p",null,"In an & Lit. clue, the entire clue functions as a definition.")),e.createElement("div",{className:"learn-section"},e.createElement("h2",null,"Indicators"),e.createElement("p",null,"& Lit. clues are indicated by the presence of an exclamation mark (!) at the end of the clue. They typically also contain another form of wordplay, such as an anagram or deletion.")),e.createElement("div",{className:"learn-section"},e.createElement("h2",null,"Examples"),e.createElement("div",{className:"example-container"},e.createElement("p",{className:"example"},"I only appear manipulated! (6, 5)"),e.createElement("div",{className:"explanation"},e.createElement("ul",{className:"mt-0"},e.createElement("li",null,"The definition is ",e.createElement("strong",null,"I only appear manipulated")),e.createElement("li",null,e.createElement("strong",null,"manipulated")," indicates an anagram")),e.createElement("p",{className:"text-center"},e.createElement("strong",null,"I only appear")," → ",e.createElement("strong",null,"player piano")),e.createElement("div",{className:"solution"},e.createElement("span",{className:"letter"},"p"),e.createElement("span",{className:"letter"},"l"),e.createElement("span",{className:"letter"},"a"),e.createElement("span",{className:"letter"},"y"),e.createElement("span",{className:"letter"},"e"),e.createElement("span",{className:"letter"},"r"),e.createElement("span",{className:"letter"},"p"),e.createElement("span",{className:"letter"},"i"),e.createElement("span",{className:"letter"},"a"),e.createElement("span",{className:"letter"},"n"),e.createElement("span",{className:"letter"},"o")))),e.createElement("div",{className:"example-container"},e.createElement("p",{className:"example"},"Starting with a core of knowledge, gain deeper understanding! (5)"),e.createElement("div",{className:"explanation"},e.createElement("ul",{className:"mt-0"},e.createElement("li",null,"The definition is ",e.createElement("strong",null,"Starting with a core of knowledge, gain deeper understanding")),e.createElement("li",null,e.createElement("strong",null,"core of knowledge")," can be ",e.createElement("strong",null,"l")),e.createElement("li",null,e.createElement("strong",null,"gain")," can be ",e.createElement("strong",null,"earn"))),e.createElement("p",{className:"text-center"},e.createElement("strong",null,"l")," + ",e.createElement("strong",null,"earn")," = ",e.createElement("strong",null,"learn")),e.createElement("div",{className:"solution"},e.createElement("span",{className:"letter"},"l"),e.createElement("span",{className:"letter"},"e"),e.createElement("span",{className:"letter"},"a"),e.createElement("span",{className:"letter"},"r"),e.createElement("span",{className:"letter"},"n"))))),e.createElement("div",{className:"learn-section"},e.createElement(_e,{btnArr:s})))},Ft=function(t){var n=t.setclueId,r=t.setInput,a=t.setCheckAns,l=t.setReturnLearn,i=e.createElement(De,{to:"/learn"},e.createElement("svg",{xmlns:"http://www.w3.org/2000/svg",width:"25px",height:"25px",viewBox:"0 0 448 512"},e.createElement("path",{d:"M9.4 233.4c-12.5 12.5-12.5 32.8 0 45.3l160 160c12.5 12.5 32.8 12.5 45.3 0s12.5-32.8 0-45.3L109.2 288 416 288c17.7 0 32-14.3 32-32s-14.3-32-32-32l-306.7 0L214.6 118.6c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0l-160 160z"}))),o={easyClue:{path:"/clues/clue",name:"Play a combination clue",style:"primary",onClick:function(){n(122),r([]),a(!1),l(!0)}},return:{path:"/learn",name:"Return",style:"secondary"}},s=[o.return,o.easyClue];return e.createElement("div",{className:"learn container"},i,e.createElement("div",{className:"learn-section"},e.createElement("h1",null,"Combination"),e.createElement("p",null,"Many of the more-advanced clues in cryptics employ multiple levels of wordplay. Combination clues can include any combination of the other forms of wordplay featured in Learn Cryptic.")),e.createElement("div",{className:"learn-section"},e.createElement("h2",null,"Examples"),e.createElement("div",{className:"example-container"},e.createElement("p",{className:"example"},"Boosting not nearly all of a musical sound (5)"),e.createElement("div",{className:"explanation"},e.createElement("ul",{className:"mt-0"},e.createElement("li",null,"The definition is ",e.createElement("strong",null,"of a musical sound")),e.createElement("li",null,"A clue like this would be used in a Down crossword clue. ",e.createElement("strong",null,"Boosting")," instructs us to write ",e.createElement("strong",null,"not")," upward (a reversal), giving us ",e.createElement("strong",null,"ton")),e.createElement("li",null,e.createElement("strong",null,"nearly")," indicates a deletion on ",e.createElement("strong",null,"all"),", giving us ",e.createElement("strong",null,"al"))),e.createElement("p",{className:"text-center"},e.createElement("strong",null,"ton")," + ",e.createElement("strong",null,"al")," = ",e.createElement("strong",null,"tonal")),e.createElement("div",{className:"solution"},e.createElement("span",{className:"letter"},"t"),e.createElement("span",{className:"letter"},"o"),e.createElement("span",{className:"letter"},"n"),e.createElement("span",{className:"letter"},"a"),e.createElement("span",{className:"letter"},"l")))),e.createElement("div",{className:"example-container"},e.createElement("p",{className:"example"},"Caressed, Don excitedly bolted outside (7)"),e.createElement("div",{className:"explanation"},e.createElement("ul",{className:"mt-0"},e.createElement("li",null,"The definition is ",e.createElement("strong",null,"Caressed")),e.createElement("li",null,e.createElement("strong",null,"bolted")," can be ",e.createElement("strong",null,"fled")),e.createElement("li",null,e.createElement("strong",null,"outside")," indicates a container on ",e.createElement("strong",null,"fled")),e.createElement("li",null,e.createElement("strong",null,"excitedly")," indicates an anagram on ",e.createElement("strong",null,"don"),", giving us ",e.createElement("strong",null,"ond"))),e.createElement("p",{className:"text-center"},e.createElement("strong",null,"f"),"(",e.createElement("strong",null,"ond"),")",e.createElement("strong",null,"led")," = ",e.createElement("strong",null,"fondled")),e.createElement("div",{className:"solution"},e.createElement("span",{className:"letter"},"f"),e.createElement("span",{className:"letter"},"o"),e.createElement("span",{className:"letter"},"n"),e.createElement("span",{className:"letter"},"d"),e.createElement("span",{className:"letter"},"l"),e.createElement("span",{className:"letter"},"e"),e.createElement("span",{className:"letter"},"d"))))),e.createElement("div",{className:"learn-section"},e.createElement(_e,{btnArr:s})))},Rt=n.p+"46ce3782d0878abd75e6b376143c14dc.svg",Lt=function(t){var n=t.handleInput;return(0,e.useEffect)((function(){var e=function(e){/^[a-zA-Z]$/.test(e.key)?n(e.key.toUpperCase()):"Backspace"!==e.key&&"Delete"!==e.key||n("del")};return document.addEventListener("keydown",e),function(){document.removeEventListener("keydown",e)}}),[]),e.createElement("div",{className:"container keyboard"},e.createElement("div",{className:"k-row k-row-1"},e.createElement("div",{onClick:function(){return n("Q")}},e.createElement("span",null,"Q")),e.createElement("div",{onClick:function(){return n("W")}},e.createElement("span",null,"W")),e.createElement("div",{onClick:function(){return n("E")}},e.createElement("span",null,"E")),e.createElement("div",{onClick:function(){return n("R")}},e.createElement("span",null,"R")),e.createElement("div",{onClick:function(){return n("T")}},e.createElement("span",null,"T")),e.createElement("div",{onClick:function(){return n("Y")}},e.createElement("span",null,"Y")),e.createElement("div",{onClick:function(){return n("U")}},e.createElement("span",null,"U")),e.createElement("div",{onClick:function(){return n("I")}},e.createElement("span",null,"I")),e.createElement("div",{onClick:function(){return n("O")}},e.createElement("span",null,"O")),e.createElement("div",{onClick:function(){return n("P")}},e.createElement("span",null,"P"))),e.createElement("div",{className:"k-row k-row-2"},e.createElement("div",{onClick:function(){return n("A")}},e.createElement("span",null,"A")),e.createElement("div",{onClick:function(){return n("S")}},e.createElement("span",null,"S")),e.createElement("div",{onClick:function(){return n("D")}},e.createElement("span",null,"D")),e.createElement("div",{onClick:function(){return n("F")}},e.createElement("span",null,"F")),e.createElement("div",{onClick:function(){return n("G")}},e.createElement("span",null,"G")),e.createElement("div",{onClick:function(){return n("H")}},e.createElement("span",null,"H")),e.createElement("div",{onClick:function(){return n("J")}},e.createElement("span",null,"J")),e.createElement("div",{onClick:function(){return n("K")}},e.createElement("span",null,"K")),e.createElement("div",{onClick:function(){return n("L")}},e.createElement("span",null,"L"))),e.createElement("div",{className:"k-row k-row-3"},e.createElement("div",{onClick:function(){return n("Z")}},e.createElement("span",null,"Z")),e.createElement("div",{onClick:function(){return n("X")}},e.createElement("span",null,"X")),e.createElement("div",{onClick:function(){return n("C")}},e.createElement("span",null,"C")),e.createElement("div",{onClick:function(){return n("V")}},e.createElement("span",null,"V")),e.createElement("div",{onClick:function(){return n("B")}},e.createElement("span",null,"B")),e.createElement("div",{onClick:function(){return n("N")}},e.createElement("span",null,"N")),e.createElement("div",{onClick:function(){return n("M")}},e.createElement("span",null,"M")),e.createElement("div",{onClick:function(){return n("del")},id:"backspace"},e.createElement("img",{src:Rt}))))},Tt=function(t){var n=t.activeClue,r=t.nextHint,a=t.input,l=t.checkAns,i=t.isCorrectAns,o=t.isSolution,s=t.returnLearn,c=t.buttons,u=(0,e.useRef)(),m=l?i?e.createElement(e.Fragment,null,e.createElement("strong",null,a.join("").toUpperCase())," is correct.",e.createElement("br",null),"Nice work!"):e.createElement(e.Fragment,null,e.createElement("strong",null,a.join("").toUpperCase())," is not the correct answer."):function(t){var n=(t.category&&t.category.slice(0,1).includes(["a","e","i","o","u"]),"a");switch(t.type){case"definition":return 1==t.value.length?e.createElement(e.Fragment,null,e.createElement("strong",null,t.value[0].toUpperCase())," is the definition"):e.createElement(e.Fragment,null,"Both ",e.createElement("strong",null,t.value[0].toUpperCase())," and ",e.createElement("strong",null,t.value[1].toUpperCase())," are definitions for the solution");case"indicator":switch(t.category){case"anagram":return e.createElement(e.Fragment,null,e.createElement("strong",null,t.value.toUpperCase())," indicates an anagram on ",e.createElement("strong",null,t.end.value[0].toUpperCase()));case"ag-2":return e.createElement(e.Fragment,null,e.createElement("strong",null,t.end.value[1].toUpperCase())," is an anagram of ",e.createElement("strong",null,t.end.value[0].toUpperCase()));case"charade":case"particle":case"synonym":case"symbol":return e.createElement(e.Fragment,null,e.createElement("strong",null,t.value.toUpperCase())," can be ",e.createElement("strong",null,t.end.value[0].toUpperCase()));case"container":return e.createElement(e.Fragment,null,e.createElement("strong",null,t.value.toUpperCase()),", indicates a container");case"deletion":return e.createElement(e.Fragment,null,e.createElement("strong",null,t.value.toUpperCase()),", indicates a deletion");case"delete even":return e.createElement(e.Fragment,null,e.createElement("strong",null,t.value.toUpperCase()),", indicates deleting the even letters from ",e.createElement("strong",null,t.end.value[0].toUpperCase()));case"delete odd":return e.createElement(e.Fragment,null,e.createElement("strong",null,t.value.toUpperCase()),", indicates deleting the odd letters from ",e.createElement("strong",null,t.end.value[0].toUpperCase()));case"direct":return e.createElement(e.Fragment,null,e.createElement("strong",null,t.value.toUpperCase())," is used");case"hidden word":return e.createElement(e.Fragment,null,e.createElement("strong",null,t.value.toUpperCase())," indicates a hidden word at ",e.createElement("strong",null,t.end.value[0].toUpperCase()));case"hw-2":return e.createElement(e.Fragment,null,e.createElement("strong",null,t.end.value[1].toUpperCase())," is hidden within ",e.createElement("strong",null,t.end.value[0].toUpperCase()));case"homophone":return e.createElement(e.Fragment,null,e.createElement("strong",null,t.value.toUpperCase())," indicates a homophone");case"hp-2":return e.createElement(e.Fragment,null,e.createElement("strong",null,t.end.value[1].toUpperCase())," is a homophone of ",e.createElement("strong",null,t.end.value[0].toUpperCase()));case"initialism":return e.createElement(e.Fragment,null,e.createElement("strong",null,t.value.toUpperCase())," indicates the beginning of one or more words");case"letter bank":return e.createElement(e.Fragment,null,e.createElement("strong",null,t.value.toUpperCase())," indicates a letter bank");case"lb-2":return e.createElement(e.Fragment,null,e.createElement("strong",null,t.end.value[0].toUpperCase())," is an letter bank for ",e.createElement("strong",null,t.end.value[1].toUpperCase()));case"reversal":return e.createElement(e.Fragment,null,e.createElement("strong",null,t.value.toUpperCase()),", indicates a reversal on ",e.createElement("strong",null,t.end.value[0].toUpperCase()),", making it ",e.createElement("strong",null,t.end.value[1].toUpperCase()));case"spoonerism":return e.createElement(e.Fragment,null,e.createElement("strong",null,t.end.value[1].toUpperCase())," is a spoonerism of ",e.createElement("strong",null,t.end.value[0].toUpperCase()));case"dd-2":case"in-2":return;default:return 1==t.end.value.length?e.createElement(e.Fragment,null,e.createElement("strong",null,t.value.toUpperCase())," incicates ",n," ",t.category," at ",e.createElement("strong",null,t.end.value[0].toUpperCase())):e.createElement(e.Fragment,null,e.createElement("strong",null,t.value.toUpperCase())," incicates ",n," ",t.category," at ",e.createElement("strong",null,t.end.value[0].toUpperCase())," and ",e.createElement("strong",null,t.end.value[1].toUpperCase()))}default:return t.value}}(n.hints[r]),d=!!n.hints[r].explainer&&n.hints[r].explainer,p=o?[c.endClueHint]:l&&i?[c.endClueGuess]:[c.continue];s&&(o||l&&i)&&(p=[c.returnLearn]);var f=o?"solution":l&&i?"is-correct-ans":"continue";return e.createElement("div",{className:"message ".concat(f),ref:u},m&&e.createElement("div",{className:"message-copy"},m,d&&e.createElement("div",{className:"explainer"},d)),e.createElement(_e,{btnArr:p,isSolution:o,stack:o}))};function Dt(e){return Dt="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},Dt(e)}function It(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function zt(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?It(Object(n),!0).forEach((function(t){Pt(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):It(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function Pt(e,t,n){return(t=function(e){var t=function(e){if("object"!=Dt(e)||!e)return e;var t=e[Symbol.toPrimitive];if(void 0!==t){var n=t.call(e,"string");if("object"!=Dt(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==Dt(t)?t:t+""}(t))in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}const Ut=function(t){var n=t.showMessage,r=t.setShowMessage,a=t.activeClue,l=t.setclueId,i=t.nextHint,o=t.setNextHint,s=t.setMode,c=t.addCompletedClue,u=t.handleInput,m=t.input,d=t.setInput,p=t.checkAns,f=t.setCheckAns,A=t.stats,g=t.setStats,h=t.returnLearn,y=t.setReturnLearn,v={showHint:{name:"Show hint",style:"secondary",onClick:function(){g((function(e){return zt(zt({},e),{},{hints:e.hints+1})})),f(!1),r(!0)}},revealSolution:{name:"Reveal solution",style:"alt",onClick:function(){c(a,A,"h"),g((function(e){return zt(zt({},e),{},{hints:e.hints+1})})),r(!0),d([])}},checkAnswer:{name:"Check answer",style:"primary",onClick:function(){m.join("").toUpperCase()===a.solution.arr.join("").toUpperCase()?(c(a,A,"g"),g((function(e){return zt(zt({},e),{},{guesses:e.guesses+1})}))):g((function(e){return zt(zt({},e),{},{guesses:e.guesses+1})})),f(!0),r(!0)}},continue:{name:"Continue",style:"secondary",onClick:function(){r(!1),!p&&o(i+1),f(!1)}},endClueHint:{name:"Play more",style:"secondary",onClick:function(){r(!1),o(0),l(!1),y(!1),g({guesses:0,hints:0,how:""}),s("archive")}},endClueGuess:{name:"Play more",style:"gray",onClick:function(){r(!1),o(0),l(!1),y(!1),g({guesses:0,hints:0,how:""}),s("archive")}},returnLearn:{name:"Return",style:"alt",onClick:function(){r(!1),o(0),l(!1),y(!1),g({guesses:0,hints:0,how:""}),s("learn")}}},E=E||[v.showHint];a.hints[i].reveals&&(E=[v.revealSolution]),m.length===a.solution.arr.length&&E.push(v.checkAnswer);var C=m.join("").toUpperCase()===a.solution.arr.join("").toUpperCase(),b=a.hints.length-1==i&&!p;return e.createElement("div",{className:"bottom"},e.createElement("div",{className:"container px-0"},n?e.createElement(Tt,{setShowMessage:r,activeClue:a,setclueId:l,nextHint:i,setNextHint:o,setMode:s,input:m,checkAns:p,setCheckAns:f,addCompletedClue:c,isCorrectAns:C,isSolution:b,returnLearn:h,buttons:v}):e.createElement(e.Fragment,null,e.createElement(_e,{btnArr:E}),e.createElement(Lt,{handleInput:u}))))},_t=JSON.parse('[{"id":"181","clue":{"value":"Rejected Rod\'s suggestions"},"release":"3/16/2025","difficulty":"1","ready":"TRUE","type":"reversal","definition":["suggestions"],"hints":[{"category":"synonym","value":"Rod","end":{"value":["spit"]}},{"category":"reversal","value":"Rejected","end":{"value":["spit","tips"]}}],"solution":{"value":"tips"},"source":{"value":"Kegler"}},{"id":"151","clue":{"value":"Strip of grass thaws out"},"release":"3/15/2025","difficulty":"2","ready":"TRUE","type":"anagram","definition":["Strip of grass"],"hints":[{"category":"anagram","value":"out","end":{"value":["thaws","swath"]}}],"solution":{"value":"swath"},"source":{"value":"Kegler"}},{"id":"158","clue":{"value":"IRS forms, true, upset hospital personnel"},"release":"3/14/2025","difficulty":"2","ready":"TRUE","type":"anagram, charade","definition":["IRS forms"],"hints":[{"category":"anagram","value":"upset","end":{"value":["true","retu"]}},{"category":"synonym","value":"hospital personnel","end":{"value":["RNs"]}}],"solution":{"value":"returns"},"source":{"value":"Kegler"}},{"id":"189","clue":{"value":"View bishopric"},"release":"3/13/2025","difficulty":"2","ready":"TRUE","type":"double definition","definition":["View","bishopric"],"solution":{"value":"see"},"source":{"value":"Kegler"}},{"id":"294","clue":{"value":"Tuna container holds exotic fuel"},"release":"3/12/2025","difficulty":"3","ready":"TRUE","type":"anagram, container","definition":["Tuna"],"hints":[{"category":"synonym","value":"container","end":{"value":["bin"]}},{"category":"anagram","value":"exotic","end":{"value":["fuel","luef"]}},{"category":"container","value":"holds","end":{"value":["b","luef","in"]}}],"solution":{"value":"bluefin"},"source":{"value":"Kegler"}},{"id":"36","clue":{"value":"Cargo said \\"moo!\\" in our ears"},"release":"3/11/2025","difficulty":"2","ready":"TRUE","type":"homophone","definition":["Cargo"],"hints":[{"category":"synonym","value":"said \\"moo!\\"","end":{"value":["lowed"]}},{"category":"homophone","value":"in our ears","end":{"value":["lowed","load"]}}],"solution":{"value":"load"},"source":{"value":"Fraz"}},{"id":"285","clue":{"value":"Edges away from paisley passageway"},"release":"3/10/2025","difficulty":"2","ready":"TRUE","type":"deletion","definition":["passageway"],"hints":[{"category":"direct","value":"paisley"},{"category":"deletion","value":"Edges away from","end":{"value":["paisley","aisle"]},"explainer":"Here, \\"edges away\\" means \\"delete the first and last letters\\""}],"solution":{"value":"aisle"},"source":{"value":"Kegler"}},{"id":"58","clue":{"value":"Garland has looked-over knot after weather event"},"release":"3/9/2025","difficulty":"3","ready":"TRUE","type":"charade","definition":["Garland has looked-over"],"hints":[{"category":"synonym","value":"weather event","end":{"value":["rain"]}},{"category":"synonym","value":"knot","end":{"value":["bow"]}}],"solution":{"value":"rainbow"},"source":{"value":"plunk it"}},{"id":"126","clue":{"value":"Agreements with a corporation\'s primary power suppliers"},"release":"3/8/2025","difficulty":"2","ready":"TRUE","type":"charade","definition":["Agreements"],"hints":[{"category":"direct","value":"a"},{"category":"particle","value":"corporation\'s primary","end":{"value":["c"]}},{"category":"synonym","value":"power suppliers","end":{"value":["cords"]}}],"solution":{"value":"accords"},"source":{"value":"Kegler"}},{"id":"240","clue":{"value":"Alleged experts from United Nations starting to dig in mines"},"release":"3/7/2025","difficulty":"3","ready":"TRUE","type":"charade, container","definition":["Alleged experts"],"hints":[{"category":"symbol","value":"United Nations","end":{"value":["UN"]}},{"category":"particle","value":"starting to dig","end":{"value":["d"]}},{"category":"synonym","value":"mines","end":{"value":["pits"]}},{"category":"container","value":"in","end":{"value":["p","UN","d","its"]}}],"solution":{"value":"pundits"},"source":{"value":"Kegler"}},{"id":"160","clue":{"value":"Snag Hanks\' first desire"},"release":"3/6/2025","difficulty":"2","ready":"TRUE","type":"charade","definition":["Snag"],"hints":[{"category":"particle","value":"Hanks\' first","end":{"value":["h"]}},{"category":"synonym","value":"desire","end":{"value":["itch"]}}],"solution":{"value":"hitch"},"source":{"value":"Kegler"}},{"id":"275","clue":{"value":"Range of influence of salt and pepper on this planet"},"release":"3/5/2025","difficulty":"2","ready":"TRUE","type":"charade","definition":["Range of influence"],"hints":[{"category":"symbol","value":"salt","end":{"value":["s"]}},{"category":"symbol","value":"pepper","end":{"value":["p"]}},{"category":"synonym","value":"on this planet","end":{"value":["here"]}}],"solution":{"value":"sphere"},"source":{"value":"Kegler"}},{"id":"323","clue":{"value":"Quickly move Southern Indian dish"},"release":"3/4/2025","difficulty":"2","ready":"TRUE","type":"charade","definition":["Quickly move"],"hints":[{"category":"symbol","value":"Southern","end":{"value":["s"]}},{"category":"synonym","value":"Indian dish","end":{"value":["curry"]}}],"solution":{"value":"scurry"},"source":{"value":"Kegler"}},{"id":"67","clue":{"value":"Son insinuating desire did not exist"},"release":"3/3/2025","difficulty":"2","ready":"TRUE","type":"container","definition":["did not exist"],"hints":[{"category":"symbol","value":"Son","end":{"value":["S"]}},{"category":"synonym","value":"desire","end":{"value":["want"]}},{"category":"container","value":"insinuating","end":{"value":["wa","S","nt"]}}],"solution":{"value":"wasnt"},"source":{"value":"Kegler"}},{"id":"106","clue":{"value":"Fanatic raised alcoholic container"},"release":"3/2/2025","difficulty":"1","ready":"TRUE","type":"reversal","definition":["alcoholic container"],"hints":[{"category":"synonym","value":"Fanatic","end":{"value":["nut"]}},{"category":"reversal","value":"raised","end":{"value":["nut","tun"]}}],"solution":{"value":"tun"},"source":{"value":"Kegler"}},{"id":"83","clue":{"value":"C in C enthralled by brief opportunities to use power unjustly"},"release":"3/1/2025","difficulty":"3","ready":"TRUE","type":"container","definition":["to use power unjustly"],"hints":[{"category":"synonym","value":"C in C","end":{"value":["pres"]},"explainer":"Here, C in C means \\"Commander in Chief,\\" or president (shortened to pres)"},{"category":"particle","value":"brief opportunities","end":{"value":["ops"]}},{"category":"container","value":"enthralled by","end":{"value":["op","pres","s"]}}],"solution":{"value":"oppress"},"source":{"value":"Kegler"}},{"id":"129","clue":{"value":"Make black and brown patterned fabric"},"release":"2/28/2025","difficulty":"2","ready":"TRUE","type":"charade","definition":["patterned fabric"],"hints":[{"category":"synonym","value":"Make black","end":{"value":["tar"]}},{"category":"synonym","value":"brown","end":{"value":["tan"]}}],"solution":{"value":"tartan"},"source":{"value":"Kegler"}},{"id":"256","clue":{"value":"Angry singer that is outside"},"release":"2/27/2025","difficulty":"2","ready":"TRUE","type":"container","definition":["Angry"],"hints":[{"category":"synonym","value":"singer","end":{"value":["rat"]},"explainer":"In criminal justice, to \\"rat\\" or \\"sing\\" means to betray your accomplices"},{"category":"symbol","value":"that is","end":{"value":["ie"]}},{"category":"container","value":"outside","end":{"value":["i","rat","e"]}}],"solution":{"value":"irate"},"source":{"value":"Kegler"}},{"id":"207","clue":{"value":"Ron comes up with one dark film"},"release":"2/26/2025","difficulty":"2","ready":"TRUE","type":"container, reversal","definition":["dark film"],"hints":[{"category":"direct","value":"Ron"},{"category":"reversal","value":"comes up","end":{"value":["Ron","noR"]},"explainer":"For a down entry, \\"comes up\\" can indicate a reversal"},{"category":"symbol","value":"one","end":{"value":["I"]}},{"category":"container","value":"with","end":{"value":["no","I","R"]}}],"solution":{"value":"noir"},"source":{"value":"Kegler"}},{"id":"102","clue":{"value":"Rightfully, girl admitted to wild yell"},"release":"2/25/2025","difficulty":"3","ready":"TRUE","type":"anagram, container","definition":["Rightfully"],"hints":[{"category":"synonym","value":"girl","end":{"value":["gal"]}},{"category":"anagram","value":"wild","end":{"value":["yell","lely"]}},{"category":"container","value":"admitted","end":{"value":["le","gal","ly"]}}],"solution":{"value":"legally"},"source":{"value":"Kegler"}},{"id":"99","clue":{"value":"Ed\'s busy working with composer Claude"},"release":"2/24/2025","difficulty":"2","ready":"TRUE","type":"anagram","definition":["composer Claude"],"hints":[{"category":"anagram","value":"working","end":{"value":["Ed\'s busy","dEbussy"]}}],"solution":{"value":"debussy"},"source":{"value":"Kegler"}},{"id":"321","clue":{"value":"Break tip off of tool, also"},"release":"2/23/2025","difficulty":"2","ready":"TRUE","type":"deletion","definition":["also"],"hints":[{"category":"direct","value":"tool"},{"category":"deletion","value":"Break tip off of","end":{"value":["tool","too"]}}],"solution":{"value":"too"},"source":{"value":"Kegler"}},{"id":"315","clue":{"value":"Torment Mr. Truman"},"release":"2/22/2025","difficulty":"2","ready":"TRUE","type":"double definition","definition":["Torment","Mr. Truman"],"solution":{"value":"harry"},"source":{"value":"Kegler"}},{"id":"193","clue":{"value":"Originally called some telephone extension"},"release":"2/21/2025","difficulty":"2","ready":"TRUE","type":"hidden word","definition":["Originally called"],"hints":[{"category":"hidden word","value":"some","end":{"value":["telephone extension","nee"]}}],"solution":{"value":"nee"},"source":{"value":"Kegler"}},{"id":"74","clue":{"value":"Claims a shelf is mentioned"},"release":"2/20/2025","difficulty":"2","ready":"TRUE","type":"homophone","definition":["Claims"],"hints":[{"category":"direct","value":"a"},{"category":"synonym","value":"shelf","end":{"value":["ledge"]}},{"category":"direct","value":"is"},{"category":"homophone","value":"mentioned","end":{"value":["a ledge is","alleges"]}}],"solution":{"value":"alleges"},"source":{"value":"Kegler"}},{"id":"210","clue":{"value":"Again talk about returning that lady\'s tree"},"release":"2/19/2025","difficulty":"2","ready":"TRUE","type":"reversal, charade","definition":["Again talk about"],"hints":[{"category":"synonym","value":"that lady","end":{"value":["her"]}},{"category":"reversal","value":"returning","end":{"value":["her","reh"]}},{"category":"synonym","value":"tree","end":{"value":["ash"]}}],"solution":{"value":"rehash"},"source":{"value":"Kegler"}},{"id":"45","clue":{"value":"Doesn\'t debate grease must be changed"},"release":"2/18/2025","difficulty":"2","ready":"TRUE","type":"anagram","definition":["Doesn\'t debate"],"hints":[{"category":"anagram","value":"must be changed","end":{"value":["grease","agrees"]}}],"solution":{"value":"agrees"},"source":{"value":"Fraz"}},{"id":"208","clue":{"value":"Actress Ryan\'s jewelry returned"},"release":"2/17/2025","difficulty":"1","ready":"TRUE","type":"reversal","definition":["Actress Ryan"],"hints":[{"category":"synonym","value":"jewelry","end":{"value":["gem"]}},{"category":"reversal","value":"returned","end":{"value":["gem","meg"]}}],"solution":{"value":"meg"},"source":{"value":"Kegler"}},{"id":"316","clue":{"value":"\\"Perry Mason\\" actor\'s cocktail of brandy or rum"},"release":"2/16/2025","difficulty":"2","ready":"TRUE","type":"anagram","definition":["\\"Perry Mason\\" actor"],"hints":[{"category":"anagram","value":"cocktail","end":{"value":["brandy or rum","raymond burr"]}}],"solution":{"value":"Raymond Burr"},"source":{"value":"Kegler"}},{"id":"85","clue":{"value":"Tied actress Campbell up"},"release":"2/15/2025","difficulty":"1","ready":"TRUE","type":"reversal","definition":["Tied"],"hints":[{"category":"synonym","value":"actress Campbell","end":{"value":["Neve"]}},{"category":"reversal","value":"up","end":{"value":["Neve","eveN"]},"explainer":"\\"Bringing up,\\" in a down clue, may indicate a reversal"}],"solution":{"value":"even"},"source":{"value":"Kegler"}},{"id":"298","clue":{"value":"Saw-toothed river rodent caught by ranked tennis player"},"release":"2/14/2025","difficulty":"2","ready":"TRUE","type":"charade, container","definition":["Saw-toothed"],"hints":[{"category":"symbol","value":"river","end":{"value":["r"]}},{"category":"synonym","value":"rodent","end":{"value":["rat"]}},{"category":"synonym","value":"ranked tennis player","end":{"value":["seed"]}},{"category":"container","value":"caught by","end":{"value":["se","r","rat","ed"]}}],"solution":{"value":"serrated"},"source":{"value":"Kegler"}},{"id":"280","clue":{"value":"Ordered blue drink"},"release":"2/13/2025","difficulty":"2","ready":"TRUE","type":"charade","definition":["Ordered"],"hints":[{"category":"symbol","value":"blue","end":{"value":["b"]}},{"category":"synonym","value":"drink","end":{"value":["ade"]}}],"solution":{"value":"bade"},"source":{"value":"Kegler"}},{"id":"252","clue":{"value":"Coffee contains ice"},"release":"2/12/2025","difficulty":"2","ready":"TRUE","type":"hidden word","definition":["ice"],"hints":[{"category":"hidden word","value":"contains","end":{"value":["Coffee","off"]},"explainer":"\\"Ice\\" and \\"off\\" are both slang terms (mafia-derived?) for \\"kill\\""}],"solution":{"value":"off"},"source":{"value":"Kegler"}},{"id":"82","clue":{"value":"Retro gym ran a mortuary section for centurions, et al"},"release":"2/11/2025","difficulty":"3","ready":"TRUE","type":"hidden word, reversal","definition":["centurions, et al"],"hints":[{"category":"hidden word","value":"section","end":{"value":["gym ran a mortuary","ymranamor"]}},{"category":"reversal","value":"Retro","end":{"value":["ymranamor","roman army"]}}],"solution":{"value":"roman army"},"source":{"value":"Kegler"}},{"id":"243","clue":{"value":"Early sci-fi writer\'s incredible nerve"},"release":"2/10/2025","difficulty":"2","ready":"TRUE","type":"anagram","definition":["Early sci-fi writer"],"hints":[{"category":"anagram","value":"incredible","end":{"value":["nerve","verne"]}}],"solution":{"value":"Verne"},"source":{"value":"Kegler"}},{"id":"236","clue":{"value":"Sister has married husband from Stockholm, perhaps"},"release":"2/9/2025","difficulty":"2","ready":"TRUE","type":"charade, container","definition":["from Stockholm, perhaps"],"hints":[{"category":"synonym","value":"Sister","end":{"value":["sis"]}},{"category":"synonym","value":"married","end":{"value":["wed"]}},{"category":"container","value":"has","end":{"value":["s","wed","is"]}},{"category":"symbol","value":"husband","end":{"value":["H"]}}],"solution":{"value":"Swedish"},"source":{"value":"Kegler"}},{"id":"41","clue":{"value":"Lawyer recalled gossip about corruption"},"release":"2/8/2025","difficulty":"3","ready":"TRUE","type":"container, reversal","definition":["Lawyer"],"hints":[{"category":"synonym","value":"gossip","end":{"value":["yenta"]}},{"category":"synonym","value":"corruption","end":{"value":["rot"]}},{"category":"container","value":"about","end":{"value":["yen","rot","ta"]}},{"category":"reversal","value":"recalled","end":{"value":["yenrotta","attorney"]}}],"solution":{"value":"attorney"},"source":{"value":"Fraz"}},{"id":"282","clue":{"value":"Backed up store\'s streetcar"},"release":"2/7/2025","difficulty":"1","ready":"TRUE","type":"reversal","definition":["streetcar"],"hints":[{"category":"synonym","value":"store","end":{"value":["mart"]}},{"category":"reversal","value":"Backed up","end":{"value":["mart","tram"]}}],"solution":{"value":"tram"},"source":{"value":"Kegler"}},{"id":"209","clue":{"value":"Way out, very loud gold-plated concert gear"},"release":"2/6/2025","difficulty":"3","ready":"TRUE","type":"charade, container","definition":["Way out"],"hints":[{"category":"symbol","value":"very loud","end":{"value":["ff"]},"explainer":"In musical notation, \\"ff\\" stands for \\"fortissimo,\\" meaning \\"very loud\\""},{"category":"synonym","value":"gold","end":{"value":["or"]},"explainer":"In French and in heraldry, \\"or\\" means \\"gold\\""},{"category":"container","value":"plated","end":{"value":["o","ff","r"]},"explainer":"Here, \\"gold-plated\\" means OR \\"plates,\\" or covers, FF"},{"category":"synonym","value":"concert gear","end":{"value":["amp"]}}],"solution":{"value":"off ramp"},"source":{"value":"Kegler"}},{"id":"205","clue":{"value":"Academic institution in Honshu ignoring the odds"},"release":"2/5/2025","difficulty":"2","ready":"TRUE","type":"deletion","definition":["Academic institution"],"hints":[{"category":"direct","value":"Honshu"},{"category":"delete odd","value":"ignoring the odds","end":{"value":["Honshu","OSU"]}}],"solution":{"value":"OSU"},"source":{"value":"Kegler"}},{"id":"198","clue":{"value":"Run into limitless drama"},"release":"2/4/2025","difficulty":"2","ready":"TRUE","type":"deletion","definition":["Run into"],"hints":[{"category":"direct","value":"drama"},{"category":"deletion","value":"limitless","end":{"value":["drama","ram"]},"explainer":"Here, \\"limitless\\" means without the beginning and end letters"}],"solution":{"value":"ram"},"source":{"value":"Kegler"}},{"id":"122","clue":{"value":"Ornamental strip from shirt worn backwards by Paul"},"release":"2/3/2025","difficulty":"3","ready":"TRUE","type":"charade, reversal","definition":["Ornamental strip"],"hints":[{"category":"synonym","value":"shirt","end":{"value":["tee"]}},{"category":"reversal","value":"backwards","end":{"value":["tee","eet"]}},{"category":"direct","value":"Paul"},{"category":"container","value":"worn","end":{"value":["e","Paul","et"]}}],"solution":{"value":"epaulet"},"source":{"value":"Kegler"}},{"id":"163","clue":{"value":"Girls with large butts"},"release":"2/2/2025","difficulty":"2","ready":"TRUE","type":"charade","definition":["Girls"],"hints":[{"category":"symbol","value":"large","end":{"value":["l"]}},{"category":"synonym","value":"butts","end":{"value":["asses"]}}],"solution":{"value":"lasses"},"source":{"value":"Kegler"}},{"id":"144","clue":{"value":"Bauble from hockey venue seen in Asian celebration"},"release":"2/1/2025","difficulty":"2","ready":"TRUE","type":"container","definition":["Bauble"],"hints":[{"category":"synonym","value":"hockey venue","end":{"value":["rink"]}},{"category":"synonym","value":"Asian celebration","end":{"value":["Tet"]}},{"category":"container","value":"seen in","end":{"value":["T","rink","et"]}}],"solution":{"value":"trinket"},"source":{"value":"Kegler"}},{"id":"140","clue":{"value":"Descriptor of the empty room"},"release":"1/31/2025","difficulty":"1","ready":"TRUE","type":"charade, deletion","definition":["Descriptor"],"hints":[{"category":"particle","value":"the empty","end":{"value":["te"]}},{"category":"symbol","value":"room","end":{"value":["rm"]}}],"solution":{"value":"term"},"source":{"value":"Kegler"}},{"id":"112","clue":{"value":"Actress Cruz leaves prison behind in \\"Bond on the Run\\""},"release":"1/30/2025","difficulty":"2","ready":"TRUE","type":"deletion","definition":["\\"Bond on the Run\\""],"hints":[{"category":"synonym","value":"Actress Cruz","end":{"value":["Penelope"]}},{"category":"deletion","value":"leaves prison behind","end":{"value":["penelope","elope"]},"explainer":"another word for prison is \\"pen\\""}],"solution":{"value":"elope"},"source":{"value":"Kegler"}},{"id":"192","clue":{"value":"Cut short sharp criticism, per Rev. Spooner\'s plan"},"release":"1/29/2025","difficulty":"2","ready":"TRUE","type":"spoonerism","definition":["plan"],"hints":[{"category":"synonym","value":"Cut short","end":{"value":["mowed"]}},{"category":"synonym","value":"sharp criticism","end":{"value":["rap"]}},{"category":"spoonerism","value":"per Rev. Spooner","end":{"value":["mowed rap","road map"]}}],"solution":{"value":"road map"},"source":{"value":"Kegler"}},{"id":"105","clue":{"value":"Sticky stuff found around a U.S. territory"},"release":"1/28/2025","difficulty":"2","ready":"TRUE","type":"container","definition":["U.S. territory"],"hints":[{"category":"synonym","value":"Sticky stuff","end":{"value":["gum"]}},{"category":"direct","value":"a"},{"category":"container","value":"around","end":{"value":["gu","a","m"]}}],"solution":{"value":"guam"},"source":{"value":"Kegler"}},{"id":"104","clue":{"value":"Poisonous snakes beheading stinging insects"},"release":"1/27/2025","difficulty":"2","ready":"TRUE","type":"deletion","definition":["Poisonous snakes"],"hints":[{"category":"synonym","value":"stinging insects","end":{"value":["wasps"]}},{"category":"deletion","value":"beheading","end":{"value":["wasps","asps"]}}],"solution":{"value":"asps"},"source":{"value":"Kegler"}},{"id":"301","clue":{"value":"A sailor and a couple of reserves recalled mistakes"},"release":"1/26/2025","difficulty":"3","ready":"TRUE","type":"charade, reversal","definition":["mistakes"],"hints":[{"category":"direct","value":"A"},{"category":"synonym","value":"sailor","end":{"value":["tar"]}},{"category":"particle","value":"couple of reserves","end":{"value":["re"]}},{"category":"reversal","value":"recalled","end":{"value":["Atarre","erratA"]}}],"solution":{"value":"errata"},"source":{"value":"Kegler"}},{"id":"84","clue":{"value":"Pal Rob freaks out"},"release":"1/25/2025","difficulty":"2","ready":"TRUE","type":"anagram","definition":["Pal"],"hints":[{"category":"anagram","value":"freaks out","end":{"value":["Rob","bRo"]}}],"solution":{"value":"bro"},"source":{"value":"Kegler"}},{"id":"279","clue":{"value":"Mrs. Adams is a great liar for the most part, upon reflection"},"release":"1/24/2025","difficulty":"3","ready":"TRUE","type":"charade, deletion, reversal","definition":["Mrs. Adams"],"hints":[{"category":"direct","value":"a"},{"category":"synonym","value":"great","end":{"value":["big"]}},{"category":"particle","value":"liar for the most part","end":{"value":["lia"]}},{"category":"reversal","value":"upon reflection","end":{"value":["lia","ail"]}}],"solution":{"value":"Abigail"},"source":{"value":"Kegler"}},{"id":"73","clue":{"value":"Coffee servers initially upset nurses"},"release":"1/23/2025","difficulty":"2","ready":"TRUE","type":"charade","definition":["Coffee servers"],"hints":[{"category":"particle","value":"initially upset","end":{"value":["u"]}},{"category":"synonym","value":"nurses","end":{"value":["rns"]}}],"solution":{"value":"urns"},"source":{"value":"Kegler"}},{"id":"107","clue":{"value":"Rob us over and over, auto-cannibalizing serpent"},"release":"1/22/2025","difficulty":"4","ready":"TRUE","type":"letter bank","definition":["auto-cannibalizing serpent"],"hints":[{"category":"letter bank","value":"over and over","end":{"value":["Rob us","ouroboros"]}}],"solution":{"value":"ouroboros"},"source":{"value":"plunk it"}},{"id":"68","clue":{"value":"Stories of general breaking alphanumeric display components"},"release":"1/21/2025","difficulty":"2","ready":"TRUE","type":"container","definition":["Stories"],"hints":[{"category":"symbol","value":"general","end":{"value":["gen"]}},{"category":"synonym","value":"alphanumeric display components","end":{"value":["LEDs"]}},{"category":"container","value":"breaking","end":{"value":["LE","gen","Ds"]}}],"solution":{"value":"legends"},"source":{"value":"Kegler"}},{"id":"164","clue":{"value":"Marsh full of grass hides male ex-slaves"},"release":"1/20/2025","difficulty":"3","ready":"TRUE","type":"charade, container","definition":["ex-slaves"],"hints":[{"category":"synonym","value":"Marsh","end":{"value":["fen"]}},{"category":"synonym","value":"grass","end":{"value":["reed"]}},{"category":"symbol","value":"male","end":{"value":["M"]}},{"category":"container","value":"full of","end":{"value":["f","reed","M","en"]}}],"solution":{"value":"freedmen"},"source":{"value":"Kegler"}},{"id":"42","clue":{"value":"African country engaged in \\"beginning of life\\" ceremony"},"release":"1/19/2025","difficulty":"3","ready":"TRUE","type":"container","definition":["ceremony"],"hints":[{"category":"synonym","value":"African country","end":{"value":["Mali"]}},{"category":"synonym","value":"\\"beginning of life\\"","end":{"value":["forty"]}},{"category":"container","value":"engaged in","end":{"value":["for","Mali","ty"]}}],"solution":{"value":"formality"},"source":{"value":"Fraz"}},{"id":"12","clue":{"value":"No, fear not traveling between morning and night"},"release":"1/18/2025","difficulty":"2","ready":"TRUE","type":"anagram","definition":["between morning and night"],"hints":[{"category":"anagram","value":"traveling","end":{"value":["No, fear not","afterNoon"]}}],"solution":{"value":"afternoon"},"source":{"value":"Kegler"}},{"id":"21","clue":{"value":"Financial failure is not entirely peaceful"},"release":"1/17/2025","difficulty":"3","ready":"TRUE","type":"charade, deletion","definition":["Financial"],"hints":[{"category":"symbol","value":"failure","end":{"value":["F"]}},{"category":"direct","value":"is"},{"category":"synonym","value":"peaceful","end":{"value":["calm"]}},{"category":"deletion","value":"not entirely","end":{"value":["calm","cal"]},"explainer":"Here, \\"not entirely\\" entails cutting out the last letter"}],"solution":{"value":"fiscal"},"source":{"value":"Fraz"}},{"id":"23","clue":{"value":"Runner Hugo\'s content with it in late afternoon"},"release":"1/16/2025","difficulty":"3","ready":"TRUE","type":"container","definition":["Runner"],"hints":[{"category":"particle","value":"Hugo\'s content","end":{"value":["ug"]},"explainer":"Here, the \\"content\\" of Hugo is the middle two letters, UG, contained by H and O"},{"category":"direct","value":"it"},{"category":"synonym","value":"late afternoon","end":{"value":["five"]}},{"category":"container","value":"in","end":{"value":["f","ug","it","ive"]}}],"solution":{"value":"fugitive"},"source":{"value":"Fraz"}},{"id":"31","clue":{"value":"Least outgoing member of pushy establishment"},"release":"1/15/2025","difficulty":"2","ready":"TRUE","type":"hidden word","definition":["Least outgoing"],"hints":[{"category":"hidden word","value":"member of","end":{"value":["pushy establishment","shyest"]}}],"solution":{"value":"shyest"},"source":{"value":"Fraz"}},{"id":"162","clue":{"value":"Sleep at noon (twelve)"},"release":"1/14/2025","difficulty":"2","ready":"TRUE","type":"charade","definition":["twelve"],"hints":[{"category":"synonym","value":"Sleep","end":{"value":["doze"]}},{"category":"symbol","value":"noon","end":{"value":["n"]}}],"solution":{"value":"dozen"},"source":{"value":"Kegler"}},{"id":"49","clue":{"value":"Legacy carrier is never mentioned, ignoring the speed of light"},"release":"1/13/2025","difficulty":"3","ready":"TRUE","type":"deletion","definition":["Legacy carrier"],"hints":[{"category":"synonym","value":"is never mentioned","end":{"value":["uncited"]}},{"category":"deletion","value":"ignoring the speed of light","end":{"value":["united","un","ited"]}}],"solution":{"value":"united"},"source":{"value":"Midas"}},{"id":"50","clue":{"value":"Repeatedly slam nicer way to get to London or Tokyo?"},"release":"1/12/2025","difficulty":"3","ready":"TRUE","type":"letter bank","definition":["way to get to London or Tokyo?"],"hints":[{"category":"letter bank","value":"Repeatedly","end":{"value":["slam nicer","American Airlines"]}}],"solution":{"value":"american airlines"},"source":{"value":"Midas"}},{"id":"111","clue":{"value":"Drink is permitted within borders of Chile"},"release":"1/11/2025","difficulty":"1","ready":"TRUE","type":"container","definition":["Drink"],"hints":[{"category":"synonym","value":"permitted","end":{"value":["OK"]}},{"category":"particle","value":"borders of Chile","end":{"value":["Ce"]}},{"category":"container","value":"within","end":{"value":["C","OK","e"]}}],"solution":{"value":"coke"},"source":{"value":"Kegler"}},{"id":"56","clue":{"value":"In Boston, commuting T trains as a way to get around!"},"release":"1/10/2025","difficulty":"2","ready":"TRUE","type":"anagram, & Lit.","definition":["In Boston, commuting T trains as a way to get around!"],"hints":[{"category":"anagram","value":"commuting","end":{"value":["T trains","Transit"]}}],"solution":{"value":"transit"},"source":{"value":"Midas"}},{"id":"57","clue":{"value":"Anti-tech DD and I are really into lute"},"release":"1/9/2025","difficulty":"3","ready":"TRUE","type":"container","definition":["Anti-tech"],"hints":[{"category":"direct","value":"DD"},{"category":"direct","value":"I"},{"category":"direct","value":"lute"},{"category":"container","value":"are really into","end":{"value":["lu","DD","I","te"]}}],"solution":{"value":"luddite"},"source":{"value":"plunk it"}},{"id":"60","clue":{"value":"Pop star to hum quietly while slowly passing gas, we hear"},"release":"1/8/2025","difficulty":"2","ready":"TRUE","type":"homophone","definition":["Pop star"],"hints":[{"category":"synonym","value":"hum quietly while slowly passing gas","end":{"value":["idle"]}},{"category":"homophone","value":"we hear","end":{"value":["idle","idol"]}}],"solution":{"value":"idol"},"source":{"value":"plunk it"}},{"id":"6","clue":{"value":"Uranium buried in a neat courtyard"},"release":"1/7/2025","difficulty":"3","ready":"TRUE","type":"container","definition":["courtyard"],"hints":[{"category":"symbol","value":"Uranium","end":{"value":["U"]}},{"category":"direct","value":"a"},{"category":"synonym","value":"neat","end":{"value":["trim"]}},{"category":"container","value":"buried","end":{"value":["a","tri","U","m"]}}],"solution":{"value":"atrium"},"source":{"value":"Hex"}},{"id":"9","clue":{"value":"Wears out swings, sometimes"},"release":"1/6/2025","difficulty":"1","ready":"TRUE","type":"double definition","definition":["Wears out","swings, sometimes"],"solution":{"value":"tires"},"source":{"value":"Kegler"}},{"id":"40","clue":{"value":"Severely criticized turning at end of tricky childbirth"},"release":"1/5/2025","difficulty":"3","ready":"TRUE","type":"reversal","definition":["childbirth"],"hints":[{"category":"synonym","value":"Severely criticized","end":{"value":["reviled"]}},{"category":"reversal","value":"turning","end":{"value":["reviled","deliver"]}},{"category":"particle","value":"end of tricky","end":{"value":["y"]}}],"solution":{"value":"delivery"},"source":{"value":"Fraz"}},{"id":"18","clue":{"value":"Held by clasp, a designer suit"},"release":"1/4/2025","difficulty":"2","ready":"TRUE","type":"hidden word","definition":["suit"],"hints":[{"category":"hidden word","value":"Held by","end":{"value":["clasp, a designer","spades"]}}],"solution":{"value":"spades"},"source":{"value":"Fraz"}},{"id":"24","clue":{"value":"E.g., breakfast grain ground up"},"release":"1/3/2025","difficulty":"1","ready":"TRUE","type":"double definition","definition":["E.g., breakfast","grain ground up"],"solution":{"value":"meal"},"source":{"value":"Fraz"}},{"id":"28","clue":{"value":"Swiss cabin fit inside court"},"release":"1/2/2025","difficulty":"3","ready":"TRUE","type":"container","definition":["Swiss cabin"],"hints":[{"category":"synonym","value":"fit","end":{"value":["hale"]}},{"category":"symbol","value":"court","end":{"value":["ct"]}},{"category":"container","value":"inside","end":{"value":["c","hale","t"]}}],"solution":{"value":"chalet"},"source":{"value":"Fraz"}},{"id":"17","clue":{"value":"Eyeglasses initially broken by liberal in terrible fiasco"},"release":"1/1/2025","difficulty":"3","ready":"TRUE","type":"anagram, charade, container","definition":["Eyeglasses"],"hints":[{"category":"particle","value":"initially broken","end":{"value":["b"]}},{"category":"symbol","value":"liberal","end":{"value":["L"]}},{"category":"anagram","value":"terrible","end":{"value":["fiasco","ifocas"]}},{"category":"container","value":"in","end":{"value":["b","ifoca","l","s"]}}],"solution":{"value":"bifocals"},"source":{"value":"Fraz"}},{"id":"53","clue":{"value":"Computer industry dude, after transitioning, declared Dallas home"},"release":"12/31/2024","difficulty":"2","ready":"TRUE","type":"homophone","definition":["Dallas home"],"hints":[{"category":"synonym","value":"Computer industry","end":{"value":["tech"]}},{"category":"synonym","value":"dude, after transitioning","end":{"value":["sis"]}},{"category":"homophone","value":"declared","end":{"value":["tech sis","texas"]}}],"solution":{"value":"texas"},"source":{"value":"Midas"}},{"id":"2","clue":{"value":"Espresso drink held by hospital attendant"},"release":"12/30/2024","difficulty":"1","ready":"TRUE","type":"hidden word","definition":["Espresso drink"],"hints":[{"category":"hidden word","value":"held by","end":{"value":["hospital attendant","latte"]}}],"solution":{"value":"latte"},"source":{"value":"Fraz"}},{"id":"5","clue":{"value":"Hear Leo\'s wonky audio receiver"},"release":"12/29/2024","difficulty":"2","ready":"TRUE","type":"anagram","definition":["audio receiver"],"hints":[{"category":"anagram","value":"wonky","end":{"value":["Hear Leo","earHoLe"]}}],"solution":{"value":"earhole"},"source":{"value":"Ucaoimhu"}},{"id":"11","clue":{"value":"Wearing fewer clothes around Rhode Island is an impediment"},"release":"12/28/2024","difficulty":"3","ready":"TRUE","type":"container","definition":["impediment"],"hints":[{"category":"synonym","value":"Wearing fewer clothes","end":{"value":["barer"]}},{"category":"symbol","value":"Rhode Island","end":{"value":["RI"]}},{"category":"container","value":"around","end":{"value":["bar","RI","er"]}}],"solution":{"value":"barrier"},"source":{"value":"Kegler"}},{"id":"38","clue":{"value":"Male dogs check laundry soap"},"release":"12/27/2024","difficulty":"3","ready":"TRUE","type":"charade","definition":["laundry soap"],"hints":[{"category":"synonym","value":"Male","end":{"value":["gent"]}},{"category":"synonym","value":"dogs","end":{"value":["goes after"]}},{"category":"synonym","value":"check","end":{"value":["deter"]}}],"solution":{"value":"detergent"},"source":{"value":"Fraz"}},{"id":"47","clue":{"value":"Large, empty apartment took off"},"release":"12/26/2024","difficulty":"2","ready":"TRUE","type":"charade","definition":["took off"],"hints":[{"category":"symbol","value":"Large","end":{"value":["L"]}},{"category":"symbol","value":"empty","end":{"value":["E"]}},{"category":"symbol","value":"apartment","end":{"value":["apt"]}}],"solution":{"value":"leapt"},"source":{"value":"Fraz"}},{"id":"52","clue":{"value":"Buried in Tucson or another arid region"},"release":"12/25/2024","difficulty":"1","ready":"TRUE","type":"hidden word","definition":["arid region"],"hints":[{"category":"hidden word","value":"Buried in","end":{"value":["Tucson or another","sonoran"]}}],"solution":{"value":"sonoran"},"source":{"value":"Midas"}},{"id":"97","clue":{"value":"Towels off baby birds"},"release":"12/24/2024","difficulty":"2","ready":"TRUE","type":"anagram","definition":["baby birds"],"hints":[{"category":"anagram","value":"off","end":{"value":["Towels","owleTs"]}}],"solution":{"value":"owlets"},"source":{"value":"Kegler"}},{"id":"232","clue":{"value":"Contort a sphere!"},"release":"12/23/2024","difficulty":"2","ready":"TRUE","type":"anagram, & Lit.","definition":["Contort a sphere!"],"hints":[{"category":"anagram","value":"Contort","end":{"value":["a sphere","reshape"]}}],"solution":{"value":"reshape"},"source":{"value":"Kegler"}},{"id":"306","clue":{"value":"Cries about large unkempt people"},"release":"12/22/2024","difficulty":"2","ready":"TRUE","type":"container","definition":["unkempt people"],"hints":[{"category":"synonym","value":"Cries","end":{"value":["sobs"]}},{"category":"symbol","value":"large","end":{"value":["L"]}},{"category":"container","value":"about","end":{"value":["s","l","obs"]}}],"solution":{"value":"slobs"},"source":{"value":"Kegler"}},{"id":"101","clue":{"value":"Closes up aquatic mammals"},"release":"12/21/2024","difficulty":"2","ready":"TRUE","type":"double definition","definition":["Closes up","aquatic animals"],"solution":{"value":"seals"},"source":{"value":"Kegler"}},{"id":"188","clue":{"value":"You mentioned sheep"},"release":"12/20/2024","difficulty":"1","ready":"TRUE","type":"homophone","definition":["sheep"],"hints":[{"category":"direct","value":"You"},{"category":"homophone","value":"mentioned","end":{"value":["you","ewe"]}}],"solution":{"value":"ewe"},"source":{"value":"Kegler"}},{"id":"324","clue":{"value":"Starts to teach baker shoofly pie recipe measurement"},"release":"12/19/2024","difficulty":"1","ready":"TRUE","type":"initialism","definition":["recipe measurement"],"hints":[{"category":"initialism","value":"Starts to","end":{"value":["teach baker shoofly pie","tbsp"]}}],"solution":{"value":"tbsp"},"source":{"value":"Kegler"}}]');function $t(e){return $t="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},$t(e)}function Mt(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function Ot(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?Mt(Object(n),!0).forEach((function(t){jt(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):Mt(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function jt(e,t,n){return(t=function(e){var t=function(e){if("object"!=$t(e)||!e)return e;var t=e[Symbol.toPrimitive];if(void 0!==t){var n=t.call(e,"string");if("object"!=$t(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==$t(t)?t:t+""}(t))in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function Gt(e){return Gt="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},Gt(e)}function Ht(e){return function(e){if(Array.isArray(e))return qt(e)}(e)||function(e){if("undefined"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}(e)||Vt(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function Wt(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function Kt(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?Wt(Object(n),!0).forEach((function(t){Qt(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):Wt(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function Qt(e,t,n){return(t=function(e){var t=function(e){if("object"!=Gt(e)||!e)return e;var t=e[Symbol.toPrimitive];if(void 0!==t){var n=t.call(e,"string");if("object"!=Gt(n))return n;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"==Gt(t)?t:t+""}(t))in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function Yt(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=n){var r,a,l,i,o=[],s=!0,c=!1;try{if(l=(n=n.call(e)).next,0===t){if(Object(n)!==n)return;s=!1}else for(;!(s=(r=l.call(n)).done)&&(o.push(r.value),o.length!==t);s=!0);}catch(e){c=!0,a=e}finally{try{if(!s&&null!=n.return&&(i=n.return(),Object(i)!==i))return}finally{if(c)throw a}}return o}}(e,t)||Vt(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function Vt(e,t){if(e){if("string"==typeof e)return qt(e,t);var n={}.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?qt(e,t):void 0}}function qt(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=Array(t);n<t;n++)r[n]=e[n];return r}const Xt=function(){window.dataLayer=window.dataLayer||[];var t=Yt((0,e.useState)(),2),n=t[0],r=t[1],a=Yt((0,e.useState)("title"),2),l=a[0],i=a[1],o=Yt((0,e.useState)({guesses:0,hints:0,how:""}),2),s=o[0],c=o[1],u=Yt((0,e.useState)(!1),2),m=u[0],d=u[1],p=Yt((0,e.useState)((function(){var e=localStorage.getItem("lcState");return e?JSON.parse(e):{completedClues:[],showType:!0,typeViewed:[]}})),2),f=p[0],A=p[1],g=f.completedClues,h=f.showType,y=f.typeViewed;(0,e.useEffect)((function(){localStorage.setItem("lcState",JSON.stringify(f))}),[f]);var v=!!n&&structuredClone(_t.find((function(e){return e.id==n})));return v&&function(e){var t=function(e){return e.value.split(" ").map((function(e){return e.length}))};switch(e.solution.length={value:"(".concat(t(e.solution).join(", "),")"),arr:t(e.solution)},e.clue.arr=e.clue.value.split(""),e.solution.arr=e.solution.value.split(""),e.solution.arr=e.solution.arr.filter((function(e){return" "!==e})),e.type=e.type.split(", "),e.source.value){case"Fraz":e.source.href="https://www.theglobeandmail.com/puzzles-and-crosswords/article-how-to-solve-the-cryptic-crossword-fraser-simson/";break;case"Midas":e.source.href="https://www.marcmaximov.net/about";break;case"plunk it":e.source.href="https://ohkayblanket.com";break;case"Kegler":e.source.href="https://kegler.gitlab.io/Block_style/November_2009.pdf";break;case"Ucaoimhu":e.source.href="https://www.ucaoimhu.com";break;case"Hex":e.source.href="https://coxrathvon.com/puzzles/xoOx3KL17IT3eFSBoGPA";break;default:e.source.href=!1}e.hints?(e.hints.map((function(e){return e.type="indicator"})),e.hints=e.hints.flatMap((function(e){return"anagram"===e.category?[Ot(Ot({},e),{},{explainer:""}),Ot(Ot({},e),{},{category:"ag-2"})]:"hidden word"===e.category?[Ot(Ot({},e),{},{explainer:""}),Ot(Ot({},e),{},{category:"hw-2"})]:"homophone"===e.category?[Ot(Ot({},e),{},{explainer:""}),Ot(Ot({},e),{},{category:"hp-2"})]:"initialism"===e.category?[Ot(Ot({},e),{},{explainer:""}),Ot(Ot({},e),{},{category:"in-2"})]:"letter bank"===e.category?[Ot(Ot({},e),{},{explainer:""}),Ot(Ot({},e),{},{category:"lb-2"})]:[e]}))):e.hints=[],e.type.includes("double definition")?e.hints.unshift({type:"definition",value:e.definition},{type:"indicator",category:"dd-2",explainer:!1,value:e.definition,reveals:!0,end:{value:e.definition}}):(e.hints.unshift({type:"definition",value:e.definition}),e.hints[e.hints.length-1].reveals=!0)}(v),(0,e.useEffect)((function(){v&&console.log(v)}),[n]),{clues:_t,activeClue:v,setclueId:r,completedClues:g,addCompletedClue:function(e,t,n){var r="g"==n?t.guesses+1:t.guesses,a="h"==n?t.hints+1:t.hints,l=g.find((function(t){return t.id==e.id})),i=g&&g.length>0;l?console.log("clue locked, no update to stats"):A(Kt(Kt({},f),{},{completedClues:[].concat(Ht(f.completedClues),[{id:e.id,guesses:r,hints:a,how:n}])})),function(){dataLayer.push(arguments)}("event","completed_clue",{id:e.id,hints:a,guesses:r,how:n,total_completed:i&&g.length+1,repeat:!!l,known_user:i,avg_guesses:(g.reduce((function(e,t){return e+t.guesses}),0)/g.length).toFixed(0),avg_hints:(g.reduce((function(e,t){return e+t.hints}),0)/g.length).toFixed(0)})},mode:l,setMode:i,showType:h,setShowType:function(e){A(Kt(Kt({},f),{},{showType:e}))},stats:s,setStats:c,typeViewed:y,setTypeViewed:function(e){A(Kt(Kt({},f),{},{typeViewed:[].concat(Ht(f.typeViewed),[e])}))},returnLearn:m,setReturnLearn:d}};function Jt(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=n){var r,a,l,i,o=[],s=!0,c=!1;try{if(l=(n=n.call(e)).next,0===t){if(Object(n)!==n)return;s=!1}else for(;!(s=(r=l.call(n)).done)&&(o.push(r.value),o.length!==t);s=!0);}catch(e){c=!0,a=e}finally{try{if(!s&&null!=n.return&&(i=n.return(),Object(i)!==i))return}finally{if(c)throw a}}return o}}(e,t)||function(e,t){if(e){if("string"==typeof e)return Zt(e,t);var n={}.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?Zt(e,t):void 0}}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function Zt(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=Array(t);n<t;n++)r[n]=e[n];return r}function en(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=n){var r,a,l,i,o=[],s=!0,c=!1;try{if(l=(n=n.call(e)).next,0===t){if(Object(n)!==n)return;s=!1}else for(;!(s=(r=l.call(n)).done)&&(o.push(r.value),o.length!==t);s=!0);}catch(e){c=!0,a=e}finally{try{if(!s&&null!=n.return&&(i=n.return(),Object(i)!==i))return}finally{if(c)throw a}}return o}}(e,t)||tn(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function tn(e,t){if(e){if("string"==typeof e)return nn(e,t);var n={}.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?nn(e,t):void 0}}function nn(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=Array(t);n<t;n++)r[n]=e[n];return r}const rn=function(t){var n=en((0,e.useState)([]),2),r=n[0],a=n[1],l=en((0,e.useState)(!1),2),i=l[0],o=l[1];return{input:r,setInput:a,handleInput:function(e){a((function(n){return"del"!==e&&n.length<t.solution.arr.length?[].concat(function(e){if(Array.isArray(e))return nn(e)}(r=n)||function(e){if("undefined"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}(r)||tn(r)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}(),[e]):"del"===e?n.slice(0,-1):n;var r}))},checkAns:i,setCheckAns:o}},an=function(){var t=Xt(),n=t.clues,r=t.activeClue,a=t.setclueId,l=t.completedClues,i=t.addCompletedClue,o=(t.mode,t.setMode),s=t.showType,c=t.setShowType,u=t.stats,m=t.setStats,d=t.typeViewed,p=t.setTypeViewed,f=t.returnLearn,A=t.setReturnLearn,g=function(){var t=Jt((0,e.useState)(0),2),n=t[0],r=t[1],a=Jt((0,e.useState)(!1),2);return{nextHint:n,setNextHint:r,showMessage:a[0],setShowMessage:a[1]}}(),h=g.nextHint,y=g.setNextHint,v=g.showMessage,E=g.setShowMessage,C=rn(r),b=C.input,x=C.setInput,w=C.handleInput,k=C.checkAns,B=C.setCheckAns;return e.createElement(Le,null,e.createElement(ce,null,e.createElement(oe,{path:"/",element:e.createElement(Me,{clues:n,setMode:o,setclueId:a,completedClues:l})}),e.createElement(oe,{path:"learn",element:e.createElement(je,{setMode:o,setShowMessage:E,setNextHint:y,setclueId:a,setInput:x,setReturnLearn:A,setStats:m})},e.createElement(oe,{index:!0,element:e.createElement(Qe,{clues:n,setMode:o,setclueId:a,setInput:x,setCheckAns:B,typeViewed:d,setTypeViewed:p,setReturnLearn:A})}),e.createElement(oe,{path:"anagram",element:e.createElement(ht,{setclueId:a,setInput:x,setCheckAns:B,setMode:o,setReturnLearn:A})}),e.createElement(oe,{path:"charade",element:e.createElement(yt,{setclueId:a,setInput:x,setCheckAns:B,setMode:o,setReturnLearn:A})}),e.createElement(oe,{path:"container",element:e.createElement(vt,{setclueId:a,setInput:x,setCheckAns:B,setMode:o,setReturnLearn:A})}),e.createElement(oe,{path:"deletion",element:e.createElement(Et,{setclueId:a,setInput:x,setCheckAns:B,setMode:o,setReturnLearn:A})}),e.createElement(oe,{path:"double-definition",element:e.createElement(Ct,{setclueId:a,setInput:x,setCheckAns:B,setMode:o,setReturnLearn:A})}),e.createElement(oe,{path:"hidden-word",element:e.createElement(bt,{setclueId:a,setInput:x,setCheckAns:B,setMode:o,setReturnLearn:A})}),e.createElement(oe,{path:"homophone",element:e.createElement(xt,{setclueId:a,setInput:x,setCheckAns:B,setMode:o,setReturnLearn:A})}),e.createElement(oe,{path:"initialism",element:e.createElement(wt,{setclueId:a,setInput:x,setCheckAns:B,setMode:o,setReturnLearn:A})}),e.createElement(oe,{path:"letter-bank",element:e.createElement(kt,{setclueId:a,setInput:x,setCheckAns:B,setMode:o,setReturnLearn:A})}),e.createElement(oe,{path:"reversal",element:e.createElement(Bt,{setclueId:a,setInput:x,setCheckAns:B,setMode:o,setReturnLearn:A})}),e.createElement(oe,{path:"spoonerism",element:e.createElement(Nt,{setclueId:a,setInput:x,setCheckAns:B,setMode:o,setReturnLearn:A})}),e.createElement(oe,{path:"lit",element:e.createElement(St,{setclueId:a,setInput:x,setCheckAns:B,setMode:o,setReturnLearn:A})}),e.createElement(oe,{path:"combination",element:e.createElement(Ft,{setclueId:a,setInput:x,setCheckAns:B,setMode:o,setReturnLearn:A})})),e.createElement(oe,{path:"clues",element:e.createElement(je,{setMode:o,setShowMessage:E,setNextHint:y,setclueId:a,setInput:x,setReturnLearn:A,setStats:m})},e.createElement(oe,{index:!0,element:e.createElement(Je,{clues:n,setclueId:a,setMode:o,completedClues:l,setInput:x,setCheckAns:B,stats:u})}),e.createElement(oe,{path:"clue",element:e.createElement(e.Fragment,null,e.createElement(gt,{clues:n,activeClue:r,nextHint:h,showMessage:v,input:b,checkAns:k,showType:s,setShowType:c,stats:u}),e.createElement(Ut,{showMessage:v,setShowMessage:E,nextHint:h,setNextHint:y,activeClue:r,setclueId:a,setMode:o,addCompletedClue:i,handleInput:w,input:b,setInput:x,checkAns:k,setCheckAns:B,stats:u,setStats:m,returnLearn:f,setReturnLearn:A}))}))))};n(769),t.createRoot(document.getElementById("root")).render(e.createElement(an,null))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,