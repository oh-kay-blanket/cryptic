{"version":3,"file":"component---src-pages-learn-lit-js-9f0e1517ecd775119eee.js","mappings":"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","sources":["webpack://learn-cryptic/./src/components/bottom/Button.js","webpack://learn-cryptic/./src/components/bottom/ButtonContainer.js","webpack://learn-cryptic/./src/pages/learn/Lit.js","webpack://learn-cryptic/./node_modules/react-router/node_modules/cookie/dist/index.js"],"sourcesContent":["import React from \"react\";\nimport { Link } from \"gatsby\"\n\nconst Button = ({ btnInfo }) => {\n\n\tconst { path = false, name, style, onClick } = btnInfo\n\n\treturn(<>\n\t\t{path ? \n\t\t\t<Link to={path}>\n\t\t\t\t<button id={name.toLowerCase()} className={`show-btn ${style}`} type='button' onClick={onClick}>{name}</button>\n\t\t\t</Link> : \n\t\t\t<button id={name.toLowerCase()} className={`show-btn ${style}`} type='button' onClick={onClick}>{name}</button>\n\t\t}\n\t</>)\n}\n\nexport default Button","import React from 'react';\nimport Button from './Button'\n\nconst ButtonContainer = ({ btnArr, isSolution, stack = false }) => {\n\n\tconst buttons = btnArr.map((btnInfo, index) => <Button key={index} btnInfo={btnInfo} />)\n\n\treturn (\n\t\t<div className={`button-container${stack ? ' stack' : ''}${isSolution ? ' solution' : ''}`}>\n\t\t\t{buttons}\n\t\t</div>\n\t)\n}\n\nexport default ButtonContainer","import React from 'react'\nimport { Link } from \"react-router-dom\";\n\nimport ButtonContainer from '../../components/bottom/ButtonContainer'\n\nconst Lit = ({ setReturnLearn }) => {\n\n\tconst backButton = <Link to=\"/learn\"><svg className='back-button' xmlns=\"http://www.w3.org/2000/svg\" width='25px' height='25px' viewBox=\"0 0 448 512\"><path d=\"M9.4 233.4c-12.5 12.5-12.5 32.8 0 45.3l160 160c12.5 12.5 32.8 12.5 45.3 0s12.5-32.8 0-45.3L109.2 288 416 288c17.7 0 32-14.3 32-32s-14.3-32-32-32l-306.7 0L214.6 118.6c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0l-160 160z\"/></svg></Link>\n\n\t// buttons\n\tconst buttons = {\n\t\teasyClue: {\n\t\t\tpath: '/clues/232',\n\t\t\tname: \"Play an & Lit. clue\",\n\t\t\tstyle: 'primary',\n\t\t\tonClick: function() {\n\t\t\t\tsetReturnLearn('lit')\n\t\t\t}\n\t\t},\n\t\treturn: {\n\t\t\tpath: '/learn',\n\t\t\tname: \"Return\",\n\t\t\tstyle: 'secondary',\n\t\t}\n\t}\n\tconst btnArr = [buttons.return, buttons.easyClue]\n\t\n\treturn(\n\t\t<div className='learn container'>\n\t\t\t{backButton}\n\n\t\t\t<div className='learn-section'>\n\t\t\t\t<h1>& Lit.</h1>\n\t\t\t\t<p>In an & Lit. clue, the entire clue functions as a definition.</p>\n\t\t\t</div>\n\n\t\t\t<div className='learn-section'>\n\t\t\t\t<h2>Indicators</h2>\n\t\t\t\t<p>& Lit. clues are indicated by the presence of an exclamation mark (!) at the end of the clue. They typically also contain another form of wordplay, such as an anagram or deletion.</p>\n\t\t\t</div>\n\n\t\t\t<div className='learn-section'>\n\t\t\t\t<h2>Examples</h2>\n\t\t\t\t<div className='example-container'>\n\t\t\t\t\t<p className='example'>I only appear manipulated! (6, 5)</p>\n\t\t\t\t\t<div className='explanation'>\n\t\t\t\t\t\t<ul className='mt-0'>\n\t\t\t\t\t\t\t<li>The definition is <strong>I only appear manipulated</strong></li>\n\t\t\t\t\t\t\t<li><strong>manipulated</strong> indicates an anagram</li>\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t<p className='text-center'><strong>I only appear</strong> â†’ <strong>player piano</strong></p>\n\t\t\t\t\t\t<div className='solution'>\n\t\t\t\t\t\t\t<span className='letter'>p</span>\n\t\t\t\t\t\t\t<span className='letter'>l</span>\n\t\t\t\t\t\t\t<span className='letter'>a</span>\n\t\t\t\t\t\t\t<span className='letter'>y</span>\n\t\t\t\t\t\t\t<span className='letter'>e</span>\n\t\t\t\t\t\t\t<span className='letter'>r</span>\n\t\t\t\t\t\t\t<span className='letter'>p</span>\n\t\t\t\t\t\t\t<span className='letter'>i</span>\n\t\t\t\t\t\t\t<span className='letter'>a</span>\n\t\t\t\t\t\t\t<span className='letter'>n</span>\n\t\t\t\t\t\t\t<span className='letter'>o</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t<div className='example-container'>\n\t\t\t\t\t<p className='example'>Starting with a core of knowledge, gain deeper understanding! (5)</p>\n\t\t\t\t\t<div className='explanation'>\n\t\t\t\t\t\t<ul className='mt-0'>\n\t\t\t\t\t\t\t<li>The definition is <strong>Starting with a core of knowledge, gain deeper understanding</strong></li>\n\t\t\t\t\t\t\t<li><strong>core of knowledge</strong> can be <strong>l</strong></li>\n\t\t\t\t\t\t\t<li><strong>gain</strong> can be <strong>earn</strong></li>\n\t\t\t\t\t\t</ul>\n\t\t\t\t\t\t<p className='text-center'><strong>l</strong> + <strong>earn</strong> = <strong>learn</strong></p>\n\t\t\t\t\t\t<div className='solution'>\n\t\t\t\t\t\t\t<span className='letter'>l</span>\n\t\t\t\t\t\t\t<span className='letter'>e</span>\n\t\t\t\t\t\t\t<span className='letter'>a</span>\n\t\t\t\t\t\t\t<span className='letter'>r</span>\n\t\t\t\t\t\t\t<span className='letter'>n</span>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t<div className='learn-section'>\n\t\t\t\t<ButtonContainer\n\t\t\t\t\tbtnArr={btnArr}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default Lit;","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.parse = parse;\nexports.serialize = serialize;\n/**\n * RegExp to match cookie-name in RFC 6265 sec 4.1.1\n * This refers out to the obsoleted definition of token in RFC 2616 sec 2.2\n * which has been replaced by the token definition in RFC 7230 appendix B.\n *\n * cookie-name       = token\n * token             = 1*tchar\n * tchar             = \"!\" / \"#\" / \"$\" / \"%\" / \"&\" / \"'\" /\n *                     \"*\" / \"+\" / \"-\" / \".\" / \"^\" / \"_\" /\n *                     \"`\" / \"|\" / \"~\" / DIGIT / ALPHA\n *\n * Note: Allowing more characters - https://github.com/jshttp/cookie/issues/191\n * Allow same range as cookie value, except `=`, which delimits end of name.\n */\nconst cookieNameRegExp = /^[\\u0021-\\u003A\\u003C\\u003E-\\u007E]+$/;\n/**\n * RegExp to match cookie-value in RFC 6265 sec 4.1.1\n *\n * cookie-value      = *cookie-octet / ( DQUOTE *cookie-octet DQUOTE )\n * cookie-octet      = %x21 / %x23-2B / %x2D-3A / %x3C-5B / %x5D-7E\n *                     ; US-ASCII characters excluding CTLs,\n *                     ; whitespace DQUOTE, comma, semicolon,\n *                     ; and backslash\n *\n * Allowing more characters: https://github.com/jshttp/cookie/issues/191\n * Comma, backslash, and DQUOTE are not part of the parsing algorithm.\n */\nconst cookieValueRegExp = /^[\\u0021-\\u003A\\u003C-\\u007E]*$/;\n/**\n * RegExp to match domain-value in RFC 6265 sec 4.1.1\n *\n * domain-value      = <subdomain>\n *                     ; defined in [RFC1034], Section 3.5, as\n *                     ; enhanced by [RFC1123], Section 2.1\n * <subdomain>       = <label> | <subdomain> \".\" <label>\n * <label>           = <let-dig> [ [ <ldh-str> ] <let-dig> ]\n *                     Labels must be 63 characters or less.\n *                     'let-dig' not 'letter' in the first char, per RFC1123\n * <ldh-str>         = <let-dig-hyp> | <let-dig-hyp> <ldh-str>\n * <let-dig-hyp>     = <let-dig> | \"-\"\n * <let-dig>         = <letter> | <digit>\n * <letter>          = any one of the 52 alphabetic characters A through Z in\n *                     upper case and a through z in lower case\n * <digit>           = any one of the ten digits 0 through 9\n *\n * Keep support for leading dot: https://github.com/jshttp/cookie/issues/173\n *\n * > (Note that a leading %x2E (\".\"), if present, is ignored even though that\n * character is not permitted, but a trailing %x2E (\".\"), if present, will\n * cause the user agent to ignore the attribute.)\n */\nconst domainValueRegExp = /^([.]?[a-z0-9]([a-z0-9-]{0,61}[a-z0-9])?)([.][a-z0-9]([a-z0-9-]{0,61}[a-z0-9])?)*$/i;\n/**\n * RegExp to match path-value in RFC 6265 sec 4.1.1\n *\n * path-value        = <any CHAR except CTLs or \";\">\n * CHAR              = %x01-7F\n *                     ; defined in RFC 5234 appendix B.1\n */\nconst pathValueRegExp = /^[\\u0020-\\u003A\\u003D-\\u007E]*$/;\nconst __toString = Object.prototype.toString;\nconst NullObject = /* @__PURE__ */ (() => {\n    const C = function () { };\n    C.prototype = Object.create(null);\n    return C;\n})();\n/**\n * Parse a cookie header.\n *\n * Parse the given cookie header string into an object\n * The object has the various cookies as keys(names) => values\n */\nfunction parse(str, options) {\n    const obj = new NullObject();\n    const len = str.length;\n    // RFC 6265 sec 4.1.1, RFC 2616 2.2 defines a cookie name consists of one char minimum, plus '='.\n    if (len < 2)\n        return obj;\n    const dec = options?.decode || decode;\n    let index = 0;\n    do {\n        const eqIdx = str.indexOf(\"=\", index);\n        if (eqIdx === -1)\n            break; // No more cookie pairs.\n        const colonIdx = str.indexOf(\";\", index);\n        const endIdx = colonIdx === -1 ? len : colonIdx;\n        if (eqIdx > endIdx) {\n            // backtrack on prior semicolon\n            index = str.lastIndexOf(\";\", eqIdx - 1) + 1;\n            continue;\n        }\n        const keyStartIdx = startIndex(str, index, eqIdx);\n        const keyEndIdx = endIndex(str, eqIdx, keyStartIdx);\n        const key = str.slice(keyStartIdx, keyEndIdx);\n        // only assign once\n        if (obj[key] === undefined) {\n            let valStartIdx = startIndex(str, eqIdx + 1, endIdx);\n            let valEndIdx = endIndex(str, endIdx, valStartIdx);\n            const value = dec(str.slice(valStartIdx, valEndIdx));\n            obj[key] = value;\n        }\n        index = endIdx + 1;\n    } while (index < len);\n    return obj;\n}\nfunction startIndex(str, index, max) {\n    do {\n        const code = str.charCodeAt(index);\n        if (code !== 0x20 /*   */ && code !== 0x09 /* \\t */)\n            return index;\n    } while (++index < max);\n    return max;\n}\nfunction endIndex(str, index, min) {\n    while (index > min) {\n        const code = str.charCodeAt(--index);\n        if (code !== 0x20 /*   */ && code !== 0x09 /* \\t */)\n            return index + 1;\n    }\n    return min;\n}\n/**\n * Serialize data into a cookie header.\n *\n * Serialize a name value pair into a cookie string suitable for\n * http headers. An optional options object specifies cookie parameters.\n *\n * serialize('foo', 'bar', { httpOnly: true })\n *   => \"foo=bar; httpOnly\"\n */\nfunction serialize(name, val, options) {\n    const enc = options?.encode || encodeURIComponent;\n    if (!cookieNameRegExp.test(name)) {\n        throw new TypeError(`argument name is invalid: ${name}`);\n    }\n    const value = enc(val);\n    if (!cookieValueRegExp.test(value)) {\n        throw new TypeError(`argument val is invalid: ${val}`);\n    }\n    let str = name + \"=\" + value;\n    if (!options)\n        return str;\n    if (options.maxAge !== undefined) {\n        if (!Number.isInteger(options.maxAge)) {\n            throw new TypeError(`option maxAge is invalid: ${options.maxAge}`);\n        }\n        str += \"; Max-Age=\" + options.maxAge;\n    }\n    if (options.domain) {\n        if (!domainValueRegExp.test(options.domain)) {\n            throw new TypeError(`option domain is invalid: ${options.domain}`);\n        }\n        str += \"; Domain=\" + options.domain;\n    }\n    if (options.path) {\n        if (!pathValueRegExp.test(options.path)) {\n            throw new TypeError(`option path is invalid: ${options.path}`);\n        }\n        str += \"; Path=\" + options.path;\n    }\n    if (options.expires) {\n        if (!isDate(options.expires) ||\n            !Number.isFinite(options.expires.valueOf())) {\n            throw new TypeError(`option expires is invalid: ${options.expires}`);\n        }\n        str += \"; Expires=\" + options.expires.toUTCString();\n    }\n    if (options.httpOnly) {\n        str += \"; HttpOnly\";\n    }\n    if (options.secure) {\n        str += \"; Secure\";\n    }\n    if (options.partitioned) {\n        str += \"; Partitioned\";\n    }\n    if (options.priority) {\n        const priority = typeof options.priority === \"string\"\n            ? options.priority.toLowerCase()\n            : undefined;\n        switch (priority) {\n            case \"low\":\n                str += \"; Priority=Low\";\n                break;\n            case \"medium\":\n                str += \"; Priority=Medium\";\n                break;\n            case \"high\":\n                str += \"; Priority=High\";\n                break;\n            default:\n                throw new TypeError(`option priority is invalid: ${options.priority}`);\n        }\n    }\n    if (options.sameSite) {\n        const sameSite = typeof options.sameSite === \"string\"\n            ? options.sameSite.toLowerCase()\n            : options.sameSite;\n        switch (sameSite) {\n            case true:\n            case \"strict\":\n                str += \"; SameSite=Strict\";\n                break;\n            case \"lax\":\n                str += \"; SameSite=Lax\";\n                break;\n            case \"none\":\n                str += \"; SameSite=None\";\n                break;\n            default:\n                throw new TypeError(`option sameSite is invalid: ${options.sameSite}`);\n        }\n    }\n    return str;\n}\n/**\n * URL-decode string value. Optimized to skip native call when no %.\n */\nfunction decode(str) {\n    if (str.indexOf(\"%\") === -1)\n        return str;\n    try {\n        return decodeURIComponent(str);\n    }\n    catch (e) {\n        return str;\n    }\n}\n/**\n * Determine if value is a Date.\n */\nfunction isDate(val) {\n    return __toString.call(val) === \"[object Date]\";\n}\n//# sourceMappingURL=index.js.map"],"names":["_ref","btnInfo","_btnInfo$path","path","name","style","onClick","React","Link","to","id","toLowerCase","className","concat","type","btnArr","isSolution","_ref$stack","stack","buttons","map","index","Button","key","setReturnLearn","backButton","xmlns","width","height","viewBox","d","easyClue","return","ButtonContainer","cookieNameRegExp","cookieValueRegExp","domainValueRegExp","pathValueRegExp","__toString","Object","prototype","toString","NullObject","C","create","startIndex","str","max","code","charCodeAt","endIndex","min","decode","indexOf","decodeURIComponent","e"],"sourceRoot":""}